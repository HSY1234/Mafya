{"version":3,"sources":["features/student/calendar/calender.module.css","features/student/team/teamMember.module.css","features/student/studentMainPage.module.css","common/spinner.module.css","features/student/header/student.module.css","features/webcam/webcam.module.css","features/Admin/mainPage/mainPage.module.css","App.module.css","common/api.js","features/webcam/cameraAPI.js","features/webcam/female/enter/notenroll.mp3","features/webcam/female/enter/putmask.mp3","features/webcam/female/enter/normalenter.mp3","features/webcam/female/enter/abnormalenter.mp3","features/webcam/female/enter/twoenter.mp3","features/webcam/female/enter/correctmask.mp3","features/webcam/female/exit/abnormalexit.mp3","features/webcam/female/exit/normalexit.mp3","features/webcam/female/exit/notenroll1.mp3","features/webcam/female/enter/absent.mp3","common/spinner.gif","common/spinner.js","common/api/axios.js","features/Admin/header/adminHeader.js","features/webcam/enterCamera.js","features/Admin/studentForm/studentForm.js","features/Admin/mainPage/ReadOnlyRow.js","features/Admin/mainPage/customPagination.js","common/modal/modal.js","features/Admin/mainPage/mainPage.js","pngs/mafya_logo.png","features/login/loginPage.js","features/student/attend/attendInformation.js","features/student/calendar/evenItem.js","features/student/calendar/calender.js","features/student/team/teamMemberRow..js","features/student/team/teamMember.js","features/student/studentMainPage.js","features/webcam/male/enter/notenroll.mp3","features/webcam/male/enter/putmask.mp3","features/webcam/male/enter/normalenter.mp3","features/webcam/male/exit/abnormalenter.mp3","features/webcam/male/enter/twoenter.mp3","features/webcam/male/enter/correctmask.mp3","features/webcam/male/exit/abnormalexit.mp3","features/webcam/male/exit/normalexit.mp3","features/webcam/male/exit/notenroll1.mp3","features/webcam/male/exit/absent.mp3","features/webcam/exitCamera.js","common/api/isLogin.js","common/router/PublicRouter.js","common/router/PrivateRouter.js","common/router/AdminRouter.js","features/webcam/womanNormalEnter.js","features/webcam/womanAbnormalEnter.js","features/webcam/womanAbsentEnter.js","features/webcam/manNormalEnter.js","features/webcam/manAbnormalEnter.js","features/webcam/manAbsentEnter.js","features/webcam/manAbnormalExit.js","features/webcam/manNormalExit.js","features/webcam/womanAbnormalExit.js","features/webcam/womanNormalExit.js","App.js","index.js","features/login/loginPage.module.css","features/Admin/studentForm/studentForm.module.css","features/student/attend/attendInformation.module.css","features/Admin/header/adminHeader.module.css"],"names":["module","exports","API_URL","detectFace","formData","axios","post","headers","response","console","log","gateLog","userCode","get","detectMasking","Spinner","class","styles","load3","line","axios1","create","baseUrl","isTokenRefreshing","refreshSubscribers","newAccessToken","interceptors","use","error","config","data","code","status","originalRequest","localStorage","getItem","withCredentials","then","accessToken","setItem","map","callback","catch","err","clear","window","location","href","retryOriginalRequest","Promise","resolve","push","reject","AdminHeader","props","onPage","history","useHistory","useState","userExcel","setUserExcel","listRegi","setlistRegi","listDown","setlistDown","fileName","setfileName","onFile","setonFile","Swal","require","fileInput","useRef","role","className","classes","menuToggle","type","menu","onThisPage","to","navbar__item","state","webCamList","webCamBtn","onClick","downAllUserBox","noDownAllUserBox","regiAllUser","regiAllUserBox","noRegiAllUserBox","uploadedFile","notUploadedFile","current","click","onSubmit","event","preventDefault","FormData","set","res","alert","document","querySelector","dataTransfer","DataTransfer","files","id","accept","ref","onChange","target","file","name","downAllUser","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","result","isConfirmed","timer","responseType","url","URL","createObjectURL","Blob","link","createElement","setAttribute","body","appendChild","logoutBtn","EnterCamera","webcamRef","canvasRef","Date","currentTime","setCurrentTime","timerId","setTimerId","humanDetacting","setHumanDetacting","faceDetacting","setFaceDetacting","model","setModel","setUserCode","isLoading","setIsLoading","isLoading2","setIsLoading2","dataURLtoFile","dataurl","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","detectMask","setTimeout","imageUrl","getScreenshot","imageFile","maskRes","attendRespone","Audio","normalenter","play","showConfirmButton","twoenter","correctmask","lateDetectMask","abnormalenter","absent","detect","net","video","readyState","videoWidth","videoHeight","width","height","obj","getContext","findHuman","filter","box","score","humanDetact","bbox","putmask","notenroll","detect1","gateResponse","normalexit","abnormalexit","notenroll1","defineInterval","getHours","timeId","setInterval","clearInterval","useEffect","cocossd","runModel","currentTimerId","wholePage","mainPageContainer","webCamBox","style","display","humanNow","noHumanNow","tmp","detectNow","nodetectNow","muted","mirrored","screenshotFormat","webCamArea","onUserMedia","webCanvas","StudentForm","useLocation","student","setName","teamCode","setTeamCode","classCode","setClassCode","phoneNum","setPhoneNum","teamLeader","setTeamLeader","isUserCodeUnique","setIsUserCodeUnique","setFile","previewUrl","setPreviewURL","fileRef","fetch","mode","blob","ext","pop","filename","metadata","tmpFile","items","add","value","userCodeDupCheckHandler","tempUserCode","trim","resultCode","prevState","getElementById","readOnly","formIsVaild","onSubmitHandler","tmpStudentInfo","put","reload","firstPageBox","overlay","Grid","container","spacing","item","xs","imagePosition","imagePlace","cutImage","imageBox","src","alt","reader","FileReader","onloadend","e","readAsDataURL","tgl","tglskewed","checked","tglbtn","for","placeholder","tempName","userInput","spacingLine","userInputSpan","updown","userCodeInput","userCodeBtnsFalse","userCodeBtns","tempClassCode","tempTeamCode","userTeamInput","tempPhoneNum","centered","disabled","registerBtn","registerBtnFalse","resetBtn","backBtn","ReadonlyRow","searchMmsHandler","updateHandler","setIds","date","substr","slice","trady","trace","CustomPagination","total","limit","page","setPage","numPages","Math","ceil","paigBox","Array","fill","v","i","notOnPage","CustomModal","open","close","header","stopPropagation","handleChildElementClick","children","MainPage","students","setStudents","dangerList","setDangerList","studentList","setStudentList","setTotal","offset","checkItems","setCheckItems","dangerCheckItems","setDangerCheckItems","modalOpen","setModalOpen","messages","setMessages","isDate","setIsDate","isName","setIsName","isUserCode","setIsUserCode","isClassCode","setIsClassCode","isTeamCode","setIsTeamCode","isAbsent","setIsAbsent","isTrady","setIsTrady","isStatus","setIsStatus","isTeamLeader","setIsTeamLeader","search","setSearch","setSearchLoading","dangerModalOpen","setDangerModalOpen","searchBox","setSearchBox","searchModalOpen","setSearchModalOpen","ids","messegesHandler","tmpMessges","stduent","pathname","fetchDangerList","fetchStudentList","content","tradyOrder","absentOrder","inner","leftSideBox","teamStudentBox","boxTitle","teamStudentList","key","includes","studentListItem","studentListItemFalse","el","prev","studentListInner","studentListCheckBox","studentName","dropdown","dropdownContent","dropdownItem","sendBtn","falseSendBtn","idArray","forEach","notChecked","dropbtn","rightSideBox","html","searchBoxBefore","searchBtnBefore","searchBoxAfter","searchEnzineBox","searchEnzineInput","tmpSearch","searchEnzineBtn","studentTableBox","studentTable","tmpStudents","sort","a","b","x","y","localeCompare","indexOf","excelBox","noResult","LoginPage","password","setPassword","isStart","setIsStart","isChange","setIsChange","loginHandler","userForm","token","isManager","loginBack","loginBackChanger","loginBackBefore","overlay_Inner","overlay_title","division","inputBox","loginInput","passwordBox","loginBtnBox","loginBtn","loginBtnFalse","infoBox","clauseText","mainPageChange","mainPage","logoBox","logoName","logo","seviceInfo","catchPhrase","seviceDetail","starBackChange","starBack","stars","AnimatedCircle","styled","circle","PI","AttendInformation","information","setInformation","month","attendTitle","attendOverlay","leftSide","userNameBox","userName","logoutBtnBox","percentageBox","totalDay","percentageP","participation","percentageChart","viewBox","cx","cy","r","stroke","strokeWidth","strokeDasharray","strokeDashoffset","rightSide","attendOneFloor","rightSideInfoBox","numBox","attendTwoFloor","EvenItem","info","_def","extendedProps","eventSpanAttend","eventSpanAbscent","eventSpanStatus","abscentColor","tardyColor","attendColor","none","Calender","events","setEvents","calendarRef","calenderInformation","dayInformation","enterTime","enterInformation","exitTime","exitInformation","attendanceStatus","typeInformation","tmpEvent","index","getMonth","calenderOverlay","calenderOverlayInner","defaultView","plugins","dayGridPlugin","weekends","contentHeight","eventContent","eventBackgroundColor","eventBorderColor","customButtons","myCustomPrev","getApi","setMonth","leftBtn","myCustomToday","today","myCustomNext","next","headerToolbar","right","TeamMemberRow","mmsHandler","teamBoxAttend","teamBoxAbscent","teamInner","teamName","teamStatus","msgBtnFalse","msgBtnTrue","TeamMember","team","setTeam","findIndex","userId","splice","teamMemberTitle","teamMemberOverlay","table","StudentMainPage","setUserId","userInfo","statusBox","attendInfoBox","teamMemberBox","calenderBox","ExitCamera","isLogin","isAdmin","PublicRoute","Component","component","restricted","rest","render","PrivateRoute","AdminRoute","WomanNormalEnter","WomanAbnormalEnter","WomanAbsentEnter","ManNormalEnter","ManAbnormalEnter","ManAbsentEnter","ManAbnormalExit","ManNormalExit","WomanAbnormalExit","WomanNormalExit","App","exact","path","studentForm","ReactDOM"],"mappings":"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","file":"static/js/main.ff7648ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"calenderOverlay\":\"calender_calenderOverlay__3P2un\",\"calenderOverlayInner\":\"calender_calenderOverlayInner__18GJq\",\"eventSpanAttend\":\"calender_eventSpanAttend__2GLgk\",\"eventSpanAbscent\":\"calender_eventSpanAbscent__1TIZq\",\"eventSpanStatus\":\"calender_eventSpanStatus__3ThXD\",\"abscentColor\":\"calender_abscentColor__3tGso\",\"tardyColor\":\"calender_tardyColor__3m0eq\",\"attendColor\":\"calender_attendColor__Yz74K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"teamMember_table__185b2\",\"teamBoxAttend\":\"teamMember_teamBoxAttend__1x8YC\",\"teamBoxAbscent\":\"teamMember_teamBoxAbscent__1k2Hh\",\"teamInner\":\"teamMember_teamInner__2OAhu\",\"teamName\":\"teamMember_teamName__3-lVt\",\"teamStatus\":\"teamMember_teamStatus__14ll-\",\"msgBtnFalse\":\"teamMember_msgBtnFalse__PrF_1\",\"msgBtnTrue\":\"teamMember_msgBtnTrue__11ZV9\",\"teamMemberTitle\":\"teamMember_teamMemberTitle__2_CBZ\",\"teamMemberOverlay\":\"teamMember_teamMemberOverlay__23i_u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wholePage\":\"studentMainPage_wholePage__oPUCy\",\"gradient\":\"studentMainPage_gradient__3tPIX\",\"inner\":\"studentMainPage_inner__2Bwrh\",\"statusBox\":\"studentMainPage_statusBox__35EtL\",\"attendInfoBox\":\"studentMainPage_attendInfoBox__ddU0g\",\"teamMemberBox\":\"studentMainPage_teamMemberBox__bZV6w\",\"calenderBox\":\"studentMainPage_calenderBox__2GzEh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadWrap\":\"spinner_loadWrap__1D2_s\",\"line\":\"spinner_line__2gchi\",\"load3\":\"spinner_load3__MKUAN\",\"loadingC\":\"spinner_loadingC__gZ86l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"student_navbar__NfDRz\",\"navbar__logo\":\"student_navbar__logo__25bvI\",\"navbar__menu\":\"student_navbar__menu__3wsj2\",\"navbar__item\":\"student_navbar__item__1ZtWL\",\"container\":\"student_container__2foaY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wholePage\":\"webcam_wholePage__2EzIv\",\"mainPageContainer\":\"webcam_mainPageContainer__Kbi3_\",\"webCamArea\":\"webcam_webCamArea__dH3xC\",\"detectNow\":\"webcam_detectNow__27y1L\",\"nodetectNow\":\"webcam_nodetectNow__2etoE\",\"tmp\":\"webcam_tmp__2xcGw\",\"humanNow\":\"webcam_humanNow__2cMr5\",\"noHumanNow\":\"webcam_noHumanNow__3EBWA\",\"webCanvas\":\"webcam_webCanvas__3ICiQ\",\"forMJDesign\":\"webcam_forMJDesign__1rt8z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wholePage\":\"mainPage_wholePage__3EcoS\",\"inner\":\"mainPage_inner__39UfA\",\"leftSideBox\":\"mainPage_leftSideBox__UEjj0\",\"dangerInfoBox\":\"mainPage_dangerInfoBox__1Yyj6\",\"teamStudentBox\":\"mainPage_teamStudentBox__AEZs6\",\"rightSideBox\":\"mainPage_rightSideBox__YhMnP\",\"boxTitle\":\"mainPage_boxTitle__202Dm\",\"dangerListBox\":\"mainPage_dangerListBox__1beTO\",\"dangerListLine\":\"mainPage_dangerListLine__3qMvf\",\"teamStudentList\":\"mainPage_teamStudentList__3uSQ1\",\"studentListItem\":\"mainPage_studentListItem__1Oomg\",\"studentListItemFalse\":\"mainPage_studentListItemFalse__1YwS3\",\"studentListInner\":\"mainPage_studentListInner__3ubkI\",\"studentListCheckBox\":\"mainPage_studentListCheckBox__1RTLx\",\"studentName\":\"mainPage_studentName__7ZgGt\",\"dropbtn\":\"mainPage_dropbtn__1Q6Uh\",\"dropdown\":\"mainPage_dropdown__1wpuL\",\"dropdownContent\":\"mainPage_dropdownContent__SCrI1\",\"dropdownItem\":\"mainPage_dropdownItem__3UXLL\",\"sendBtn\":\"mainPage_sendBtn__2U0yY\",\"falseSendBtn\":\"mainPage_falseSendBtn__1iYaw\",\"notChecked\":\"mainPage_notChecked__3u71y\",\"checked\":\"mainPage_checked__onjHe\",\"fadeInUp1\":\"mainPage_fadeInUp1__7k5my\",\"fadeInUp2\":\"mainPage_fadeInUp2__3yKNG\",\"searchBox\":\"mainPage_searchBox__1LoNY\",\"searchBoxBefore\":\"mainPage_searchBoxBefore__RJWjp\",\"searchBtnBefore\":\"mainPage_searchBtnBefore__1bqrh\",\"searchBoxAfter\":\"mainPage_searchBoxAfter__2XnRa\",\"searchEnzineBox\":\"mainPage_searchEnzineBox__2w0vK\",\"searchEnzineInput\":\"mainPage_searchEnzineInput__38h-i\",\"searchEnzineBtn\":\"mainPage_searchEnzineBtn__t5F8u\",\"noResult\":\"mainPage_noResult__3UDqW\",\"studentTableBox\":\"mainPage_studentTableBox__3jLO0\",\"studentTable\":\"mainPage_studentTable__1hmGc\",\"tableBodyRow\":\"mainPage_tableBodyRow__2gbFJ\",\"paigBox\":\"mainPage_paigBox__2BbI6\",\"notOnPage\":\"mainPage_notOnPage__3UURR\",\"onPage\":\"mainPage_onPage__atM9c\",\"excelBox\":\"mainPage_excelBox__872SK\",\"right\":\"mainPage_right__lJuwA\",\"pulsate\":\"mainPage_pulsate__1iq_1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wholeContainer\":\"App_wholeContainer__1Y__5\"};","export const API_URL = \"https://mafya.ml/api/\";\r\n// export const API_URL = \"http://localhost:8080/api/\";\r\n","import axios from \"axios\";\r\nimport { API_URL } from \"../../common/api\";\r\n\r\nexport const detectFace = async (formData) => {\r\n  try {\r\n    const response = await axios.post(API_URL + \"img/face/\", formData, {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    });\r\n    console.log(response);\r\n    return response;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const gateLog = async (userCode) => {\r\n  try {\r\n    const response = await axios.get(API_URL + `gatelog/${userCode}/`);\r\n\r\n    return response;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const detectMasking = async (formData) => {\r\n  try {\r\n    const response = await axios.post(API_URL + \"img/mask/\", formData, {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    });\r\n\r\n    return response;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/notenroll.19bbf980.mp3\";","export default __webpack_public_path__ + \"static/media/putmask.b718da42.mp3\";","export default __webpack_public_path__ + \"static/media/normalenter.67f8338d.mp3\";","export default __webpack_public_path__ + \"static/media/abnormalenter.8b7056cd.mp3\";","export default __webpack_public_path__ + \"static/media/twoenter.1edbcd9a.mp3\";","export default __webpack_public_path__ + \"static/media/correctmask.f5cbd4ad.mp3\";","export default __webpack_public_path__ + \"static/media/abnormalexit.a5286bad.mp3\";","export default __webpack_public_path__ + \"static/media/normalexit.1aa5791c.mp3\";","export default __webpack_public_path__ + \"static/media/notenroll1.ef0453e9.mp3\";","export default __webpack_public_path__ + \"static/media/absent.aae6e1a7.mp3\";","export default __webpack_public_path__ + \"static/media/spinner.88d72c55.gif\";","import animation from \"./spinner.gif\"\r\nimport styles from \"./spinner.module.css\"\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div>\r\n      <div class={styles.load3}>\r\n        <div class={styles.line}></div>\r\n        <div class={styles.line}></div>\r\n        <div class={styles.line}></div>\r\n        <div class={styles.line}></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner\r\n","import axios from \"axios\";\r\nimport { API_URL } from \"../api\";\r\n\r\nconst axios1 = axios.create({\r\n  baseUrl: \"\",\r\n});\r\nlet isTokenRefreshing = false;\r\nlet refreshSubscribers = [];\r\nlet newAccessToken = \"\";\r\n\r\nconst onTokenRefreshed = (accessToken) => {\r\n  refreshSubscribers.map((callback) => callback(accessToken));\r\n};\r\n\r\nconst addRefreshSubscriber = (callback) => {\r\n  refreshSubscribers.push(callback);\r\n};\r\n\r\naxios1.interceptors.response.use(\r\n  (response) => {\r\n    // const nowTime = moment(new Date()).format()\r\n    // const loginDate = localStorage.getItem('expireDate')\r\n    // console.log(moment.duration((nowTime).diff(loginDate).asMilliseconds()))\r\n    return response;\r\n  },\r\n  async (error) => {\r\n    const {\r\n      config,\r\n      response: { data },\r\n    } = error;\r\n    console.log(config, data);\r\n    console.log(error);\r\n    const code = data.status;\r\n    const originalRequest = config;\r\n\r\n    if (code === 408) {\r\n      // if (error.response.data.message === \"\") {\r\n      if (!isTokenRefreshing) {\r\n        isTokenRefreshing = true;\r\n        console.log(\"reissue 전\");\r\n        const token = localStorage.getItem(\"token\");\r\n        axios\r\n          .get(API_URL + \"token/reissue\", { withCredentials: true })\r\n          .then((response) => {\r\n            console.log(\"reissue 정상\");\r\n            localStorage.setItem(\"user\", response.data.accessToken);\r\n            newAccessToken = response.data.accessToken;\r\n            isTokenRefreshing = false;\r\n            originalRequest.headers = {\r\n              ...originalRequest.headers,\r\n              accessToken: newAccessToken,\r\n            };\r\n            // return axios(originalRequest)\r\n            onTokenRefreshed(newAccessToken);\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"reissue 마무리\");\r\n            localStorage.clear();\r\n            window.location.href = \"/\";\r\n          });\r\n      }\r\n      const retryOriginalRequest = new Promise((resolve) => {\r\n        addRefreshSubscriber((accessToken) => {\r\n          originalRequest.headers = {\r\n            ...originalRequest.headers,\r\n            accessToken: accessToken,\r\n          };\r\n          resolve(axios1(originalRequest));\r\n        });\r\n      });\r\n      return retryOriginalRequest;\r\n      // }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axios1;\r\n","import classes from \"./adminHeader.module.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../../common/api\";\r\nimport { useState, useRef } from \"react\";\r\nimport axios1 from \"../../../common/api/axios\";\r\n\r\nconst AdminHeader = (props) => {\r\n  const { onPage } = props;\r\n  const history = useHistory();\r\n  const [userExcel, setUserExcel] = useState(null);\r\n  const [listRegi, setlistRegi] = useState(false);\r\n  const [listDown, setlistDown] = useState(false);\r\n  const [fileName, setfileName] = useState(\"파일을 선택해 주세요\");\r\n  const [onFile, setonFile] = useState(false);\r\n  const Swal = require(\"sweetalert2\");\r\n  const logoutHandler = (event) => {\r\n    Swal.fire({\r\n      title: \"확실한가요?\",\r\n      text: \"관리할 학생들이 없는지 확인하세요.\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3396f4\",\r\n      cancelButtonColor: \"#dc143cac\",\r\n      confirmButtonText: \"로그아웃\",\r\n      cancelButtonText: \"취소\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: `로그아웃 되었습니다.`,\r\n          timer: 1500,\r\n        });\r\n        axios1\r\n          .get(API_URL + \"student/logout/\", {\r\n            headers: {\r\n              accessToken: window.localStorage.getItem(\"token\"),\r\n            },\r\n          })\r\n          .then((res) => {\r\n            window.localStorage.clear();\r\n            history.push(\"/\");\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            console.log(err);\r\n          });\r\n      }\r\n    });\r\n  };\r\n  const changeUserExcelHandler = (event) => {\r\n    event.preventDefault();\r\n    console.log(event.target.files[0]);\r\n    let file = event.target.files[0];\r\n    setUserExcel(file);\r\n    setfileName(event.target.files[0].name);\r\n    setonFile(true);\r\n  };\r\n\r\n  const submitUserExcelHandler = (event) => {\r\n    event.preventDefault();\r\n    let formData = new FormData();\r\n    formData.set(\"uploadUserFile\", userExcel);\r\n    axios1\r\n      .post(API_URL + \"excel/upload\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          accessToken: window.localStorage.getItem(\"token\"),\r\n          // \"Access-Control-Allow-Origin\": \"*\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        alert(\"등록되었습니다.\");\r\n        setUserExcel(null);\r\n        const fileInput = document.querySelector('input[type=\"file\"]');\r\n        const dataTransfer = new DataTransfer();\r\n        fileInput.files = dataTransfer.files;\r\n      })\r\n      .catch((err) => {\r\n        alert(\"등록 실패\");\r\n        setUserExcel(null);\r\n        const fileInput = document.querySelector('input[type=\"file\"]');\r\n        const dataTransfer = new DataTransfer();\r\n        fileInput.files = dataTransfer.files;\r\n      });\r\n  };\r\n  const userExcelHandler = (event) => {\r\n    Swal.fire({\r\n      title: \"학생 정보를 저장하시겠습니까?\",\r\n      text: \"등록된 모든 학생 정보를 저장합니다.\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3396f4\",\r\n      cancelButtonColor: \"#dc143cac\",\r\n      confirmButtonText: \"저장\",\r\n      cancelButtonText: \"취소\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: `저장 되었습니다.`,\r\n          timer: 1500,\r\n        });\r\n        event.preventDefault();\r\n\r\n        axios1\r\n          .get(API_URL + \"excel/download\", {\r\n            headers: {\r\n              accessToken: window.localStorage.getItem(\"token\"),\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            responseType: \"blob\",\r\n          })\r\n          .then((response) => {\r\n            const url = window.URL.createObjectURL(\r\n              new Blob([response.data], {\r\n                type: response.headers[\"content-type\"],\r\n              })\r\n            );\r\n            const link = document.createElement(\"a\");\r\n            link.href = url;\r\n            link.setAttribute(\"download\", \"user.xlsx\");\r\n            document.body.appendChild(link);\r\n            link.click();\r\n          });\r\n      }\r\n    });\r\n  };\r\n  const fileInput = useRef();\r\n  const clickRegi = () => {\r\n    setlistRegi(!listRegi);\r\n  };\r\n  const clickDown = () => {\r\n    setlistDown(!listDown);\r\n  };\r\n\r\n  return (\r\n    // <nav className={classes.navbar}>\r\n    // <Link to=\"/admin\" className={classes.navbar__logo}>\r\n    //   SSAFY\r\n    // </Link>\r\n    //   <ul className={classes.navbar__menu}>\r\n    //     <Link to=\"/admin\" className={classes.navbar__item}>\r\n    //       Main\r\n    //     </Link>\r\n    // <Link to=\"/admin/form\" state={null} className={classes.navbar__item}>\r\n    //   Create\r\n    // </Link>\r\n    //     <span className={classes.navbar__item} onClick={logoutHandler}>\r\n    //       Logout\r\n    //     </span>\r\n    //     <Link to=\"/enter\" className={classes.navbar__item}>\r\n    //       프로님 버전\r\n    //     </Link>\r\n    //     <Link to=\"/exit\" className={classes.navbar__item}>\r\n    //       컨설턴트님 버전\r\n    //     </Link>\r\n    //     {/* <span className={classes.navbar__item}>Logout</span> */}\r\n    //   </ul>\r\n    // </nav>\r\n    <nav role=\"navigation\">\r\n      <div className={classes.menuToggle}>\r\n        <input type=\"checkbox\" />\r\n\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n\r\n        <ul className={classes.menu}>\r\n          <li>\r\n            {onPage === 1 ? (\r\n              <div className={classes.onThisPage}>학생 조회</div>\r\n            ) : (\r\n              <Link to=\"/admin\" className={classes.navbar__item}>\r\n                학생 조회\r\n              </Link>\r\n            )}\r\n            {/* <Link to=\"/admin\" className={classes.navbar__item}>\r\n              Main\r\n            </Link> */}\r\n          </li>\r\n\r\n          <li>\r\n            {onPage === 2 ? (\r\n              <div className={classes.onThisPage}>학생 추가</div>\r\n            ) : (\r\n              <Link\r\n                to=\"/admin/form\"\r\n                state={null}\r\n                className={classes.navbar__item}\r\n              >\r\n                학생 추가\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li className={classes.webCamList}>\r\n            <span className={classes.webCamBtn} onClick={clickDown}>\r\n              출석 시스템\r\n            </span>\r\n            <div\r\n              className={\r\n                listDown ? classes.downAllUserBox : classes.noDownAllUserBox\r\n              }\r\n            >\r\n              <Link to=\"/enter\" className={classes.navbar__item}>\r\n                프로님 버전\r\n              </Link>\r\n              <Link to=\"/camera\" className={classes.navbar__item}>\r\n                컨설턴트님 버전\r\n              </Link>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <span className={classes.regiAllUser} onClick={clickRegi}>\r\n              사용자 일괄 등록\r\n            </span>\r\n            <div\r\n              className={\r\n                listRegi ? classes.regiAllUserBox : classes.noRegiAllUserBox\r\n              }\r\n            >\r\n              <div\r\n                className={\r\n                  onFile ? classes.uploadedFile : classes.notUploadedFile\r\n                }\r\n                onClick={() => {\r\n                  fileInput.current.click();\r\n                }}\r\n              >\r\n                {fileName}\r\n              </div>\r\n              <button\r\n                onClick={() => {\r\n                  fileInput.current.click();\r\n                }}\r\n              >\r\n                upload\r\n              </button>\r\n              <form onSubmit={submitUserExcelHandler}>\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"user_excel\"\r\n                  accept=\".xls,.xlsx\"\r\n                  ref={fileInput}\r\n                  onChange={changeUserExcelHandler}\r\n                />\r\n\r\n                <button type=\"submit\">\r\n                  <span className=\"material-symbols-outlined\">file_upload</span>\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <span className={classes.downAllUser} onClick={userExcelHandler}>\r\n              사용자 일괄 저장\r\n            </span>\r\n            {/* <div\r\n              className={\r\n                listDown ? classes.downAllUserBox : classes.noDownAllUserBox\r\n              }\r\n            >\r\n              <span\r\n                onClick={userExcelHandler}\r\n                className=\"material-symbols-outlined\"\r\n              >\r\n                system_update_alt\r\n              </span>\r\n            </div> */}\r\n          </li>\r\n          <li>\r\n            <span className={classes.logoutBtn} onClick={logoutHandler}>\r\n              로그아웃\r\n            </span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default AdminHeader;\r\n","import { useRef, useState, useEffect } from \"react\"\r\nimport * as tf from \"@tensorflow/tfjs\"\r\nimport * as cocossd from \"@tensorflow-models/coco-ssd\"\r\nimport Webcam from \"react-webcam\"\r\n\r\nimport { drawRect } from \"./utilities\"\r\nimport axios from \"axios\"\r\nimport { API_URL } from \"../../common/api\"\r\nimport styles from \"./webcam.module.css\"\r\nimport { detectFace, detectMasking, gateLog } from \"./cameraAPI\"\r\n\r\nimport notenroll from \"./female/enter/notenroll.mp3\"\r\nimport putmask from \"./female/enter/putmask.mp3\"\r\nimport normalenter from \"./female/enter/normalenter.mp3\"\r\nimport abnormalenter from \"./female/enter/abnormalenter.mp3\"\r\nimport twoenter from \"./female/enter/twoenter.mp3\"\r\nimport correctmask from \"./female/enter/correctmask.mp3\"\r\nimport abnormalexit from \"./female/exit/abnormalexit.mp3\"\r\nimport normalexit from \"./female/exit/normalexit.mp3\"\r\nimport notenroll1 from \"./female/exit/notenroll1.mp3\"\r\nimport absent from \"./female/enter/absent.mp3\"\r\nimport { HtmlElementTypeError } from \"@testing-library/jest-dom/dist/utils\"\r\nimport Spinner from \"../../common/spinner\"\r\n\r\nimport AdminHeader from \"../Admin/header/adminHeader\"\r\nconst Swal = require(\"sweetalert2\")\r\n\r\nfunction EnterCamera() {\r\n  const webcamRef = useRef(null)\r\n  const canvasRef = useRef(null)\r\n  const [currentTime, setCurrentTime] = useState(new Date())\r\n  const [timerId, setTimerId] = useState(null)\r\n  const [humanDetacting, setHumanDetacting] = useState(false)\r\n  const [faceDetacting, setFaceDetacting] = useState(false)\r\n  const [model, setModel] = useState(null)\r\n  const [userCode, setUserCode] = useState(null)\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isLoading2, setIsLoading2] = useState(true)\r\n  const handleUserMedia = () => {\r\n    console.log(\"웹캠 로딩끝났어요!!\")\r\n    setIsLoading2(false)\r\n  }\r\n  // const handleUserMedia = () => {\r\n  //   setTimeout(() => {\r\n  //     setIsLoading2(false);\r\n  //     console.log(\"나 소환해\");\r\n  //   }, 1000);\r\n  // };\r\n  const dataURLtoFile = (dataurl, fileName) => {\r\n    var arr = dataurl.split(\",\"),\r\n      mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]),\r\n      n = bstr.length,\r\n      u8arr = new Uint8Array(n)\r\n\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n)\r\n    }\r\n\r\n    return new File([u8arr], fileName, { type: mime })\r\n  }\r\n\r\n  const detectMask = (userCode) => {\r\n    setFaceDetacting(true)\r\n    return new Promise((resolve) => {\r\n      setTimeout(async () => {\r\n        const imageUrl = webcamRef.current.getScreenshot()\r\n        let imageFile = dataURLtoFile(imageUrl, \"test1.jpeg\")\r\n        let formData = new FormData()\r\n        formData.set(\"file\", imageFile)\r\n        formData.set(\"userCode\", userCode)\r\n        const maskRes = await detectMasking(formData)\r\n        if (maskRes.data.status === \"0\") {\r\n          const attendRespone = await gateLog(userCode)\r\n          if (attendRespone.data === 0) {\r\n            new Audio(normalenter).play()\r\n            Swal.fire({\r\n              icon: \"success\",\r\n              title: `${maskRes.data.name}님 출석되었습니다.`,\r\n              showConfirmButton: false,\r\n              timer: 3000,\r\n            })\r\n            // console.log(attendRespone.data); 이걸로 분기\r\n            return new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                setHumanDetacting(false)\r\n                setFaceDetacting(false)\r\n                setUserCode(null)\r\n              }, 3000)\r\n            })\r\n          } else if (attendRespone.data === 4) {\r\n            new Audio(twoenter).play()\r\n            Swal.fire({\r\n              icon: \"success\",\r\n              title: `${maskRes.data.name}님 이미 입실하셨습니다.`,\r\n              showConfirmButton: false,\r\n              timer: 3000,\r\n            })\r\n            // console.log(attendRespone.data); 이걸로 분기\r\n            return new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                setHumanDetacting(false)\r\n                setFaceDetacting(false)\r\n                setUserCode(null)\r\n              }, 3000)\r\n            })\r\n          }\r\n        } else if (maskRes.data.status === \"1\") {\r\n          // 모달 창\r\n          new Audio(correctmask).play()\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          })\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false)\r\n              setFaceDetacting(false)\r\n            }, 3000)\r\n          })\r\n        } else if (maskRes.data.status === \"2\") {\r\n          new Audio(correctmask).play()\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          })\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false)\r\n              setFaceDetacting(false)\r\n            }, 3000)\r\n          })\r\n        } else {\r\n          new Audio(correctmask).play()\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          })\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false)\r\n              setFaceDetacting(false)\r\n            }, 3000)\r\n          })\r\n        }\r\n      })\r\n    }, 6000)\r\n  }\r\n\r\n  const lateDetectMask = (userCode, attendRespone) => {\r\n    setFaceDetacting(true)\r\n    return new Promise((resolve) => {\r\n      setTimeout(async () => {\r\n        const imageUrl = webcamRef.current.getScreenshot()\r\n        let imageFile = dataURLtoFile(imageUrl, \"test1.jpeg\")\r\n        let formData = new FormData()\r\n        formData.set(\"file\", imageFile)\r\n        formData.set(\"userCode\", userCode)\r\n        const maskRes = await detectMasking(formData)\r\n        if (maskRes.data.status === \"0\") {\r\n          if (attendRespone === 10) {\r\n            new Audio(abnormalenter).play()\r\n            Swal.fire({\r\n              icon: \"success\",\r\n              title: `${maskRes.data.name}님 지각입니다.`,\r\n              showConfirmButton: false,\r\n              timer: 3000,\r\n            })\r\n            // console.log(attendRespone.data); 이걸로 분기\r\n            return new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                setHumanDetacting(false)\r\n                setFaceDetacting(false)\r\n                setUserCode(null)\r\n              }, 3000)\r\n            })\r\n          } else if (attendRespone === 99) {\r\n            new Audio(absent).play()\r\n            Swal.fire({\r\n              icon: \"success\",\r\n              title: `${maskRes.data.name}님 지각 누적으로 결석했습니다.`,\r\n              showConfirmButton: false,\r\n              timer: 3000,\r\n            })\r\n            // console.log(attendRespone.data); 이걸로 분기\r\n            return new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                setHumanDetacting(false)\r\n                setFaceDetacting(false)\r\n                setUserCode(null)\r\n              }, 3000)\r\n            })\r\n          }\r\n        } else if (maskRes.data.status === \"1\") {\r\n          // 모달 창\r\n          new Audio(correctmask).play()\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          })\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false)\r\n              setFaceDetacting(false)\r\n            }, 3000)\r\n          })\r\n        } else if (maskRes.data.status === \"2\") {\r\n          new Audio(correctmask).play()\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          })\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false)\r\n              setFaceDetacting(false)\r\n            }, 3000)\r\n          })\r\n        } else {\r\n          new Audio(correctmask).play()\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          })\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false)\r\n              setFaceDetacting(false)\r\n            }, 3000)\r\n          })\r\n        }\r\n      })\r\n    }, 6000)\r\n  }\r\n\r\n  const detect = async (net) => {\r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video\r\n      const videoWidth = webcamRef.current.video.videoWidth\r\n      const videoHeight = webcamRef.current.video.videoHeight\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth\r\n      webcamRef.current.video.height = videoHeight\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth\r\n      canvasRef.current.height = videoHeight\r\n\r\n      // Make Detections\r\n      const obj = await net.detect(video)\r\n\r\n      // Draw mesh\r\n\r\n      const ctx = canvasRef.current.getContext(\"2d\")\r\n\r\n      console.log(obj)\r\n      const findHuman = obj\r\n        ? obj.filter((box) => {\r\n            return box.class === \"person\" && box.score >= 0.8\r\n          })\r\n        : null\r\n\r\n      let humanDetact = findHuman\r\n        ? findHuman.filter((box) => {\r\n            return (\r\n              15 <= box.bbox[0] <= 160 &&\r\n              15 <= box.bbox[1] <= 160 &&\r\n              box.bbox[2] >= 350 &&\r\n              box.bbox[3] >= 300\r\n            )\r\n          })\r\n        : []\r\n      console.log(humanDetact)\r\n      if (humanDetact.length > 0) {\r\n        setHumanDetacting(true)\r\n        // new Audio(humanDetactMp3).play();\r\n        return new Promise((resolve) => {\r\n          setTimeout(async () => {\r\n            const imageUrl = webcamRef.current.getScreenshot()\r\n            let imageFile = dataURLtoFile(imageUrl, \"test.jpeg\")\r\n            let formData = new FormData()\r\n            formData.set(\"file\", imageFile)\r\n            const res = await detectFace(formData)\r\n\r\n            if (res.data.status === \"0\") {\r\n              // const gateResponse = await gateLog(res.data.userCode);\r\n              new Audio(putmask).play()\r\n              Swal.fire({\r\n                icon: \"success\",\r\n                title: `${res.data.name}님 어서오세요.`,\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              })\r\n              setUserCode(res.data.userCode)\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  detectMask(res.data.userCode)\r\n                }, 6000)\r\n              })\r\n            } else if (res.data.status === \"1\") {\r\n              new Audio(notenroll).play()\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"오류\",\r\n                text: \"DB에 등록된 사용자가 아닙니다.\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              })\r\n\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false)\r\n                }, 2500)\r\n              })\r\n            } else if (res.data.status === \"2\") {\r\n              new Audio(notenroll).play()\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"오류\",\r\n                text: \"중앙으로 와주세요\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              })\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false)\r\n                }, 2500)\r\n              })\r\n            }\r\n          }, 2000)\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  const detect1 = async (net) => {\r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video\r\n      const videoWidth = webcamRef.current.video.videoWidth\r\n      const videoHeight = webcamRef.current.video.videoHeight\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth\r\n      webcamRef.current.video.height = videoHeight\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth\r\n      canvasRef.current.height = videoHeight\r\n\r\n      // Make Detections\r\n      const obj = await net.detect(video)\r\n\r\n      // Draw mesh\r\n\r\n      const ctx = canvasRef.current.getContext(\"2d\")\r\n\r\n      console.log(obj)\r\n      const findHuman = obj\r\n        ? obj.filter((box) => {\r\n            return box.class === \"person\" && box.score >= 0.8\r\n          })\r\n        : null\r\n\r\n      let humanDetact = findHuman\r\n        ? findHuman.filter((box) => {\r\n            return (\r\n              15 <= box.bbox[0] <= 160 &&\r\n              15 <= box.bbox[1] <= 160 &&\r\n              box.bbox[2] >= 350 &&\r\n              box.bbox[3] >= 300\r\n            )\r\n          })\r\n        : []\r\n      console.log(humanDetact)\r\n      if (humanDetact.length > 0) {\r\n        setHumanDetacting(true)\r\n        // new Audio(humanDetactMp3).play();\r\n        return new Promise((resolve) => {\r\n          setTimeout(async () => {\r\n            const imageUrl = webcamRef.current.getScreenshot()\r\n            let imageFile = dataURLtoFile(imageUrl, \"test.jpeg\")\r\n            let formData = new FormData()\r\n            formData.set(\"file\", imageFile)\r\n            const res = await detectFace(formData)\r\n\r\n            if (res.data.status === \"0\") {\r\n              let gateResponse = await gateLog(res.data.userCode)\r\n\r\n              if (gateResponse.data === 3 || gateResponse.data === 12) {\r\n                new Audio(normalexit).play()\r\n\r\n                Swal.fire({\r\n                  icon: \"success\",\r\n                  title: `${res.data.name}님 퇴실하셨습니다.`,\r\n                  showConfirmButton: false,\r\n                  timer: 2500,\r\n                })\r\n\r\n                return new Promise((resolve) => {\r\n                  setTimeout(() => {\r\n                    setHumanDetacting(false)\r\n                  }, 2500)\r\n                })\r\n              } else if (gateResponse.data === 2 || gateResponse.data === 11) {\r\n                new Audio(abnormalexit).play()\r\n\r\n                Swal.fire({\r\n                  icon: \"success\",\r\n                  title: `${res.data.name}님 조기퇴실하셨습니다.`,\r\n                  showConfirmButton: false,\r\n                  timer: 2500,\r\n                })\r\n\r\n                return new Promise((resolve) => {\r\n                  setTimeout(() => {\r\n                    setHumanDetacting(false)\r\n                  }, 2500)\r\n                })\r\n              } else if (gateResponse.data === 10 || gateResponse.data === 99) {\r\n                new Audio(putmask).play()\r\n\r\n                Swal.fire({\r\n                  icon: \"success\",\r\n                  title: `${res.data.name}님 입실했습니다.`,\r\n                  showConfirmButton: false,\r\n                  timer: 2500,\r\n                })\r\n\r\n                setUserCode(res.data.userCode)\r\n                return new Promise((resolve) => {\r\n                  setTimeout(() => {\r\n                    lateDetectMask(res.data.userCode, gateResponse.data)\r\n                  }, 6000)\r\n                })\r\n              }\r\n            } else if (res.data.status === \"1\") {\r\n              new Audio(notenroll).play()\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"오류\",\r\n                text: \"DB에 등록된 사용자가 아닙니다.\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              })\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false)\r\n                }, 2500)\r\n              })\r\n            } else if (res.data.status === \"2\") {\r\n              new Audio(notenroll1).play()\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"오류\",\r\n                text: \"중앙으로 와주세요\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              })\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false)\r\n                }, 2500)\r\n              })\r\n            }\r\n          }, 2000)\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  const defineInterval = (net) => {\r\n    if (currentTime.getHours() < 9) {\r\n      if (net) {\r\n        const timeId = setInterval(() => {\r\n          detect(net)\r\n        }, 1000)\r\n        setTimerId(timeId)\r\n      }\r\n      if (humanDetacting) {\r\n        console.log(\"인간 인식\", net)\r\n        clearInterval(timerId)\r\n        setTimerId(null)\r\n      }\r\n    } else {\r\n      if (net) {\r\n        const timeId = setInterval(() => {\r\n          detect1(net)\r\n        }, 1000)\r\n        setTimerId(timeId)\r\n      }\r\n      if (humanDetacting) {\r\n        console.log(\"인간 인식\", net)\r\n        clearInterval(timerId)\r\n        setTimerId(null)\r\n      }\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    async function runModel() {\r\n      const net = await cocossd.load()\r\n      console.log(\"모델 업로드 끝\")\r\n      setModel(net)\r\n      setIsLoading(false)\r\n      // setIsLoading2(false);\r\n      // defineInterval(net)\r\n    }\r\n    runModel()\r\n    // runCocoSsd();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    console.log(model)\r\n    if (model && !humanDetacting) {\r\n      console.log(\"확인\")\r\n\r\n      defineInterval(model)\r\n    } else if (model && humanDetacting) {\r\n      defineInterval(null)\r\n    }\r\n  }, [humanDetacting, model])\r\n\r\n  useEffect(() => {\r\n    const currentTimerId = setInterval(() => {\r\n      setCurrentTime(new Date())\r\n    })\r\n    return clearInterval(currentTimerId)\r\n  }, [])\r\n\r\n  return (\r\n    <div className={styles.wholePage}>\r\n      <AdminHeader />\r\n      <div className={styles.mainPageContainer}>\r\n        <div\r\n          className={styles.webCamBox}\r\n          style={{\r\n            display: !isLoading && !isLoading2 ? \"\" : \"none\",\r\n          }}\r\n        >\r\n          <div className={faceDetacting ? styles.humanNow : styles.noHumanNow}>\r\n            <div\r\n              className={\r\n                humanDetacting\r\n                  ? faceDetacting\r\n                    ? styles.tmp\r\n                    : styles.detectNow\r\n                  : styles.nodetectNow\r\n              }\r\n            >\r\n              <Webcam\r\n                ref={webcamRef}\r\n                muted={true}\r\n                mirrored={true}\r\n                screenshotFormat=\"image/jpeg\"\r\n                className={styles.webCamArea}\r\n                onUserMedia={handleUserMedia}\r\n              />\r\n              <canvas ref={canvasRef} className={styles.webCanvas} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: !isLoading && !isLoading2 ? \"none\" : \"\",\r\n          }}\r\n        >\r\n          <Spinner />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EnterCamera\r\n","import axios from \"axios\";\r\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { API_URL } from \"../../../common/api\";\r\nimport AdminHeader from \"../header/adminHeader\";\r\nimport styles from \"./studentForm.module.css\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport axios1 from \"../../../common/api/axios\";\r\n\r\nconst StudentForm = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const student = location.state;\r\n  const [name, setName] = useState(student ? student.name : \"\");\r\n  const [userCode, setUserCode] = useState(student ? student.userCode : \"\");\r\n  const [teamCode, setTeamCode] = useState(student ? student.teamCode : \"\");\r\n  const [classCode, setClassCode] = useState(student ? student.classCode : \"\");\r\n  const [phoneNum, setPhoneNum] = useState(student ? student.phoneNum : \"\");\r\n\r\n  const [teamLeader, setTeamLeader] = useState(\r\n    student ? student.teamLeader : null\r\n  );\r\n  const [isUserCodeUnique, setIsUserCodeUnique] = useState(\r\n    student ? true : false\r\n  );\r\n  const [file, setFile] = useState(null);\r\n  const [previewUrl, setPreviewURL] = useState(null);\r\n  const fileRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!student) {\r\n      setName(\"\");\r\n      setUserCode(\"\");\r\n      setTeamCode(\"\");\r\n      setClassCode(\"\");\r\n      setPhoneNum(\"\");\r\n      setTeamLeader(false);\r\n      setIsUserCodeUnique(false);\r\n      setFile(null);\r\n      setPreviewURL(null);\r\n      const fileInput = document.querySelector('input[type=\"file\"]');\r\n      const dataTransfer = new DataTransfer();\r\n      fileInput.files = dataTransfer.files;\r\n    } else {\r\n      axios\r\n        .get(API_URL + `img/${student.userCode}`, {\r\n          headers: {\r\n            accessToken: window.localStorage.getItem(\"token\"),\r\n          },\r\n        })\r\n        .then(async (res) => {\r\n          const url = res.data;\r\n          setPreviewURL(url);\r\n          const response = await fetch(url, {\r\n            mode: \"cors\",\r\n          });\r\n          console.log(response);\r\n          const data = await response.blob();\r\n          console.log(data);\r\n          const ext = url.split(\".\").pop();\r\n          const filename = url.split(\"/\").pop();\r\n          const metadata = { type: `image/${ext}` };\r\n          const tmpFile = new File([data], filename, metadata);\r\n          setFile(tmpFile);\r\n          const fileInput = document.querySelector('input[type=\"file\"]');\r\n          const dataTransfer = new DataTransfer();\r\n          dataTransfer.items.add(tmpFile);\r\n          fileInput.files = dataTransfer.files;\r\n        });\r\n    }\r\n  }, [student]);\r\n  const nameChangeHandler = (event) => {\r\n    const tempName = event.target.value;\r\n    setName(tempName);\r\n  };\r\n\r\n  const userCodeChangeHandler = (event) => {\r\n    const tempUserCode = event.target.value;\r\n    setUserCode(tempUserCode);\r\n  };\r\n\r\n  const userCodeDupCheckHandler = async () => {\r\n    const tempUserCode = userCode;\r\n    if (userCode.trim() === \"\") {\r\n      alert(\"학번을 입력해주세요\");\r\n      return;\r\n    }\r\n    axios\r\n      .get(API_URL + `student/checkId/${tempUserCode}`, {\r\n        headers: {\r\n          accessToken: window.localStorage.getItem(\"token\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.resultCode === 0) {\r\n          alert(\"사용 가능한 학번입니다.\");\r\n          setName((prevState) => name);\r\n          setIsUserCodeUnique(() => true);\r\n          document.getElementById(\"userCode\").readOnly = true;\r\n        } else if (res.data.resultCode === 1) {\r\n          alert(\"이미 존재하는 학번입니다.\");\r\n          setIsUserCodeUnique(() => false);\r\n          return;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        alert(\"에러 발생\");\r\n      });\r\n  };\r\n\r\n  const teamCodeChangeHandler = (event) => {\r\n    const tempTeamCode = event.target.value;\r\n    setTeamCode(tempTeamCode);\r\n  };\r\n\r\n  const classCodeChangeHandler = (event) => {\r\n    const tempClassCode = event.target.value;\r\n    setClassCode(tempClassCode);\r\n  };\r\n\r\n  const phoneNumChangeHandler = (event) => {\r\n    const tempPhoneNum = event.target.value;\r\n    setPhoneNum(tempPhoneNum);\r\n  };\r\n\r\n  const teamLeaderChangeHandler = (event) => {\r\n    console.log(event.target);\r\n    setTeamLeader(!teamLeader);\r\n    // if (event.target.value === \"true\") {\r\n    //   const tempTeamLeader = true\r\n    //   console.log(tempTeamLeader)\r\n    //   setTeamLeader(tempTeamLeader)\r\n    // } else if (event.target.value === \"false\") {\r\n    //   const tempTeamLeader = false\r\n    //   console.log(tempTeamLeader)\r\n    //   setTeamLeader(tempTeamLeader)\r\n    // } else if (event.target.value === \"null\") {\r\n    //   setTeamLeader(null)\r\n    // }\r\n  };\r\n\r\n  const handleFileOnChange = (event) => {\r\n    event.preventDefault();\r\n    let file = event.target.files[0];\r\n    let reader = new FileReader();\r\n\r\n    reader.onloadend = (e) => {\r\n      setFile(file);\r\n      setPreviewURL(reader.result);\r\n    };\r\n    if (file) reader.readAsDataURL(file);\r\n  };\r\n\r\n  // const handleFileButtonClick = (e) => {\r\n  //   e.preventDefault();\r\n  //   fileRef.current.click();\r\n  // };\r\n\r\n  const isTeamLeader = (value) => {\r\n    console.log(typeof value);\r\n    console.log(value);\r\n    if (typeof value === \"boolean\") {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  const formIsVaild =\r\n    name &&\r\n    userCode &&\r\n    teamCode &&\r\n    classCode &&\r\n    phoneNum &&\r\n    isUserCodeUnique &&\r\n    isTeamLeader(teamLeader) &&\r\n    file;\r\n\r\n  const onSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    const tmpStudentInfo = {\r\n      name,\r\n      userCode,\r\n      teamCode,\r\n      classCode,\r\n      phoneNum,\r\n      teamLeader,\r\n      // file,\r\n    };\r\n\r\n    if (!student) {\r\n      axios1\r\n        .post(API_URL + \"student/\", tmpStudentInfo, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            accessToken: window.localStorage.getItem(\"token\"),\r\n            // \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log(\"학생 정보 등록 완료\");\r\n        })\r\n        .catch((err) => {\r\n          alert(\"학생 정보 등록 실패\");\r\n        });\r\n      let formData = new FormData();\r\n      formData.set(\"file\", file);\r\n      formData.set(\"userCode\", userCode);\r\n      axios1\r\n        .post(API_URL + `img/register/${userCode}`, formData, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n            accessToken: window.localStorage.getItem(\"token\"),\r\n            // \"Access-Control-Allow-Origin\": \"*\",\r\n          },\r\n        })\r\n        .then((res) => {\r\n          alert(\"학생 정보 등록 완료\");\r\n          window.location.reload();\r\n        })\r\n        .catch((err) => {\r\n          alert(\"학생 정보 등록 실패\");\r\n        });\r\n    } else {\r\n      axios1\r\n        .put(API_URL + `student/${student.id}`, tmpStudentInfo, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            accessToken: window.localStorage.getItem(\"token\"),\r\n            // \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log(\"학생 정보 수정 완료\");\r\n        })\r\n        .catch((err) => {\r\n          alert(\"학생 정보 수정 실패\");\r\n        });\r\n\r\n      let formData = new FormData();\r\n      formData.set(\"file\", file);\r\n      formData.set(\"userCode\", userCode);\r\n      axios1\r\n        .post(API_URL + `img/register/${userCode}`, formData, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n            accessToken: window.localStorage.getItem(\"token\"),\r\n            // \"Access-Control-Allow-Origin\": \"*\",\r\n          },\r\n        })\r\n        .then((res) => {\r\n          alert(\"학생 정보 수정 완료\");\r\n          history.push(\"/admin\");\r\n        })\r\n        .catch((err) => {\r\n          alert(\"학생 정보 수정 실패\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const backHandler = () => {\r\n    history.push(\"/admin\");\r\n  };\r\n  const resetButtonHandler = (event) => {\r\n    event.preventDefault();\r\n    setName(\"\");\r\n    setUserCode(\"\");\r\n    setTeamCode(\"\");\r\n    setClassCode(\"\");\r\n    setPhoneNum(\"\");\r\n    setTeamLeader(false);\r\n    setIsUserCodeUnique(false);\r\n    setFile(null);\r\n    setPreviewURL(null);\r\n  };\r\n  return (\r\n    // <div className={classes.v105_113}>\r\n    //   <div className={classes.v105_123}>\r\n    //     <span>학생 등록</span>\r\n    //   </div>\r\n    //   {/* <div className={classes.v105_123}></div> */}\r\n    //   {/* <div className={classes.v105_124}></div> */}\r\n    //   <div className={classes.v105_125}></div>\r\n    //   {/* 이미지 공간 */}\r\n    //   {/* <div className={classes.v107_143}></div> */}\r\n    //   {/* <span className={classes.v107_147}>이번 달 지각</span>\r\n    //   <span className={classes.v107_153}>특이 사항</span> */}\r\n    //   {/* <div className={classes.v105_130}></div> */}\r\n    //   <div className={classes.v105_134}></div>\r\n    //   {/* <div className={classes.v107_144}></div> */}\r\n    //   {/* <div className={classes.v107_152}></div> */}\r\n    //   {/* <div className={classes.v107_145}></div> */}\r\n    //   <div className={classes.v105_135}></div>\r\n    //   <span className={classes.v105_136}>upload</span>\r\n    //   {/* upload 버튼 */}\r\n\r\n    //   <div className={classes.v107_150}></div>\r\n    //   <span className={classes.v107_151}>Save</span>\r\n    //   {/* save 버튼 */}\r\n    //   <span className={classes.v105_137}>name</span>\r\n    //   <span className={classes.v105_138}>age</span>\r\n    //   <div className={classes.v105_139}></div>\r\n    //   <span className={classes.v105_140}>team</span>\r\n    // </div>\r\n\r\n    <div className={styles.wholePage}>\r\n      <AdminHeader onPage={2} />\r\n      <div className={styles.firstPageBox}>\r\n        <div className={styles.overlay}>\r\n          <form onSubmit={onSubmitHandler}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={4} className={styles.imagePosition}>\r\n                <div>\r\n                  <div className={styles.imagePosition}>\r\n                    <div className={styles.imagePlace}>\r\n                      <div className={styles.cutImage}>\r\n                        <img\r\n                          className={styles.imageBox}\r\n                          src={previewUrl}\r\n                          alt=\"\"\r\n                          onClick={() => {\r\n                            fileRef.current.click();\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <input\r\n                        type=\"file\"\r\n                        accept=\"image/jpg,impge/png,image/jpeg,image/gif\"\r\n                        name=\"profile_img\"\r\n                        id=\"file\"\r\n                        ref={fileRef}\r\n                        style={{ display: \"none\" }}\r\n                        onChange={handleFileOnChange}\r\n                      ></input>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <input\r\n                      className={`${styles.tgl} ${styles.tglskewed}`}\r\n                      id=\"cb5\"\r\n                      type=\"checkbox\"\r\n                      checked={teamLeader}\r\n                      onChange={teamLeaderChangeHandler}\r\n                    />\r\n                    <label\r\n                      className={styles.tglbtn}\r\n                      data-tg-off=\"팀원\"\r\n                      data-tg-on=\"팀장\"\r\n                      for=\"cb5\"\r\n                    ></label>\r\n                  </div>\r\n                </div>\r\n              </Grid>\r\n              <Grid item xs={8}>\r\n                {/* <div className={styles.createTitle}>\r\n                  <span>{student ? \"학생 정보 수정\" : \"학생 정보 등록\"}</span>\r\n                </div> */}\r\n                <span> &nbsp;&nbsp;이름</span>\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    value={name}\r\n                    placeholder=\"이름\"\r\n                    onChange={nameChangeHandler}\r\n                    className={styles.userInput}\r\n                  />\r\n                </div>\r\n                <div className={styles.spacingLine}>\r\n                  <span className={styles.userInputSpan}>&nbsp;&nbsp;학번</span>\r\n                </div>\r\n                <Grid container spacing={3} className={styles.updown}>\r\n                  <Grid item xs={9}>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"userCode\"\r\n                      value={userCode}\r\n                      readOnly={student ? true : false}\r\n                      onChange={userCodeChangeHandler}\r\n                      placeholder=\"학번\"\r\n                      className={styles.userCodeInput}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={3}>\r\n                    <button\r\n                      className={\r\n                        isUserCodeUnique\r\n                          ? styles.userCodeBtnsFalse\r\n                          : styles.userCodeBtns\r\n                      }\r\n                      onClick={userCodeDupCheckHandler}\r\n                      type=\"button\"\r\n                    >\r\n                      {student\r\n                        ? \"수정 불가\"\r\n                        : isUserCodeUnique\r\n                        ? \"사용 가능\"\r\n                        : \"중복 확인\"}\r\n                    </button>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container spacing={5}>\r\n                  <Grid item xs={2}>\r\n                    <span>&nbsp;&nbsp;&nbsp;반</span>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"classCode\"\r\n                      value={classCode}\r\n                      onChange={classCodeChangeHandler}\r\n                      placeholder=\"반\"\r\n                      className={styles.userInput}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={10}>\r\n                    <span>&nbsp;&nbsp;팀 코드</span>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"teamCode\"\r\n                      value={teamCode}\r\n                      onChange={teamCodeChangeHandler}\r\n                      placeholder=\"팀 코드\"\r\n                      className={styles.userTeamInput}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <div className={styles.spacingLine}>\r\n                  <span>&nbsp;&nbsp;핸드폰 번호</span>\r\n                </div>\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"phoneNum\"\r\n                    value={phoneNum}\r\n                    onChange={phoneNumChangeHandler}\r\n                    placeholder=\"- 없이 입력하세요\"\r\n                    className={styles.userInput}\r\n                  />\r\n                </div>\r\n                {/* <div>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"teamLeader\"\r\n                    onChange={teamLeaderChangeHandler}\r\n                    value=\"true\"\r\n                  />\r\n                  {\"팀장\"}\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"teamLeader\"\r\n                    onChange={teamLeaderChangeHandler}\r\n                    value=\"false\"\r\n                  />\r\n                  {\"팀원\"}\r\n                </div> */}\r\n                <Grid container>\r\n                  <Grid item xs={12} className={styles.centered}>\r\n                    <button\r\n                      disabled={!formIsVaild}\r\n                      className={\r\n                        formIsVaild\r\n                          ? styles.registerBtn\r\n                          : styles.registerBtnFalse\r\n                      }\r\n                    >\r\n                      {student ? \"정보 수정\" : \"Register\"}\r\n                    </button>\r\n                  </Grid>\r\n                  <Grid item xs={6} className={styles.centered}>\r\n                    <button\r\n                      onClick={resetButtonHandler}\r\n                      className={styles.resetBtn}\r\n                    >\r\n                      {\" \"}\r\n                      Reset{\" \"}\r\n                    </button>\r\n                  </Grid>\r\n                  <Grid item xs={6} className={styles.centered}>\r\n                    <button onClick={backHandler} className={styles.backBtn}>\r\n                      {\" \"}\r\n                      Back{\" \"}\r\n                    </button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentForm;\r\n","const ReadonlyRow = ({ student, searchMmsHandler, updateHandler, setIds }) => {\r\n  return (\r\n    <tr>\r\n      <td>{student.date.substr(5)}</td>\r\n      <td>{student.classCode}</td>\r\n      <td>{student.teamCode}</td>\r\n      <td>{student.userCode}</td>\r\n      <td>{student.name}</td>\r\n      <td>\r\n        {\" \"}\r\n        {student.phoneNum.slice(0, 3)}-{student.phoneNum.slice(3, 7)}-\r\n        {student.phoneNum.slice(7, 11)}\r\n      </td>\r\n      <td>{student.teamLeader ? \"팀장\" : \"팀원\"}</td>\r\n      <td>{student.absent}</td>\r\n      <td>{student.trady}</td>\r\n      <td>{student.trace}</td>\r\n      <td>\r\n        <button type=\"button\" onClick={(event) => updateHandler(student)}>\r\n          <span className=\"material-symbols-outlined\">edit</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            searchMmsHandler()\r\n            setIds(student.id)\r\n          }}\r\n        >\r\n          <span className=\"material-symbols-outlined\">outgoing_mail</span>\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default ReadonlyRow\r\n","import styles from \"./mainPage.module.css\"\r\n\r\nconst CustomPagination = ({ total, limit, page, setPage }) => {\r\n  // 올림 차수로 계산\r\n  const numPages = Math.ceil(total / limit)\r\n\r\n  return (\r\n    <div className={styles.paigBox}>\r\n      <button onClick={() => setPage(page - 1)} disabled={page === 1}>\r\n        &lt;\r\n      </button>\r\n      {Array(numPages)\r\n        .fill()\r\n        .map((v, i) => (\r\n          <button\r\n            key={i + 1}\r\n            onClick={() => setPage(i + 1)}\r\n            aria-current={page === i + 1 ? \"page\" : null}\r\n            className={page === i + 1 ? styles.onPage : styles.notOnPage}\r\n          >\r\n            <span>{i + 1}</span>\r\n          </button>\r\n        ))}\r\n      <button onClick={() => setPage(page + 1)} disabled={page === numPages}>\r\n        &gt;\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CustomPagination\r\n","import { useState } from \"react\"\r\nimport \"./modal.css\"\r\n\r\nconst CustomModal = (props) => {\r\n  // 열기, 닫기, 모달 헤더 텍스트를 부모로부터 받아옴\r\n  const { open, close, header } = props\r\n  const handleChildElementClick = (e) => {\r\n    e.stopPropagation()\r\n    // Do other stuff here\r\n  }\r\n\r\n  return (\r\n    // 모달이 열릴때 openModal 클래스가 생성된다.\r\n    <div className={open ? \"openModal modal\" : \"modal\"} onClick={close}>\r\n      {open ? (\r\n        <section onClick={(e) => handleChildElementClick(e)}>\r\n          <header>\r\n            {header}\r\n            <button className=\"close\" onClick={close}>\r\n              &times;\r\n            </button>\r\n          </header>\r\n          <div className=\"modalIcon\">\r\n            <div className=\"modalIconBox\">\r\n              <span className=\"material-symbols-outlined\">contact_mail</span>\r\n            </div>\r\n          </div>\r\n          <main>{props.children}</main>\r\n        </section>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CustomModal\r\n","import { useState } from \"react\"\r\nimport { useEffect } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { API_URL } from \"../../../common/api\"\r\nimport AdminHeader from \"../header/adminHeader\"\r\nimport ReadonlyRow from \"./ReadOnlyRow\"\r\nimport styles from \"./mainPage.module.css\"\r\nimport AttendStudents from \"./dangerList\"\r\nimport NotAttendStudents from \"./studentList\"\r\nimport Pagination from \"react-js-pagination\"\r\nimport \"./mainPage.css\"\r\nimport DangerList from \"./dangerList\"\r\nimport StudentList from \"./studentList\"\r\nimport axios from \"axios\"\r\nimport axios1 from \"../../../common/api/axios\"\r\nimport CustomPagination from \"./customPagination\"\r\nimport CustomModal from \"../../../common/modal/modal\"\r\n\r\nconst MainPage = () => {\r\n  const [students, setStudents] = useState([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [dangerList, setDangerList] = useState([])\r\n  const [studentList, setStudentList] = useState([])\r\n  const [limit, setLimit] = useState(10)\r\n  const [page, setPage] = useState(1)\r\n  const [total, setTotal] = useState(null)\r\n  const offset = (page - 1) * limit\r\n  const [checkItems, setCheckItems] = useState([])\r\n  const [dangerCheckItems, setDangerCheckItems] = useState([])\r\n  const [modalOpen, setModalOpen] = useState(false)\r\n  const [messages, setMessages] = useState(\"\")\r\n  const [isDate, setIsDate] = useState(false)\r\n  const [isName, setIsName] = useState(false)\r\n  const [isUserCode, setIsUserCode] = useState(false)\r\n  const [isClassCode, setIsClassCode] = useState(false)\r\n  const [isTeamCode, setIsTeamCode] = useState(false)\r\n  const [isAbsent, setIsAbsent] = useState(false)\r\n  const [isTrady, setIsTrady] = useState(false)\r\n  const [isStatus, setIsStatus] = useState(false)\r\n  const [isTeamLeader, setIsTeamLeader] = useState(false)\r\n  const [userExcel, setUserExcel] = useState(null)\r\n  const [search, setSearch] = useState(\"\")\r\n  const [searchLoading, setSearchLoading] = useState(true)\r\n  const [dangerModalOpen, setDangerModalOpen] = useState(false)\r\n  const [searchBox, setSearchBox] = useState(false)\r\n  const [searchModalOpen, setSearchModalOpen] = useState(false)\r\n  const [ids, setIds] = useState(null)\r\n\r\n  const Swal = require(\"sweetalert2\")\r\n\r\n  const searchOpenModal = () => {\r\n    setSearchModalOpen(true)\r\n  }\r\n  const searchCloseModal = () => {\r\n    setSearchModalOpen(false)\r\n    setMessages(\"\")\r\n  }\r\n\r\n  const dangerOpenModal = () => {\r\n    setDangerModalOpen(true)\r\n  }\r\n  const dangerCloseModal = () => {\r\n    setDangerModalOpen(false)\r\n    setMessages(\"\")\r\n  }\r\n\r\n  const messegesHandler = (event) => {\r\n    const tmpMessges = event.target.value\r\n    setMessages(tmpMessges)\r\n  }\r\n\r\n  const openModal = () => {\r\n    setModalOpen(true)\r\n  }\r\n  const closeModal = () => {\r\n    setModalOpen(false)\r\n    setMessages(\"\")\r\n  }\r\n  // const [activePage, setActivePage] = useState(1);\r\n  // const [totalPages, setTotalPages] = useState(null);\r\n  // const [itemsCountPerPage, setItemsCountPerPage] = useState(null);\r\n  // const [totalItemsCount, setTotalItemsCount] = useState(null);\r\n\r\n  const history = useHistory()\r\n  const deleteHandler = (studentId) => {\r\n    axios1\r\n      .delete(API_URL + `student/${studentId}`, {\r\n        headers: {\r\n          accessToken: window.localStorage.getItem(\"token\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        const newStudents = [...students]\r\n        const index = students.findIndex((stduent) => stduent.id === studentId)\r\n        newStudents.splice(index, 1)\r\n        setStudents(newStudents)\r\n        const newDangerList = [...dangerList]\r\n        const dangerIndex = dangerList.findIndex(\r\n          (stduent) => stduent.id === studentId\r\n        )\r\n        if (dangerIndex !== -1) {\r\n          newDangerList.splice(dangerIndex, 1)\r\n          setDangerList(newDangerList)\r\n        }\r\n        const newStudentList = [...studentList]\r\n        const studentListIndex = studentList.findIndex(\r\n          (stduent) => stduent.id === studentId\r\n        )\r\n        if (studentListIndex !== -1) {\r\n          newStudentList.splice(studentListIndex, 1)\r\n          setStudentList(newStudentList)\r\n        }\r\n\r\n        alert(\"학생 정보 제거\")\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response)\r\n      })\r\n  }\r\n\r\n  const updateHandler = (stduent) => {\r\n    history.push({ pathname: \"/admin/form\", state: stduent })\r\n  }\r\n\r\n  // const fetchStudents = (page) => {\r\n  //   let tmpPage = page - 1;\r\n  //   axios1\r\n  //     .get(API_URL + `student?page=${tmpPage}&size=5`, {\r\n  //       headers: {\r\n  //         accessToken: window.localStorage.getItem(\"token\"),\r\n  //       },\r\n  //     })\r\n  //     .then((res) => {\r\n  //       setStudents(res.data.userList.content);\r\n  //       setTotalPages(res.data.userList.totalPages);\r\n  //       setItemsCountPerPage(res.data.userList.size);\r\n  //       setTotalItemsCount(res.data.userList.totalElements);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       alert(\"학생 정보를 불러오지 못했습니다.\");\r\n  //     });\r\n  // };\r\n\r\n  const fetchDangerList = (classCode) => {\r\n    axios1\r\n      .get(API_URL + `attendance/danger/${classCode}`, {\r\n        headers: {\r\n          accessToken: window.localStorage.getItem(\"token\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setDangerList(res.data)\r\n      })\r\n      .catch((err) => {\r\n        alert(\"위험 리스트 정보를 불러오지 못했습니다.\")\r\n      })\r\n  }\r\n\r\n  const fetchStudentList = (classCode) => {\r\n    axios1\r\n      .get(API_URL + `attendance/class/${classCode}`, {\r\n        headers: {\r\n          accessToken: window.localStorage.getItem(\"token\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setStudentList(res.data)\r\n      })\r\n      .catch((err) => {\r\n        alert(\"학생 리스트 정보를 불러오지 못했습니다.\")\r\n      })\r\n  }\r\n\r\n  const fetchStudents = () => {\r\n    setSearchLoading(true)\r\n    axios1\r\n      .post(\r\n        API_URL + \"search\",\r\n        { content: search, tradyOrder: isTrady, absentOrder: isAbsent },\r\n        {\r\n          headers: {\r\n            accessToken: window.localStorage.getItem(\"token\"),\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        setStudents(res.data)\r\n        setTotal(res.data.length)\r\n        console.log(res.data)\r\n      })\r\n      .catch((err) => {\r\n        alert(\"학생 리스트 정보를 불러오지 못했습니다.\")\r\n      })\r\n    setSearchLoading(false)\r\n  }\r\n  // const handlePageChange = (pageNumber) => {\r\n  //   setActivePage(pageNumber);\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   fetchStudents(activePage);\r\n  // }, [activePage]);\r\n  useEffect(() => {\r\n    // fetchStudents(activePage);\r\n    setIsLoading(true)\r\n    const classCode = window.localStorage.getItem(\"classCode\")\r\n    fetchDangerList(classCode)\r\n    setSearch(classCode)\r\n    setIsLoading(true)\r\n    fetchStudentList(classCode)\r\n\r\n    setIsLoading(false)\r\n    setSearchLoading(true)\r\n    axios1\r\n      .post(\r\n        API_URL + \"search\",\r\n        { content: search, tradyOrder: isTrady, absentOrder: isAbsent },\r\n        {\r\n          headers: {\r\n            accessToken: window.localStorage.getItem(\"token\"),\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        setStudents(res.data)\r\n        setTotal(res.data.length)\r\n        setIsDate(false)\r\n        setIsAbsent(!isAbsent)\r\n        setIsClassCode(false)\r\n        setIsName(false)\r\n        setIsTeamCode(false)\r\n        setIsUserCode(false)\r\n        setIsTrady(!isTrady)\r\n        setIsTeamLeader(false)\r\n        setPage(1)\r\n      })\r\n      .catch((err) => {\r\n        alert(\"학생 리스트 정보를 불러오지 못했습니다.\")\r\n      })\r\n    setSearchLoading(false)\r\n  }, [])\r\n\r\n  const searchChangeHandler = (event) => {\r\n    const tmpSearch = event.target.value\r\n    setSearch(tmpSearch)\r\n  }\r\n\r\n  const searchHandler = (event) => {\r\n    event.preventDefault()\r\n    setSearchLoading(true)\r\n    axios1\r\n      .post(\r\n        API_URL + \"search\",\r\n        { content: search, tradyOrder: isTrady, absentOrder: isAbsent },\r\n        {\r\n          headers: {\r\n            accessToken: window.localStorage.getItem(\"token\"),\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        setStudents(res.data)\r\n        setTotal(res.data.length)\r\n        setIsDate(false)\r\n        setIsAbsent(!isAbsent)\r\n        setIsClassCode(false)\r\n        setIsName(false)\r\n        setIsTeamCode(false)\r\n        setIsUserCode(false)\r\n        setIsTrady(!isTrady)\r\n        setIsTeamLeader(false)\r\n        setPage(1)\r\n      })\r\n      .catch((err) => {\r\n        alert(\"학생 리스트 정보를 불러오지 못했습니다.\")\r\n      })\r\n    setSearchLoading(false)\r\n    // fetchStudents();\r\n  }\r\n\r\n  const searchDateHandler = (event) => {\r\n    event.preventDefault()\r\n    if (isDate && students.length) {\r\n      setIsDate(!isDate)\r\n      const tmpStudents = students\r\n      tmpStudents.sort((a, b) => new Date(a.date) - new Date(b.date))\r\n      setStudents(tmpStudents)\r\n      setPage(1)\r\n    } else if (!isDate && students.length) {\r\n      setIsDate(!isDate)\r\n      const tmpStudents = students\r\n      tmpStudents.sort((a, b) => new Date(b.date) - new Date(a.date))\r\n      setStudents(tmpStudents)\r\n      setPage(1)\r\n    }\r\n  }\r\n\r\n  const searchNameHandler = (event) => {\r\n    event.preventDefault()\r\n    if (isName && students.length) {\r\n      setIsName(!isName)\r\n      const tmpStudents = students\r\n      tmpStudents.sort((x, y) => x.name.localeCompare(y.name))\r\n      setStudents(tmpStudents)\r\n      setPage(1)\r\n    } else if (!isName && students.length) {\r\n      setIsName(!isName)\r\n      const tmpStudents = students\r\n      tmpStudents.sort((x, y) => y.name.localeCompare(x.name))\r\n      setStudents(tmpStudents)\r\n      setPage(1)\r\n    }\r\n  }\r\n\r\n  const searchTeamLeaderHandler = (event) => {\r\n    event.preventDefault()\r\n    if (isTeamLeader && students.length) {\r\n      setIsTeamLeader(!isTeamLeader)\r\n      const tmpStudents = students\r\n      tmpStudents.sort((x, y) => x.teamLeader - y.teamLeader)\r\n      setStudents(tmpStudents)\r\n      setPage(1)\r\n    } else if (!isTeamLeader && students.length) {\r\n      setIsTeamLeader(!isTeamLeader)\r\n      const tmpStudents = students\r\n      tmpStudents.sort((x, y) => y.teamLeader - x.teamLeader)\r\n      setStudents(tmpStudents)\r\n      setPage(1)\r\n    }\r\n  }\r\n\r\n  const searchUserCodeHandler = (event) => {\r\n    event.preventDefault()\r\n    if (isUserCode && students.length) {\r\n      setIsUserCode(!isUserCode)\r\n      const tmpStudents = students\r\n      tmpStudents.sort((x, y) => x.userCode.localeCompare(y.userCode))\r\n      setStudents(tmpStudents)\r\n      setPage(1)\r\n    } else if (!isUserCode && students.length) {\r\n      setIsUserCode(!isUserCode)\r\n      const tmpStudents = students\r\n      tmpStudents.sort((x, y) => y.userCode.localeCompare(x.userCode))\r\n      setStudents(tmpStudents)\r\n      setPage(1)\r\n    }\r\n  }\r\n\r\n  const searchTeamCodeHandler = (event) => {\r\n    event.preventDefault()\r\n    if (isTeamCode && students.length) {\r\n      setIsTeamCode(!isTeamCode)\r\n      const tmpStudents = students\r\n      tmpStudents.sort((x, y) => x.teamCode.localeCompare(y.teamCode))\r\n      setStudents(tmpStudents)\r\n      setPage(1)\r\n    } else if (!isTeamCode && students.length) {\r\n      setIsTeamCode(!isTeamCode)\r\n      const tmpStudents = students\r\n      tmpStudents.sort((x, y) => y.teamCode.localeCompare(x.teamCode))\r\n      setStudents(tmpStudents)\r\n      setPage(1)\r\n    }\r\n  }\r\n\r\n  const searchClassCodeHandler = (event) => {\r\n    event.preventDefault()\r\n    if (isClassCode && students.length) {\r\n      setIsClassCode(!isClassCode)\r\n      const tmpStudents = students\r\n      tmpStudents.sort((x, y) => x.classCode.localeCompare(y.classCode))\r\n      setStudents(tmpStudents)\r\n      setPage(1)\r\n    } else if (!isClassCode && students.length) {\r\n      setIsClassCode(!isClassCode)\r\n      const tmpStudents = students\r\n      tmpStudents.sort((x, y) => y.classCode.localeCompare(x.classCode))\r\n      setStudents(tmpStudents)\r\n      setPage(1)\r\n    }\r\n  }\r\n\r\n  const searchAbsentHandler = (event) => {\r\n    event.preventDefault()\r\n    if (isAbsent && students.length) {\r\n      setIsAbsent(!isAbsent)\r\n      const tmpStudents = students\r\n      tmpStudents.sort((x, y) => x.absent - y.absent)\r\n      setStudents(tmpStudents)\r\n      setPage(1)\r\n    } else if (!isAbsent && students.length) {\r\n      setIsAbsent(!isAbsent)\r\n      const tmpStudents = students\r\n      tmpStudents.sort((x, y) => y.absent - x.absent)\r\n      setStudents(tmpStudents)\r\n      setPage(1)\r\n    }\r\n  }\r\n\r\n  const searchTardyHandler = (event) => {\r\n    event.preventDefault()\r\n    if (isTrady && students.length) {\r\n      setIsTrady(!isTrady)\r\n      const tmpStudents = students\r\n      tmpStudents.sort((x, y) => x.trady - y.trady)\r\n      setStudents(tmpStudents)\r\n      setPage(1)\r\n    } else if (!isTrady && students.length) {\r\n      setIsTrady(!isTrady)\r\n      const tmpStudents = students\r\n      tmpStudents.sort((x, y) => y.trady - x.trady)\r\n      setStudents(tmpStudents)\r\n      setPage(1)\r\n    }\r\n  }\r\n\r\n  const searchStatusHandler = (event) => {\r\n    event.preventDefault()\r\n    if (isStatus && students.length) {\r\n      setIsStatus(!isStatus)\r\n      const tmpStudents = students\r\n\r\n      tmpStudents.sort((x, y) => x.trace.localeCompare(y.trace))\r\n      setStudents(tmpStudents)\r\n      setPage(1)\r\n    } else if (!isStatus && students.length) {\r\n      setIsStatus(!isStatus)\r\n      const tmpStudents = students\r\n      tmpStudents.sort((x, y) => y.trace.localeCompare(x.trace))\r\n      setStudents(tmpStudents)\r\n      setPage(1)\r\n    }\r\n  }\r\n\r\n  const handleSingleCheck = (checked, id) => {\r\n    if (checkItems.includes(id)) {\r\n      setCheckItems(checkItems.filter((el) => el !== id))\r\n    } else {\r\n      setCheckItems((prev) => [...prev, id])\r\n    }\r\n    // if (checked) {\r\n    //   setCheckItems((prev) => [...prev, id])\r\n    // } else {\r\n    //   setCheckItems(checkItems.filter((el) => el !== id))\r\n    // }\r\n    console.log(checkItems)\r\n  }\r\n\r\n  const dangerhandleSingleCheck = (checked, id) => {\r\n    if (dangerCheckItems.includes(id)) {\r\n      setDangerCheckItems(dangerCheckItems.filter((el) => el !== id))\r\n    } else {\r\n      setDangerCheckItems((prev) => [...prev, id])\r\n    }\r\n    // if (checked) {\r\n    //   setCheckItems((prev) => [...prev, id])\r\n    // } else {\r\n    //   setCheckItems(checkItems.filter((el) => el !== id))\r\n    // }\r\n    // console.log(checkItems)\r\n  }\r\n\r\n  const handleAllCheck = (checked) => {\r\n    // if (checked) {\r\n    //   const idArray = []\r\n    //   studentList.forEach((el) => idArray.push(el.id))\r\n    //   setCheckItems(idArray)\r\n    // } else {\r\n    //   setCheckItems([])\r\n    // }\r\n    if (checkItems.length === studentList.length) {\r\n      setCheckItems([])\r\n    } else {\r\n      const idArray = []\r\n      studentList.forEach((el) => idArray.push(el.id))\r\n      setCheckItems(idArray)\r\n    }\r\n  }\r\n  const dangerHandleAllCheck = (checked) => {\r\n    // if (checked) {\r\n    //   const idArray = []\r\n    //   dangerList.forEach((el) => idArray.push(el.id))\r\n    //   setDangerCheckItems(idArray)\r\n    // } else {\r\n    //   setDangerCheckItems([])\r\n    // }\r\n    if (dangerCheckItems.length === dangerList.length) {\r\n      setDangerCheckItems([])\r\n    } else {\r\n      const idArray = []\r\n      dangerList.forEach((el) => idArray.push(el.id))\r\n      setDangerCheckItems(idArray)\r\n    }\r\n  }\r\n  const mmsHandler = (event) => {\r\n    event.preventDefault()\r\n    setModalOpen(true)\r\n  }\r\n\r\n  const mmsDangerHandler = (event) => {\r\n    event.preventDefault()\r\n    setDangerModalOpen(true)\r\n  }\r\n  const searchMmsHandler = (event) => {\r\n    setSearchModalOpen(true)\r\n  }\r\n  const searchMmsTransferHandler = (event) => {\r\n    event.preventDefault()\r\n    const formData = { ids: [ids], messages }\r\n    console.log(formData)\r\n    axios1\r\n      .post(API_URL + \"mms\", formData, {\r\n        headers: { accessToken: window.localStorage.getItem(\"token\") },\r\n      })\r\n      .then((res) => {\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: `메세지가 전송되었습니다.`,\r\n          timer: 1500,\r\n        })\r\n        setSearchModalOpen(false)\r\n        setMessages(\"\")\r\n        setIds(null)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const mmsDangerTransferHandler = (event) => {\r\n    event.preventDefault()\r\n    console.log(\"테스트\", dangerCheckItems)\r\n    const formData = { ids: dangerCheckItems, messages }\r\n    axios1\r\n      .post(API_URL + \"mms\", formData, {\r\n        headers: { accessToken: window.localStorage.getItem(\"token\") },\r\n      })\r\n      .then((res) => {\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: `메세지가 전송되었습니다.`,\r\n          timer: 1500,\r\n        })\r\n        setDangerModalOpen(false)\r\n        setMessages(\"\")\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const mmsTransferHandler = (event) => {\r\n    event.preventDefault()\r\n\r\n    const formData = { ids: checkItems, messages }\r\n    axios1\r\n      .post(API_URL + \"mms\", formData, {\r\n        headers: { accessToken: window.localStorage.getItem(\"token\") },\r\n      })\r\n      .then((res) => {\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: `메세지가 전송되었습니다.`,\r\n          timer: 1500,\r\n        })\r\n        setModalOpen(false)\r\n        setMessages(\"\")\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  const clickSearchBox = () => {\r\n    setSearchBox(true)\r\n  }\r\n\r\n  const changeUserExcelHandler = (event) => {\r\n    event.preventDefault()\r\n    let file = event.target.files[0]\r\n    setUserExcel(file)\r\n  }\r\n\r\n  const submitUserExcelHandler = (event) => {\r\n    event.preventDefault()\r\n    let formData = new FormData()\r\n    formData.set(\"uploadUserFile\", userExcel)\r\n    axios1\r\n      .post(API_URL + \"excel/upload\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          accessToken: window.localStorage.getItem(\"token\"),\r\n          // \"Access-Control-Allow-Origin\": \"*\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        alert(\"등록되었습니다.\")\r\n        setUserExcel(null)\r\n        const fileInput = document.querySelector('input[type=\"file\"]')\r\n        const dataTransfer = new DataTransfer()\r\n        fileInput.files = dataTransfer.files\r\n      })\r\n      .catch((err) => {\r\n        alert(\"등록 실패\")\r\n        setUserExcel(null)\r\n        const fileInput = document.querySelector('input[type=\"file\"]')\r\n        const dataTransfer = new DataTransfer()\r\n        fileInput.files = dataTransfer.files\r\n      })\r\n  }\r\n\r\n  const searchExcelHandler = (event) => {\r\n    event.preventDefault()\r\n    if (students.length) {\r\n      axios1\r\n        .post(\r\n          API_URL + \"excel/search\",\r\n          { content: search, tradyOrder: isTrady, absentOrder: isAbsent },\r\n          {\r\n            headers: {\r\n              accessToken: window.localStorage.getItem(\"token\"),\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            responseType: \"blob\",\r\n          }\r\n        )\r\n        .then((response) => {\r\n          const url = window.URL.createObjectURL(\r\n            new Blob([response.data], {\r\n              type: response.headers[\"content-type\"],\r\n            })\r\n          )\r\n          const link = document.createElement(\"a\")\r\n          link.href = url\r\n          link.setAttribute(\"download\", \"search.xlsx\")\r\n          document.body.appendChild(link)\r\n          link.click()\r\n        })\r\n    }\r\n  }\r\n\r\n  const userExcelHandler = (event) => {\r\n    event.preventDefault()\r\n\r\n    axios1\r\n      .get(API_URL + \"excel/download\", {\r\n        headers: {\r\n          accessToken: window.localStorage.getItem(\"token\"),\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        responseType: \"blob\",\r\n      })\r\n      .then((response) => {\r\n        const url = window.URL.createObjectURL(\r\n          new Blob([response.data], {\r\n            type: response.headers[\"content-type\"],\r\n          })\r\n        )\r\n        const link = document.createElement(\"a\")\r\n        link.href = url\r\n        link.setAttribute(\"download\", \"user.xlsx\")\r\n        document.body.appendChild(link)\r\n        link.click()\r\n      })\r\n  }\r\n  const clickGuideLine = () => {\r\n    Swal.fire({\r\n      icon: \"info\",\r\n      title: \"사용 방법\",\r\n      html: `\r\n\r\n      <div style='text-align:start;line-height:2rem; font-family:\"Pretendard-Regular\";'>\r\n      1. [\"\" or \"전체\"]<br><div style='width:100%;height:0.5rem;'></div>\r\n      2. [\"결석\" or \"지각\"] [반 이름, ... Default X]<br> &nbsp&nbsp[팀코드, ... Default X] [날짜, Default 오늘] <br><div style='width:100%;height:0.5rem;'></div>\r\n      3. [반 이름, ... Deafult X] [팀 코드, ... Deafult X]<br>&nbsp &nbsp[날짜, ... or \"전부\" Default 오늘]<br><div style='width:100%;height:0.5rem;'></div>\r\n      4. [\"이름\", ... Deafult X] [날짜, ... or \"전부\" Default 오늘]<br> \r\n      </div>`,\r\n    })\r\n  }\r\n\r\n  return (\r\n    !isLoading && (\r\n      <div>\r\n        <CustomModal open={modalOpen} close={closeModal} header=\"\">\r\n          <form onSubmit={mmsTransferHandler}>\r\n            <span>전송할 메시지를 입력하세요!</span>\r\n            <div>\r\n              <input\r\n                type=\"textarea\"\r\n                value={messages}\r\n                onChange={messegesHandler}\r\n              />\r\n            </div>\r\n            <div>\r\n              <button type=\"submit\" className=\"close\">\r\n                전송\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </CustomModal>\r\n        <CustomModal open={dangerModalOpen} close={dangerCloseModal} header=\"\">\r\n          <form onSubmit={mmsDangerTransferHandler}>\r\n            <span>전송할 메시지를 입력하세요!</span>\r\n            <div>\r\n              <input\r\n                type=\"textarea\"\r\n                value={messages}\r\n                onChange={messegesHandler}\r\n              />\r\n            </div>\r\n            <div>\r\n              <button type=\"submit\" className=\"close\">\r\n                전송\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </CustomModal>\r\n        <CustomModal open={searchModalOpen} close={searchCloseModal} header=\"\">\r\n          <form onSubmit={searchMmsTransferHandler}>\r\n            <span>전송할 메시지를 입력하세요!</span>\r\n            <div>\r\n              <input\r\n                type=\"textarea\"\r\n                value={messages}\r\n                onChange={messegesHandler}\r\n              />\r\n            </div>\r\n            <div>\r\n              <button type=\"submit\" className=\"close\">\r\n                전송\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </CustomModal>\r\n        <div className={styles.wholePage}>\r\n          <AdminHeader onPage={1} />\r\n\r\n          <div className={styles.inner}>\r\n            <div className={styles.leftSideBox}>\r\n              <div className={styles.teamStudentBox}>\r\n                <div className={styles.boxTitle}>결석 위험군 명단</div>\r\n\r\n                <div className={styles.teamStudentList}>\r\n                  <div>\r\n                    {dangerList?.map((data, key) => (\r\n                      <div\r\n                        className={\r\n                          dangerCheckItems.includes(data.id)\r\n                            ? styles.studentListItem\r\n                            : styles.studentListItemFalse\r\n                        }\r\n                        onClick={(e) =>\r\n                          dangerhandleSingleCheck(data.id, data.id)\r\n                        }\r\n                        key={key}\r\n                      >\r\n                        <div className={styles.studentListInner}>\r\n                          <input\r\n                            className={styles.studentListCheckBox}\r\n                            type=\"checkbox\"\r\n                            name={`select-${data.id}`}\r\n                            id={data.id}\r\n                            checked={\r\n                              dangerCheckItems.includes(data.id) ? true : false\r\n                            }\r\n                          />\r\n                          <div>\r\n                            <span className={styles.studentName}>\r\n                              {data.name}\r\n                            </span>\r\n                          </div>\r\n                          <div>\r\n                            <span>\r\n                              {data.phoneNum.slice(0, 3)}-\r\n                              {data.phoneNum.slice(3, 7)}-\r\n                              {data.phoneNum.slice(7, 11)}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n                <div className={styles.dropdown}>\r\n                  <div className={styles.dropdownContent}>\r\n                    <div className={styles.dropdownItem}>\r\n                      <form onSubmit={mmsDangerHandler}>\r\n                        <button\r\n                          className={\r\n                            dangerCheckItems.length\r\n                              ? styles.sendBtn\r\n                              : styles.falseSendBtn\r\n                          }\r\n                          disabled={dangerCheckItems.length ? false : true}\r\n                          type=\"submit\"\r\n                        >\r\n                          <span className=\"material-symbols-outlined\">\r\n                            outgoing_mail\r\n                          </span>\r\n                        </button>\r\n                      </form>\r\n                    </div>\r\n                    <div\r\n                      onClick={dangerHandleAllCheck}\r\n                      className={styles.dropdownItem}\r\n                    >\r\n                      {dangerCheckItems.length &&\r\n                      dangerCheckItems.length === dangerList.length ? (\r\n                        <div className={styles.checked}>\r\n                          <span className=\"material-symbols-outlined\">\r\n                            done_all\r\n                          </span>\r\n                        </div>\r\n                      ) : (\r\n                        <div className={styles.notChecked}>\r\n                          <span className=\"material-symbols-outlined\">\r\n                            done_all\r\n                          </span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <button className={styles.dropbtn}>\r\n                    <span className=\"material-symbols-outlined\">send</span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className={styles.teamStudentBox}>\r\n                <div className={styles.boxTitle}>금일 미출석 명단</div>\r\n\r\n                <div className={styles.teamStudentList}>\r\n                  <div>\r\n                    {studentList?.map((data, key) => (\r\n                      <div\r\n                        className={\r\n                          checkItems.includes(data.id)\r\n                            ? styles.studentListItem\r\n                            : styles.studentListItemFalse\r\n                        }\r\n                        onClick={(e) => handleSingleCheck(data.id, data.id)}\r\n                        key={key}\r\n                      >\r\n                        <div className={styles.studentListInner}>\r\n                          <input\r\n                            className={styles.studentListCheckBox}\r\n                            type=\"checkbox\"\r\n                            name={`select-${data.id}`}\r\n                            id={data.id}\r\n                            checked={\r\n                              checkItems.includes(data.id) ? true : false\r\n                            }\r\n                          />\r\n                          <div>\r\n                            <span className={styles.studentName}>\r\n                              {data.name}\r\n                            </span>\r\n                          </div>\r\n                          <div>\r\n                            <span>\r\n                              {data.phoneNum.slice(0, 3)}-\r\n                              {data.phoneNum.slice(3, 7)}-\r\n                              {data.phoneNum.slice(7, 11)}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n                <div className={styles.dropdown}>\r\n                  <div className={styles.dropdownContent}>\r\n                    <div className={styles.dropdownItem}>\r\n                      <form onSubmit={mmsHandler}>\r\n                        <button\r\n                          className={\r\n                            checkItems.length\r\n                              ? styles.sendBtn\r\n                              : styles.falseSendBtn\r\n                          }\r\n                          disabled={checkItems.length ? false : true}\r\n                          type=\"submit\"\r\n                        >\r\n                          <span className=\"material-symbols-outlined\">\r\n                            outgoing_mail\r\n                          </span>\r\n                        </button>\r\n                      </form>\r\n                    </div>\r\n                    <div\r\n                      onClick={handleAllCheck}\r\n                      className={styles.dropdownItem}\r\n                    >\r\n                      {checkItems.length &&\r\n                      checkItems.length === studentList.length ? (\r\n                        <div className={styles.checked}>\r\n                          <span className=\"material-symbols-outlined\">\r\n                            done_all\r\n                          </span>\r\n                        </div>\r\n                      ) : (\r\n                        <div className={styles.notChecked}>\r\n                          <span className=\"material-symbols-outlined\">\r\n                            done_all\r\n                          </span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <button className={styles.dropbtn}>\r\n                    <span className=\"material-symbols-outlined\">send</span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={styles.rightSideBox}>\r\n              <div className={styles.boxTitle}>\r\n                학생 조회\r\n                <span\r\n                  onClick={clickGuideLine}\r\n                  className=\"material-symbols-outlined\"\r\n                >\r\n                  help\r\n                </span>\r\n              </div>\r\n              <div className={styles.searchBox}>\r\n                {searchBox ? (\r\n                  <div\r\n                    className={styles.searchBoxBefore}\r\n                    onClick={clickSearchBox}\r\n                  >\r\n                    <div className={styles.searchBtnBefore}>\r\n                      <span className=\"material-symbols-outlined\">search</span>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div className={styles.searchBoxAfter}>\r\n                    <div className={styles.searchEnzineBox}>\r\n                      <form onSubmit={searchHandler}>\r\n                        <input\r\n                          className={styles.searchEnzineInput}\r\n                          type=\"text\"\r\n                          onChange={searchChangeHandler}\r\n                        />\r\n                        <button\r\n                          className={styles.searchEnzineBtn}\r\n                          type=\"submit\"\r\n                        >\r\n                          <span className=\"material-symbols-outlined\">\r\n                            search\r\n                          </span>\r\n                        </button>\r\n                      </form>\r\n                    </div>\r\n                    <div className={styles.studentTableBox}>\r\n                      {students.length ? (\r\n                        <div>\r\n                          <table className={styles.studentTable}>\r\n                            <thead>\r\n                              <tr>\r\n                                <th onClick={searchDateHandler}>날짜</th>\r\n                                <th onClick={searchClassCodeHandler}>반</th>\r\n                                <th onClick={searchTeamCodeHandler}>팀 코드</th>\r\n                                <th onClick={searchUserCodeHandler}>학번</th>\r\n                                <th onClick={searchNameHandler}>이름</th>\r\n                                <th>전화번호</th>\r\n                                <th onClick={searchTeamLeaderHandler}>직위</th>\r\n                                <th onClick={searchAbsentHandler}>결석</th>\r\n                                <th onClick={searchTardyHandler}>지각</th>\r\n                                <th onClick={searchStatusHandler}>상태</th>\r\n                                <th></th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              {students\r\n                                .slice(offset, offset + limit)\r\n                                .map((student) => {\r\n                                  return (\r\n                                    <ReadonlyRow\r\n                                      key={students.indexOf(student)}\r\n                                      student={student}\r\n                                      searchMmsHandler={searchMmsHandler}\r\n                                      updateHandler={updateHandler}\r\n                                      setIds={setIds}\r\n                                    />\r\n                                  )\r\n                                })}\r\n                            </tbody>\r\n                          </table>\r\n                          <div className={styles.excelBox}>\r\n                            <button onClick={searchExcelHandler}>\r\n                              <span class=\"material-symbols-outlined\">\r\n                                download\r\n                              </span>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      ) : (\r\n                        <div className={styles.noResult}>\r\n                          <p>검색 결과가 없습니다.</p>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    {students.length ? (\r\n                      <CustomPagination\r\n                        total={total}\r\n                        limit={limit}\r\n                        page={page}\r\n                        setPage={setPage}\r\n                      />\r\n                    ) : (\r\n                      <div></div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  )\r\n}\r\n\r\nexport default MainPage\r\n","export default __webpack_public_path__ + \"static/media/mafya_logo.f49f9419.png\";","import axios from \"axios\"\r\nimport { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { API_URL } from \"../../common/api\"\r\nimport { login } from \"./loginAPI\"\r\nimport styles from \"./loginPage.module.css\"\r\nimport logo from \"../../pngs/mafya_logo.png\"\r\n\r\nconst LoginPage = () => {\r\n  const history = useHistory()\r\n  const [userCode, setUserCode] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [isStart, setIsStart] = useState(false)\r\n  const [isChange, setIsChange] = useState(false)\r\n  const userCodeHandler = (event) => {\r\n    setUserCode(event.target.value)\r\n  }\r\n\r\n  const passwordHandler = (event) => {\r\n    setPassword(event.target.value)\r\n  }\r\n\r\n  const formIsVaild = userCode && password\r\n\r\n  const loginHandler = async (event) => {\r\n    event.preventDefault()\r\n    const userForm = { userCode, password }\r\n    axios\r\n      .post(API_URL + \"student/login/\", userForm, {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.resultCode === 0) {\r\n          window.localStorage.setItem(\"userCode\", userCode)\r\n          const token = res.data.accessToken\r\n          window.localStorage.setItem(\"token\", token)\r\n          if (res.data.isManager === \"Y\") {\r\n            window.localStorage.setItem(\"isManager\", res.data.isManager)\r\n            window.localStorage.setItem(\"classCode\", res.data.classCode)\r\n\r\n            history.push(\"/admin\")\r\n          } else {\r\n            window.localStorage.setItem(\"teamCode\", res.data.teamCode)\r\n\r\n            history.push(\"/student\")\r\n          }\r\n        } else {\r\n          alert(\"로그인 에러\")\r\n        }\r\n      })\r\n\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n  const toggleStart = (event) => {\r\n    setIsChange(true)\r\n    setTimeout(() => {\r\n      setIsStart(true)\r\n    }, 1000)\r\n  }\r\n  return (\r\n    <div\r\n      className={\r\n        isStart\r\n          ? styles.loginBack\r\n          : !isChange\r\n          ? styles.loginBackBefore\r\n          : styles.loginBackChanger\r\n      }\r\n    >\r\n      <div className={styles.overlay} onClick={toggleStart}>\r\n        {!isStart ? (\r\n          <div className={isChange ? styles.mainPageChange : styles.mainPage}>\r\n            <div className={styles.logoBox}>\r\n              <span className={styles.logoName}>MAFYA</span>\r\n              <img className={styles.logo} src={logo} alt=\"preview\" />\r\n            </div>\r\n            <div className={styles.seviceInfo}>\r\n              <p className={styles.catchPhrase}>\r\n                Mafya는 SSAFY인의 건강한 출석을 위한 프로그램 입니다.\r\n              </p>\r\n              <p className={styles.seviceDetail}>\r\n                학생들은 본인의 출석을 확인하고\r\n              </p>\r\n              <p>관리자는 학생들의 현황을 간단하게 확인하세요!</p>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className={styles.overlay_Inner}>\r\n            <div className={styles.overlay_title}>\r\n              <h2>Login</h2>\r\n            </div>\r\n            <div className={styles.division}>\r\n              <div className={styles.inputBox}>\r\n                <form onSubmit={loginHandler}>\r\n                  <div>\r\n                    <div>\r\n                      <span>아이디</span>\r\n                    </div>\r\n                    <input\r\n                      onChange={userCodeHandler}\r\n                      type=\"text\"\r\n                      id=\"userCode\"\r\n                      placeholder=\"아이디\"\r\n                      className={styles.loginInput}\r\n                    />\r\n                  </div>\r\n                  <div className={styles.passwordBox}>\r\n                    <div>\r\n                      <span>비밀번호</span>\r\n                    </div>\r\n                    <input\r\n                      onChange={passwordHandler}\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      placeholder=\"비밀번호\"\r\n                      className={styles.loginInput}\r\n                    />\r\n                  </div>\r\n                  <div className={styles.loginBtnBox}>\r\n                    <button\r\n                      className={\r\n                        formIsVaild ? styles.loginBtn : styles.loginBtnFalse\r\n                      }\r\n                      type=\"submit\"\r\n                      disabled={!formIsVaild}\r\n                    >\r\n                      로그인\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n              <div className={styles.infoBox}>\r\n                <div>\r\n                  <div className={styles.clauseText}>\r\n                    <p>개인정보 수집 및 이용</p>\r\n                    <br />\r\n                    <p>1. 개인정보의 수집목적</p>\r\n                    <p>\r\n                      본 홈페이지에서는 기본적인 회원 서비스 제공을 위한\r\n                      필수정보를 수집하고 있습니다. MaFya 홈페이지에서는\r\n                      정보주체의 기본적 인권 침해의 우려가 있는 민감한\r\n                      개인정보(사상,신념, 노동조합,정당의 가입,탈퇴, 정치적\r\n                      견해, 건강, 성생활, 유전정보 및 범죄경력에 관한 정보 등)는\r\n                      수집하지 않습니다.\r\n                    </p>\r\n                    <br />\r\n                    <p>가. 수집하는 개인정보의 항목</p>\r\n                    <p>\r\n                      ○ 본 홈페이지 회원서비스의 제공을 위해 아래와 같은\r\n                      회원정보를 온라인상에서 입력받고 있습니다.\r\n                    </p>\r\n                    <p>- 이름, 전화번호, 프로필 사진</p>\r\n                    <p>\r\n                      ○ 여러분이 본 홈페이지를 이용할 경우 다음의 정보는\r\n                      자동적으로 수집,저장됩니다.\r\n                    </p>\r\n                    <p>- 로그인 일시, 회원 가입 일시</p>\r\n                    <br />\r\n                    <p>나. 개인정보 수집방법</p>\r\n                    <p>○ 홈페이지 관리자에 의한 등록</p>\r\n                    <br />\r\n                    <p>2. 개인정보의 수집·이용목적 및 보유·이용기간</p>\r\n                    <p>\r\n                      MaFya 홈페이지에서는 정보주체의 회원 가입일로부터 서비스를\r\n                      제공하는 기간 동안에 한하여 MaFya 홈페이지 서비스를\r\n                      이용하기 위한 최소한의 개인정보를 보유 및 이용 하게\r\n                      됩니다. 회원가입 등을 통해 개인정보의 수집, 이용, 제공\r\n                      등에 대해 동의하신 내용은 언제든지 철회하실 수 있습니다.\r\n                      회원 탈퇴를 요청하거나 수집, 이용목적을 달성하거나 보유,\r\n                      이용기간이 종료한 경우, 사업 폐지 등의 사유발생시 당해\r\n                      개인정보를 지체없이 파기합니다.\r\n                    </p>\r\n                    <p>○ 개인정보의 수집,이용 목적</p>\r\n                    <p>- 홈페이지 이용에 따른 본인 식별, 인증 절차에 이용</p>\r\n                    <p>○ 개인정보의 보유 및 이용기간</p>\r\n                    <p>\r\n                      - 개인정보는 등록 후 1년까지 보유되며, 정보주체는\r\n                      개인정보의 수집·이용목적에 대한 동의를 거부할 수 있고,\r\n                      동의 거부시에는 본 홈페이지에 사용이 불가능하며, 본\r\n                      홈페이지에서 제공하는 서비스를 이용할 수 없습니다.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className={!isChange ? styles.starBack : styles.starBackChange}>\r\n        <div className={styles.stars}></div>\r\n        <div className={styles.stars}></div>\r\n        <div className={styles.stars}></div>\r\n        <div className={styles.stars}></div>\r\n        <div className={styles.stars}></div>\r\n        <div className={styles.stars}></div>\r\n        <div className={styles.stars}></div>\r\n        <div className={styles.stars}></div>\r\n        <div className={styles.stars}></div>\r\n        <div className={styles.stars}></div>\r\n      </div>\r\n      {/* <div className={styles.wave}></div>\r\n      <div className={styles.waveThree}></div>\r\n      <div className={styles.waveTwo}></div> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginPage\r\n","import axios from \"axios\"\r\nimport { useEffect } from \"react\"\r\nimport { useState } from \"react\"\r\nimport { API_URL } from \"../../../common/api\"\r\nimport axios1 from \"../../../common/api/axios\"\r\nimport styles from \"./attendInformation.module.css\"\r\nimport styled from \"@emotion/styled\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { math } from \"@tensorflow/tfjs\"\r\n\r\nconst AnimatedCircle = styled.circle`\r\n  animation: circle-fill-animation 2s ease;\r\n\r\n  @keyframes circle-fill-animation {\r\n    0% {\r\n      stroke-dasharray: 0 ${2 * Math.PI * 90};\r\n    }\r\n  }\r\n`\r\nconst AttendInformation = (props) => {\r\n  const [information, setInformation] = useState({})\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [name, setName] = useState(\"\")\r\n  const history = useHistory()\r\n\r\n  const logoutHandler = (event) => {\r\n    axios1\r\n      .get(API_URL + \"student/logout/\", {\r\n        headers: {\r\n          accessToken: window.localStorage.getItem(\"token\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        window.localStorage.clear()\r\n        history.push(\"/\")\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const userCode = localStorage.getItem(\"userCode\")\r\n\r\n    axios1\r\n      .get(\r\n        API_URL +\r\n          `attendance/situation/${userCode}/${\r\n            props.month > 9 ? props.month : \"0\" + props.month\r\n          }`,\r\n        {\r\n          headers: {\r\n            accessToken: window.localStorage.getItem(\"token\"),\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data)\r\n        setInformation(res.data)\r\n      })\r\n\r\n    setIsLoading(false)\r\n  }, [props.month])\r\n\r\n  return (\r\n    !isLoading && (\r\n      <div>\r\n        <div className={styles.attendTitle}>{props.month}월 출결 현황</div>\r\n        <div className={styles.attendOverlay}>\r\n          <div className={styles.leftSide}>\r\n            <div className={styles.userNameBox}>\r\n              <p>\r\n                <span className={styles.userName}>{props.name}</span> 님\r\n                <div className={styles.logoutBtnBox}>\r\n                  <button className={styles.logoutBtn} onClick={logoutHandler}>\r\n                    <span className=\"material-symbols-outlined\">logout</span>\r\n                  </button>\r\n                </div>\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <div className={styles.percentageBox}>\r\n                {information.totalDay ? (\r\n                  <div className={styles.percentageP}>\r\n                    {Math.ceil(\r\n                      (information.participation /\r\n                        (information.participation + information.absent)) *\r\n                        100\r\n                    )}\r\n                    %\r\n                  </div>\r\n                ) : (\r\n                  <div className={styles.percentageP}>0%</div>\r\n                )}\r\n              </div>\r\n              <div className={styles.percentageChart}>\r\n                <svg viewBox=\"0 0 200 200\">\r\n                  <circle\r\n                    cx=\"100\"\r\n                    cy=\"100\"\r\n                    r=\"78\"\r\n                    fill=\"none\"\r\n                    stroke=\"white\"\r\n                    strokeWidth=\"1\"\r\n                  />\r\n                  <circle\r\n                    cx=\"100\"\r\n                    cy=\"100\"\r\n                    r=\"90\"\r\n                    fill=\"none\"\r\n                    stroke=\"rgba(255, 255, 255, 0.2)\"\r\n                    strokeWidth=\"20\"\r\n                  />\r\n                  <AnimatedCircle\r\n                    cx=\"100\"\r\n                    cy=\"100\"\r\n                    r=\"90\"\r\n                    fill=\"none\"\r\n                    stroke=\"white\"\r\n                    strokeWidth=\"20\"\r\n                    strokeDasharray={`${\r\n                      2 *\r\n                      Math.PI *\r\n                      90 *\r\n                      (information.participation /\r\n                        (information.participation + information.absent))\r\n                    } ${\r\n                      2 *\r\n                      Math.PI *\r\n                      90 *\r\n                      (1 -\r\n                        information.participation /\r\n                          (information.participation + information.absent))\r\n                    }`}\r\n                    strokeDashoffset={2 * Math.PI * 90 * 0.25}\r\n                  />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={styles.rightSide}>\r\n            <div className={styles.attendOneFloor}>\r\n              <div className={styles.rightSideInfoBox}>\r\n                <p>출석수</p>\r\n                <div className={styles.numBox}>{information.participation}</div>\r\n              </div>\r\n              <div className={styles.rightSideInfoBox}>\r\n                <p>교육 일수</p>\r\n                <div className={styles.numBox}>{information.totalDay}</div>\r\n              </div>\r\n            </div>\r\n            <div className={styles.attendTwoFloor}>\r\n              <div className={styles.rightSideInfoBox}>\r\n                <p>지각</p>\r\n                <div className={styles.numBox}>{information.trady}</div>\r\n              </div>\r\n              <div className={styles.rightSideInfoBox}>\r\n                <p>결석</p>\r\n                <div className={styles.numBox}>{information.absent}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <table className={styles.table}>\r\n          <thead>\r\n            <tr>\r\n              <th>출석</th>\r\n              <th>결석</th>\r\n              <th>지각</th>\r\n              <th>교육 지원금</th>\r\n              <th>교육 일수</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>{information.totalAttend}</td>\r\n              <td>{information.absent}</td>\r\n              <td>{information.trady}</td>\r\n              <td>{information.money}</td>\r\n              <td>{information.totalDay}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table> */}\r\n      </div>\r\n    )\r\n  )\r\n}\r\n\r\nexport default AttendInformation\r\n","import styles from \"./calender.module.css\"\r\n\r\nconst EvenItem = ({ info }) => {\r\n  const { event } = info\r\n\r\n  const type = event._def.extendedProps.type\r\n  // 이걸로 조건부 랜더링 하면 될듯함.\r\n  // 입실, 퇴실, 현황\r\n  // console.log(event)\r\n  return (\r\n    <div\r\n      className={\r\n        type === \"입실\"\r\n          ? styles.eventSpanAttend\r\n          : type === \"퇴실\"\r\n          ? styles.eventSpanAbscent\r\n          : styles.eventSpanStatus\r\n      }\r\n    >\r\n      <div\r\n        className={\r\n          type === \"현황\"\r\n            ? event.title === \"결석\"\r\n              ? styles.abscentColor\r\n              : (event.title === \"지각\") | (event.title === \"조퇴\")\r\n              ? styles.tardyColor\r\n              : styles.attendColor\r\n            : styles.none\r\n        }\r\n      >\r\n        {event.title}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EvenItem\r\n","import FullCalendar, { preventContextMenu } from \"@fullcalendar/react\"\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\"\r\nimport { useState } from \"react\"\r\nimport { useEffect, useRef } from \"react\"\r\nimport EvenItem from \"./evenItem\"\r\nimport axios from \"axios\"\r\nimport { API_URL } from \"../../../common/api\"\r\nimport axios1 from \"../../../common/api/axios\"\r\nimport styles from \"./calender.module.css\"\r\n\r\nconst Calender = (props) => {\r\n  const [events, setEvents] = useState([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n\r\n  // 달 이동 시에 state 변환\r\n  const calendarRef = useRef()\r\n  useEffect(() => {\r\n    setEvents([])\r\n    const userCode = localStorage.getItem(\"userCode\")\r\n    axios1\r\n      .get(API_URL + `attendance/calendar/${userCode}`, {\r\n        headers: {\r\n          accessToken: window.localStorage.getItem(\"token\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        const calenderInformation = res.data\r\n        const data = []\r\n        calenderInformation.forEach((dayInformation) => {\r\n          if (dayInformation.enterTime !== \"\") {\r\n            let enterInformation = {\r\n              title: dayInformation.enterTime + \" 입실\",\r\n              date: dayInformation.date,\r\n              type: \"입실\",\r\n            }\r\n            data.push(enterInformation)\r\n          }\r\n          if (dayInformation.exitTime !== \"\") {\r\n            let exitInformation = {\r\n              title: dayInformation.exitTime + \" 퇴실\",\r\n              date: dayInformation.date,\r\n              type: \"퇴실\",\r\n            }\r\n            data.push(exitInformation)\r\n          }\r\n          const status = (attendanceStatus) => {\r\n            if (attendanceStatus === 0) {\r\n              return \"입실\"\r\n            } else if (attendanceStatus === 10) {\r\n              return \"지각\"\r\n            } else if (attendanceStatus === 11) {\r\n              return \"조퇴\"\r\n            } else if (attendanceStatus === 12) {\r\n              return \"지각\"\r\n            } else if (attendanceStatus === 2) {\r\n              return \"조퇴\"\r\n            } else if (attendanceStatus === 3) {\r\n              return \"퇴실\"\r\n            } else if (attendanceStatus === 4) {\r\n              return \"오류\"\r\n            } else {\r\n              return \"결석\"\r\n            }\r\n          }\r\n          let typeInformation = {\r\n            title: status(dayInformation.type),\r\n            date: dayInformation.date,\r\n            type: \"현황\",\r\n          }\r\n          data.push(typeInformation)\r\n        })\r\n        const result = data.filter((tmpEvent, index) => {\r\n          const month = new Date(tmpEvent.date).getMonth() + 1\r\n          if (month === props.month) {\r\n            return true\r\n          }\r\n        })\r\n\r\n        setEvents(result)\r\n        setIsLoading(false)\r\n      })\r\n  }, [props.month])\r\n  // useEffect(() => {\r\n  //   console.log(\"안녕하신가\");\r\n  //   if (document.readyState === \"complete\") {\r\n  //     document\r\n  //       .getElementsByClassName(\"fc-prev-button\")[0]\r\n  //       .removeEventListener(\"click\", onClickPrevButton);\r\n  //     console.log(\"hello\");\r\n  //     // document\r\n  //     //   .getElementsByClassName(\"fc-prev-button\")[0]\r\n  //     //   .addEventListener(\"click\", onClickPrevButton, { once: true });\r\n  //   }\r\n  // }, [currentMonth]);\r\n  // const handleClick = (event) => {\r\n  //   event.preventDefault();\r\n  //   console.log(event.dateStr);\r\n  // };\r\n  return (\r\n    !isLoading && (\r\n      <div className={styles.calenderOverlay}>\r\n        <div className={styles.calenderOverlayInner}>\r\n          {!isLoading && (\r\n            <FullCalendar\r\n              ref={calendarRef}\r\n              defaultView=\"dayGridMonth\"\r\n              plugins={[dayGridPlugin]}\r\n              weekends={true}\r\n              contentHeight=\"618px\"\r\n              events={events}\r\n              eventContent={(info) => <EvenItem info={info} />}\r\n              eventBackgroundColor={\"transparent\"}\r\n              eventBorderColor={\"transparent\"}\r\n              // eventTextColor={\"#000\"}\r\n              customButtons={{\r\n                myCustomPrev: {\r\n                  text: <span>{\"<\"}</span>,\r\n                  click: function () {\r\n                    calendarRef.current.getApi().prev()\r\n                    props.setMonth(props.month === 1 ? 12 : props.month - 1)\r\n                  },\r\n                  className: styles.leftBtn,\r\n                },\r\n\r\n                myCustomToday: {\r\n                  text: <span class=\"material-symbols-outlined\">today</span>,\r\n                  click: function () {\r\n                    calendarRef.current.getApi().today()\r\n                    props.setMonth(new Date().getMonth() + 1)\r\n                  },\r\n                },\r\n                myCustomNext: {\r\n                  text: <span>{\">\"}</span>,\r\n                  click: function () {\r\n                    calendarRef.current.getApi().next()\r\n\r\n                    props.setMonth((props.month % 12) + 1)\r\n                  },\r\n                },\r\n              }}\r\n              headerToolbar={{\r\n                right: \"myCustomPrev myCustomToday myCustomNext\",\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Calender\r\n","import { StylesContext } from \"@material-ui/styles\"\r\nimport { useState } from \"react\"\r\nimport CustomModal from \"../../../common/modal/modal\"\r\nimport styles from \"./teamMember.module.css\"\r\n\r\nconst TeamMemberRow = ({ student, mmsHandler, setIds }) => {\r\n  const status = (attendanceStatus) => {\r\n    if (attendanceStatus === 0) {\r\n      return \"입실\"\r\n    } else if (attendanceStatus === 10) {\r\n      return \"지각\"\r\n    } else if (attendanceStatus === 11) {\r\n      return \"조퇴\"\r\n    } else if (attendanceStatus === 12) {\r\n      return \"지각\"\r\n    } else if (attendanceStatus === 2) {\r\n      return \"조퇴\"\r\n    } else if (attendanceStatus === 3) {\r\n      return \"퇴실\"\r\n    } else if (attendanceStatus === 4) {\r\n      return \"오류\"\r\n    } else {\r\n      return \"결석\"\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        (student.attendanceStatus === 0) | (student.attendanceStatus === 3)\r\n          ? styles.teamBoxAttend\r\n          : styles.teamBoxAbscent\r\n      }\r\n    >\r\n      <div className={styles.teamInner}>\r\n        <div className={styles.teamName}>\r\n          <span>{student.name}</span>\r\n        </div>\r\n        <div className={styles.teamStatus}>\r\n          <span>{status(student.attendanceStatus)}</span>\r\n        </div>\r\n        <button\r\n          className={\r\n            (student.attendanceStatus === 0) | (student.attendanceStatus === 3)\r\n              ? styles.msgBtnFalse\r\n              : styles.msgBtnTrue\r\n          }\r\n          onClick={() => {\r\n            mmsHandler()\r\n            setIds(student.id)\r\n          }}\r\n          disabled={\r\n            (student.attendanceStatus === 0) | (student.attendanceStatus === 3)\r\n              ? true\r\n              : false\r\n          }\r\n        >\r\n          <span className=\"material-symbols-outlined\">mail</span>\r\n          <span className=\"material-symbols-outlined\">send</span>\r\n        </button>\r\n\r\n        {/* 향후에 MMS 기능 넣으면 끝 */}\r\n        {/* \r\n      <td>\r\n        <button type=\"button\" onClick={(event) => updateHandler(student)}>\r\n          Edit\r\n        </button>\r\n      \r\n      </td> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TeamMemberRow\r\n","import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport TeamMemberRow from \"./teamMemberRow.\";\r\nimport styles from \"./teamMember.module.css\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../../common/api\";\r\nimport axios1 from \"../../../common/api/axios\";\r\n\r\nconst TeamMember = (props) => {\r\n  localStorage.getItem(\"teamCode\");\r\n\r\n  const [team, setTeam] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const teamCode = localStorage.getItem(\"teamCode\");\r\n\r\n    axios1\r\n      .get(API_URL + `attendance/team/${teamCode}`, {\r\n        headers: {\r\n          accessToken: window.localStorage.getItem(\"token\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        const data = res.data;\r\n        const index = data.findIndex((stduent) => stduent.id === props.userId);\r\n        data.splice(index, 1);\r\n        setTeam(data.slice(0, 5));\r\n      });\r\n\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  console.log(props.userId);\r\n\r\n  return (\r\n    !isLoading && (\r\n      <div>\r\n        <div className={styles.teamMemberTitle}>팀원 현황</div>\r\n        <div className={styles.teamMemberOverlay}>\r\n          <table className={styles.table}>\r\n            {team.map((student) => {\r\n              return (\r\n                <TeamMemberRow\r\n                  key={student.id}\r\n                  student={student}\r\n                  setIds={props.setIds}\r\n                  mmsHandler={props.mmsHandler}\r\n                />\r\n              );\r\n            })}\r\n          </table>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default TeamMember;\r\n","import { useEffect } from \"react\"\r\nimport { useState } from \"react\"\r\nimport AttendInformation from \"./attend/attendInformation\"\r\nimport Calender from \"./calendar/calender\"\r\nimport StudentHeader from \"./header/studentHeader\"\r\nimport TeamMember from \"./team/teamMember\"\r\nimport styles from \"./studentMainPage.module.css\"\r\nimport CustomModal from \"../../common/modal/modal\"\r\nimport axios1 from \"../../common/api/axios\"\r\nimport { API_URL } from \"../../common/api\"\r\nimport axios from \"axios\"\r\n\r\nconst StudentMainPage = () => {\r\n  const [month, setMonth] = useState(null)\r\n  const [modalOpen, setModalOpen] = useState(false)\r\n  const [messages, setMessages] = useState(\"\")\r\n  const [ids, setIds] = useState(null)\r\n  const [name, setName] = useState(\"\")\r\n  const [userId, setUserId] = useState(\"\")\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const Swal = require(\"sweetalert2\")\r\n\r\n  const messegesHandler = (event) => {\r\n    const tmpMessges = event.target.value\r\n    setMessages(tmpMessges)\r\n  }\r\n\r\n  const openModal = (event) => {\r\n    setModalOpen(true)\r\n  }\r\n  const closeModal = () => {\r\n    setModalOpen(false)\r\n    setMessages(\"\")\r\n  }\r\n\r\n  const mmsHandler = (event) => {\r\n    setModalOpen(true)\r\n  }\r\n\r\n  const mmsTransferHandler = (event) => {\r\n    event.preventDefault()\r\n    const formData = { ids: [ids], messages }\r\n    console.log(formData)\r\n    axios1\r\n      .post(API_URL + \"mms\", formData, {\r\n        headers: { accessToken: window.localStorage.getItem(\"token\") },\r\n      })\r\n      .then((res) => {\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: `메세지가 전송되었습니다.`,\r\n          timer: 1500,\r\n        })\r\n        setModalOpen(false)\r\n        setMessages(\"\")\r\n        setIds(null)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const userCode = localStorage.getItem(\"userCode\")\r\n    let today = new Date()\r\n    setMonth(today.getMonth() + 1)\r\n    axios\r\n      .get(API_URL + `student/userCode/${userCode}`, {\r\n        headers: {\r\n          accessToken: window.localStorage.getItem(\"token\"),\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setUserId(res.data.userInfo.id)\r\n        setName(res.data.userInfo.name)\r\n      })\r\n    setIsLoading(false)\r\n  }, [])\r\n\r\n  return (\r\n    month &&\r\n    !isLoading &&\r\n    userId &&\r\n    name && (\r\n      <div>\r\n        <CustomModal open={modalOpen} close={closeModal} header=\"\">\r\n          <form onSubmit={mmsTransferHandler}>\r\n            <span>전송할 메시지를 입력하세요!</span>\r\n            <div>\r\n              <input\r\n                type=\"textarea\"\r\n                value={messages}\r\n                onChange={messegesHandler}\r\n              />\r\n            </div>\r\n            <div>\r\n              <button type=\"submit\" className=\"close\">\r\n                전송\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </CustomModal>\r\n        <div className={styles.wholePage}>\r\n          {/* <StudentHeader /> */}\r\n          <div className={styles.inner}>\r\n            <div className={styles.statusBox}>\r\n              <div className={styles.attendInfoBox}>\r\n                <AttendInformation month={month} name={name} />\r\n              </div>\r\n              <div className={styles.teamMemberBox}>\r\n                <TeamMember\r\n                  mmsHandler={mmsHandler}\r\n                  setIds={setIds}\r\n                  userId={userId}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className={styles.calenderBox}>\r\n              <Calender setMonth={setMonth} month={month} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  )\r\n}\r\n\r\nexport default StudentMainPage\r\n","export default __webpack_public_path__ + \"static/media/notenroll.90469acc.mp3\";","export default __webpack_public_path__ + \"static/media/putmask.ad8fe529.mp3\";","export default __webpack_public_path__ + \"static/media/normalenter.fd5282d8.mp3\";","export default __webpack_public_path__ + \"static/media/abnormalenter.1bdf17b3.mp3\";","export default __webpack_public_path__ + \"static/media/twoenter.e1d51a06.mp3\";","export default __webpack_public_path__ + \"static/media/correctmask.6a1fe2f3.mp3\";","export default __webpack_public_path__ + \"static/media/abnormalexit.f68f72dd.mp3\";","export default __webpack_public_path__ + \"static/media/normalexit.07eb3840.mp3\";","export default __webpack_public_path__ + \"static/media/notenroll1.90469acc.mp3\";","export default __webpack_public_path__ + \"static/media/absent.02a9bf94.mp3\";","import { useRef, useState, useEffect } from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\r\nimport Webcam from \"react-webcam\";\r\n\r\nimport { drawRect } from \"./utilities\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../common/api\";\r\nimport styles from \"./webcam.module.css\";\r\nimport { detectFace, detectMasking, gateLog } from \"./cameraAPI\";\r\n\r\nimport notenroll from \"./male/enter/notenroll.mp3\";\r\nimport putmask from \"./male/enter/putmask.mp3\";\r\nimport normalenter from \"./male/enter/normalenter.mp3\";\r\nimport abnormalenter from \"./male/exit/abnormalenter.mp3\";\r\nimport twoenter from \"./male/enter/twoenter.mp3\";\r\nimport correctmask from \"./male/enter/correctmask.mp3\";\r\nimport abnormalexit from \"./male/exit/abnormalexit.mp3\";\r\nimport normalexit from \"./male/exit/normalexit.mp3\";\r\nimport notenroll1 from \"./male/exit/notenroll1.mp3\";\r\nimport absent from \"./male/exit/absent.mp3\";\r\nimport Spinner from \"../../common/spinner\";\r\nconst Swal = require(\"sweetalert2\");\r\n\r\nfunction ExitCamera() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const [timerId, setTimerId] = useState(null);\r\n  const [humanDetacting, setHumanDetacting] = useState(false);\r\n  const [faceDetacting, setFaceDetacting] = useState(false);\r\n  const [model, setModel] = useState(null);\r\n  const [userCode, setUserCode] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isLoading2, setIsLoading2] = useState(true);\r\n  const handleUserMedia = () => {\r\n    console.log(\"웹캠 로딩끝났어요!!\");\r\n    setIsLoading2(false);\r\n  };\r\n\r\n  const dataURLtoFile = (dataurl, fileName) => {\r\n    var arr = dataurl.split(\",\"),\r\n      mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]),\r\n      n = bstr.length,\r\n      u8arr = new Uint8Array(n);\r\n\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n\r\n    return new File([u8arr], fileName, { type: mime });\r\n  };\r\n\r\n  const detectMask = (userCode) => {\r\n    setFaceDetacting(true);\r\n    return new Promise((resolve) => {\r\n      setTimeout(async () => {\r\n        const imageUrl = webcamRef.current.getScreenshot();\r\n        let imageFile = dataURLtoFile(imageUrl, \"test1.jpeg\");\r\n        let formData = new FormData();\r\n        formData.set(\"file\", imageFile);\r\n        formData.set(\"userCode\", userCode);\r\n        const maskRes = await detectMasking(formData);\r\n        if (maskRes.data.status === \"0\") {\r\n          const attendRespone = await gateLog(userCode);\r\n          if (attendRespone.data === 0) {\r\n            new Audio(normalenter).play();\r\n            Swal.fire({\r\n              icon: \"success\",\r\n              title: `${maskRes.data.name}님 출석되었습니다.`,\r\n              showConfirmButton: false,\r\n              timer: 3000,\r\n            });\r\n            // console.log(attendRespone.data); 이걸로 분기\r\n            return new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                setHumanDetacting(false);\r\n                setFaceDetacting(false);\r\n                setUserCode(null);\r\n              }, 3000);\r\n            });\r\n          } else if (attendRespone.data === 4) {\r\n            new Audio(twoenter).play();\r\n            Swal.fire({\r\n              icon: \"success\",\r\n              title: `${maskRes.data.name}님 이미 입실하셨습니다.`,\r\n              showConfirmButton: false,\r\n              timer: 3000,\r\n            });\r\n            // console.log(attendRespone.data); 이걸로 분기\r\n            return new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                setHumanDetacting(false);\r\n                setFaceDetacting(false);\r\n                setUserCode(null);\r\n              }, 3000);\r\n            });\r\n          }\r\n        } else if (maskRes.data.status === \"1\") {\r\n          // 모달 창\r\n          new Audio(correctmask).play();\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          });\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false);\r\n              setFaceDetacting(false);\r\n            }, 3000);\r\n          });\r\n        } else if (maskRes.data.status === \"2\") {\r\n          new Audio(correctmask).play();\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          });\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false);\r\n              setFaceDetacting(false);\r\n            }, 3000);\r\n          });\r\n        } else {\r\n          new Audio(correctmask).play();\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          });\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false);\r\n              setFaceDetacting(false);\r\n            }, 3000);\r\n          });\r\n        }\r\n      });\r\n    }, 6000);\r\n  };\r\n\r\n  const detect = async (net) => {\r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      // Make Detections\r\n      const obj = await net.detect(video);\r\n\r\n      // Draw mesh\r\n\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n      console.log(obj);\r\n      const findHuman = obj\r\n        ? obj.filter((box) => {\r\n            return box.class === \"person\" && box.score >= 0.8;\r\n          })\r\n        : null;\r\n\r\n      let humanDetact = findHuman\r\n        ? findHuman.filter((box) => {\r\n            return (\r\n              15 <= box.bbox[0] <= 160 &&\r\n              15 <= box.bbox[1] <= 160 &&\r\n              box.bbox[2] >= 350 &&\r\n              box.bbox[3] >= 300\r\n            );\r\n          })\r\n        : [];\r\n      console.log(humanDetact);\r\n      if (humanDetact.length > 0) {\r\n        setHumanDetacting(true);\r\n        // new Audio(humanDetactMp3).play();\r\n        return new Promise((resolve) => {\r\n          setTimeout(async () => {\r\n            const imageUrl = webcamRef.current.getScreenshot();\r\n            let imageFile = dataURLtoFile(imageUrl, \"test.jpeg\");\r\n            let formData = new FormData();\r\n            formData.set(\"file\", imageFile);\r\n            const res = await detectFace(formData);\r\n\r\n            if (res.data.status === \"0\") {\r\n              // const gateResponse = await gateLog(res.data.userCode);\r\n              new Audio(putmask).play();\r\n              Swal.fire({\r\n                icon: \"success\",\r\n                title: `${res.data.name}님 어서오세요.`,\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n              setUserCode(res.data.userCode);\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  detectMask(res.data.userCode);\r\n                }, 6000);\r\n              });\r\n            } else if (res.data.status === \"1\") {\r\n              new Audio(notenroll).play();\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"오류\",\r\n                text: \"DB에 등록된 사용자가 아닙니다.\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false);\r\n                }, 2500);\r\n              });\r\n            } else if (res.data.status === \"2\") {\r\n              new Audio(notenroll).play();\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"오류\",\r\n                text: \"중앙으로 와주세요\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false);\r\n                }, 2500);\r\n              });\r\n            }\r\n          }, 2000);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const lateDetectMask = (userCode, attendRespone) => {\r\n    setFaceDetacting(true);\r\n    return new Promise((resolve) => {\r\n      setTimeout(async () => {\r\n        const imageUrl = webcamRef.current.getScreenshot();\r\n        let imageFile = dataURLtoFile(imageUrl, \"test1.jpeg\");\r\n        let formData = new FormData();\r\n        formData.set(\"file\", imageFile);\r\n        formData.set(\"userCode\", userCode);\r\n        const maskRes = await detectMasking(formData);\r\n        if (maskRes.data.status === \"0\") {\r\n          if (attendRespone === 10) {\r\n            new Audio(abnormalenter).play();\r\n            Swal.fire({\r\n              icon: \"success\",\r\n              title: `${maskRes.data.name}님 지각입니다.`,\r\n              showConfirmButton: false,\r\n              timer: 3000,\r\n            });\r\n            // console.log(attendRespone.data); 이걸로 분기\r\n            return new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                setHumanDetacting(false);\r\n                setFaceDetacting(false);\r\n                setUserCode(null);\r\n              }, 3000);\r\n            });\r\n          } else if (attendRespone === 99) {\r\n            new Audio(absent).play();\r\n            Swal.fire({\r\n              icon: \"success\",\r\n              title: `${maskRes.data.name}님 지각 누적으로 결석했습니다.`,\r\n              showConfirmButton: false,\r\n              timer: 3000,\r\n            });\r\n            // console.log(attendRespone.data); 이걸로 분기\r\n            return new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                setHumanDetacting(false);\r\n                setFaceDetacting(false);\r\n                setUserCode(null);\r\n              }, 3000);\r\n            });\r\n          }\r\n        } else if (maskRes.data.status === \"1\") {\r\n          // 모달 창\r\n          new Audio(correctmask).play();\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          });\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false);\r\n              setFaceDetacting(false);\r\n            }, 3000);\r\n          });\r\n        } else if (maskRes.data.status === \"2\") {\r\n          new Audio(correctmask).play();\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          });\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false);\r\n              setFaceDetacting(false);\r\n            }, 3000);\r\n          });\r\n        } else {\r\n          new Audio(correctmask).play();\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          });\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false);\r\n              setFaceDetacting(false);\r\n            }, 3000);\r\n          });\r\n        }\r\n      });\r\n    }, 6000);\r\n  };\r\n  const detect1 = async (net) => {\r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      // Make Detections\r\n      const obj = await net.detect(video);\r\n\r\n      // Draw mesh\r\n\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n      console.log(obj);\r\n      const findHuman = obj\r\n        ? obj.filter((box) => {\r\n            return box.class === \"person\" && box.score >= 0.8;\r\n          })\r\n        : null;\r\n\r\n      let humanDetact = findHuman\r\n        ? findHuman.filter((box) => {\r\n            return (\r\n              15 <= box.bbox[0] <= 160 &&\r\n              15 <= box.bbox[1] <= 160 &&\r\n              box.bbox[2] >= 350 &&\r\n              box.bbox[3] >= 300\r\n            );\r\n          })\r\n        : [];\r\n      console.log(humanDetact);\r\n      if (humanDetact.length > 0) {\r\n        setHumanDetacting(true);\r\n        // new Audio(humanDetactMp3).play();\r\n        return new Promise((resolve) => {\r\n          setTimeout(async () => {\r\n            const imageUrl = webcamRef.current.getScreenshot();\r\n            let imageFile = dataURLtoFile(imageUrl, \"test.jpeg\");\r\n            let formData = new FormData();\r\n            formData.set(\"file\", imageFile);\r\n            const res = await detectFace(formData);\r\n\r\n            if (res.data.status === \"0\") {\r\n              let gateResponse = await gateLog(res.data.userCode);\r\n\r\n              if (gateResponse.data === 3 || gateResponse.data === 12) {\r\n                new Audio(normalexit).play();\r\n\r\n                Swal.fire({\r\n                  icon: \"success\",\r\n                  title: `${res.data.name}님 퇴실하셨습니다.`,\r\n                  showConfirmButton: false,\r\n                  timer: 2500,\r\n                });\r\n\r\n                return new Promise((resolve) => {\r\n                  setTimeout(() => {\r\n                    setHumanDetacting(false);\r\n                  }, 2500);\r\n                });\r\n              } else if (gateResponse.data === 2 || gateResponse.data === 11) {\r\n                new Audio(abnormalexit).play();\r\n\r\n                Swal.fire({\r\n                  icon: \"success\",\r\n                  title: `${res.data.name}님 조기퇴실하셨습니다.`,\r\n                  showConfirmButton: false,\r\n                  timer: 2500,\r\n                });\r\n\r\n                return new Promise((resolve) => {\r\n                  setTimeout(() => {\r\n                    setHumanDetacting(false);\r\n                  }, 2500);\r\n                });\r\n              } else if (gateResponse.data === 10 || gateResponse.data === 99) {\r\n                new Audio(putmask).play();\r\n\r\n                Swal.fire({\r\n                  icon: \"success\",\r\n                  title: `${res.data.name}님 입실했습니다.`,\r\n                  showConfirmButton: false,\r\n                  timer: 2500,\r\n                });\r\n\r\n                setUserCode(res.data.userCode);\r\n                return new Promise((resolve) => {\r\n                  setTimeout(() => {\r\n                    lateDetectMask(res.data.userCode, gateResponse.data);\r\n                  }, 6000);\r\n                });\r\n              }\r\n            } else if (res.data.status === \"1\") {\r\n              new Audio(notenroll).play();\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"오류\",\r\n                text: \"DB에 등록된 사용자가 아닙니다.\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false);\r\n                }, 2500);\r\n              });\r\n            } else if (res.data.status === \"2\") {\r\n              new Audio(notenroll1).play();\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"오류\",\r\n                text: \"중앙으로 와주세요\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false);\r\n                }, 2500);\r\n              });\r\n            }\r\n          }, 2000);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const defineInterval = (net) => {\r\n    if (currentTime.getHours() < 9) {\r\n      if (net) {\r\n        const timeId = setInterval(() => {\r\n          detect(net);\r\n        }, 1000);\r\n        setTimerId(timeId);\r\n      }\r\n      if (humanDetacting) {\r\n        console.log(\"인간 인식\", net);\r\n        clearInterval(timerId);\r\n        setTimerId(null);\r\n      }\r\n    } else {\r\n      if (net) {\r\n        const timeId = setInterval(() => {\r\n          detect1(net);\r\n        }, 1000);\r\n        setTimerId(timeId);\r\n      }\r\n      if (humanDetacting) {\r\n        console.log(\"인간 인식\", net);\r\n        clearInterval(timerId);\r\n        setTimerId(null);\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    async function runModel() {\r\n      const net = await cocossd.load();\r\n      console.log(\"모델 업로드 끝\");\r\n      setModel(net);\r\n      setIsLoading(false);\r\n      // defineInterval(net)\r\n    }\r\n    runModel();\r\n    // runCocoSsd();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(model);\r\n    if (model && !humanDetacting) {\r\n      console.log(\"확인\");\r\n\r\n      defineInterval(model);\r\n    } else if (model && humanDetacting) {\r\n      defineInterval(null);\r\n    }\r\n  }, [humanDetacting, model]);\r\n\r\n  useEffect(() => {\r\n    const currentTimerId = setInterval(() => {\r\n      setCurrentTime(new Date());\r\n    });\r\n    return clearInterval(currentTimerId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.mainPageContainer}>\r\n      <div\r\n        className={styles.webCamBox}\r\n        style={{\r\n          display: !isLoading && !isLoading2 ? \"\" : \"none\",\r\n        }}\r\n      >\r\n        <div className={faceDetacting ? styles.humanNow : styles.noHumanNow}>\r\n          <div\r\n            className={\r\n              humanDetacting\r\n                ? faceDetacting\r\n                  ? styles.tmp\r\n                  : styles.detectNow\r\n                : styles.nodetectNow\r\n            }\r\n          >\r\n            <Webcam\r\n              ref={webcamRef}\r\n              muted={true}\r\n              mirrored={true}\r\n              screenshotFormat=\"image/jpeg\"\r\n              className={styles.webCamArea}\r\n              onUserMedia={handleUserMedia}\r\n            />\r\n            <canvas ref={canvasRef} className={styles.webCanvas} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: !isLoading && !isLoading2 ? \"none\" : \"\",\r\n        }}\r\n      >\r\n        <Spinner />\r\n      </div>\r\n      {/* <span className={styles.forMJDesign}>{sentence}</span> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExitCamera;\r\n","export const isLogin = () => !!localStorage.getItem(\"userCode\");\r\nexport const isAdmin = () => !!localStorage.getItem(\"isManager\");\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n//import { useSelector } from \"react-redux\";\r\nimport { isAdmin, isLogin } from \"../api/isLogin\";\r\n\r\nexport default function PublicRoute({\r\n  component: Component,\r\n  restricted,\r\n  ...rest\r\n}) {\r\n  // const { isLoggedIn } = useSelector((state) => state.auth);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAdmin() && restricted ? (\r\n          <Redirect to=\"/admin\" />\r\n        ) : isLogin() && restricted ? (\r\n          <Redirect to=\"/student\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Route, Redirect, useHistory } from \"react-router-dom\";\r\nimport { isAdmin, isLogin } from \"../api/isLogin\";\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  // }\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLogin() && !isAdmin() ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Route, Redirect, useHistory } from \"react-router-dom\";\r\nimport { isAdmin, isLogin } from \"../api/isLogin\";\r\n\r\nexport default function AdminRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAdmin() ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import { useRef, useState, useEffect } from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\r\nimport Webcam from \"react-webcam\";\r\n\r\nimport { drawRect } from \"./utilities\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../common/api\";\r\nimport styles from \"./webcam.module.css\";\r\nimport { detectFace, detectMasking, gateLog } from \"./cameraAPI\";\r\n\r\nimport notenroll from \"./female/enter/notenroll.mp3\";\r\nimport putmask from \"./female/enter/putmask.mp3\";\r\nimport normalenter from \"./female/enter/normalenter.mp3\";\r\nimport abnormalenter from \"./female/enter/abnormalenter.mp3\";\r\nimport twoenter from \"./female/enter/twoenter.mp3\";\r\nimport correctmask from \"./female/enter/correctmask.mp3\";\r\nimport abnormalexit from \"./female/exit/abnormalexit.mp3\";\r\nimport normalexit from \"./female/exit/normalexit.mp3\";\r\nimport notenroll1 from \"./female/exit/notenroll1.mp3\";\r\nimport absent from \"./female/enter/absent.mp3\";\r\nconst Swal = require(\"sweetalert2\");\r\n\r\nfunction WomanNormalEnter() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const [timerId, setTimerId] = useState(null);\r\n  const [humanDetacting, setHumanDetacting] = useState(false);\r\n  const [faceDetacting, setFaceDetacting] = useState(false);\r\n  const [model, setModel] = useState(null);\r\n  const [userCode, setUserCode] = useState(null);\r\n\r\n  const dataURLtoFile = (dataurl, fileName) => {\r\n    var arr = dataurl.split(\",\"),\r\n      mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]),\r\n      n = bstr.length,\r\n      u8arr = new Uint8Array(n);\r\n\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n\r\n    return new File([u8arr], fileName, { type: mime });\r\n  };\r\n\r\n  const detectMask = (userCode) => {\r\n    setFaceDetacting(true);\r\n    return new Promise((resolve) => {\r\n      setTimeout(async () => {\r\n        const imageUrl = webcamRef.current.getScreenshot();\r\n        let imageFile = dataURLtoFile(imageUrl, \"test1.jpeg\");\r\n        let formData = new FormData();\r\n        formData.set(\"file\", imageFile);\r\n        formData.set(\"userCode\", userCode);\r\n        const maskRes = await detectMasking(formData);\r\n        if (maskRes.data.status === \"0\") {\r\n            new Audio(normalenter).play();\r\n            Swal.fire({\r\n              icon: \"success\",\r\n              title: `${maskRes.data.name}님 출석되었습니다.`,\r\n              showConfirmButton: false,\r\n              timer: 3000,\r\n            });\r\n            // console.log(attendRespone.data); 이걸로 분기\r\n            return new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                setHumanDetacting(false);\r\n                setFaceDetacting(false);\r\n                setUserCode(null);\r\n              }, 3000);\r\n            });\r\n          } \r\n        else if (maskRes.data.status === \"1\") {\r\n          // 모달 창\r\n          new Audio(correctmask).play();\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          });\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false);\r\n              setFaceDetacting(false);\r\n            }, 3000);\r\n          });\r\n        } else if (maskRes.data.status === \"2\") {\r\n          new Audio(correctmask).play();\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          });\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false);\r\n              setFaceDetacting(false);\r\n            }, 3000);\r\n          });\r\n        } else {\r\n          new Audio(correctmask).play();\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          });\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false);\r\n              setFaceDetacting(false);\r\n            }, 3000);\r\n          });\r\n        }\r\n      });\r\n    }, 6000);\r\n  };\r\n\r\n  \r\n  const detect = async (net) => {\r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      // Make Detections\r\n      const obj = await net.detect(video);\r\n\r\n      // Draw mesh\r\n\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n      console.log(obj);\r\n      const findHuman = obj\r\n        ? obj.filter((box) => {\r\n            return box.class === \"person\" && box.score >= 0.8;\r\n          })\r\n        : null;\r\n\r\n      let humanDetact = findHuman\r\n        ? findHuman.filter((box) => {\r\n            return (\r\n              15 <= box.bbox[0] <= 160 &&\r\n              15 <= box.bbox[1] <= 160 &&\r\n              box.bbox[2] >= 350 &&\r\n              box.bbox[3] >= 300\r\n            );\r\n          })\r\n        : [];\r\n      console.log(humanDetact);\r\n      if (humanDetact.length > 0) {\r\n        setHumanDetacting(true);\r\n        // new Audio(humanDetactMp3).play();\r\n        return new Promise((resolve) => {\r\n          setTimeout(async () => {\r\n            const imageUrl = webcamRef.current.getScreenshot();\r\n            let imageFile = dataURLtoFile(imageUrl, \"test.jpeg\");\r\n            let formData = new FormData();\r\n            formData.set(\"file\", imageFile);\r\n            const res = await detectFace(formData);\r\n\r\n            if (res.data.status === \"0\") {\r\n              // const gateResponse = await gateLog(res.data.userCode);\r\n              new Audio(putmask).play();\r\n              Swal.fire({\r\n                icon: \"success\",\r\n                title: `${res.data.name}님 어서오세요.`,\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n              setUserCode(res.data.userCode);\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  detectMask(res.data.userCode);\r\n                }, 6000);\r\n              });\r\n            } else if (res.data.status === \"1\") {\r\n              new Audio(notenroll).play();\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"오류\",\r\n                text: \"DB에 등록된 사용자가 아닙니다.\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false);\r\n                }, 2500);\r\n              });\r\n            } else if (res.data.status === \"2\") {\r\n              new Audio(notenroll).play();\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"오류\",\r\n                text: \"중앙으로 와주세요\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false);\r\n                }, 2500);\r\n              });\r\n            }\r\n          }, 2000);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const defineInterval = (net) => {\r\n   \r\n      if (net) {\r\n        const timeId = setInterval(() => {\r\n          detect(net);\r\n        }, 1000);\r\n        setTimerId(timeId);\r\n      }\r\n      if (humanDetacting) {\r\n        console.log(\"인간 인식\", net);\r\n        clearInterval(timerId);\r\n        setTimerId(null);\r\n      }\r\n   \r\n  };\r\n  useEffect(() => {\r\n    async function runModel() {\r\n      const net = await cocossd.load();\r\n      console.log(\"모델 업로드 끝\");\r\n      setModel(net);\r\n      // defineInterval(net)\r\n    }\r\n    runModel();\r\n    // runCocoSsd();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(model);\r\n    if (model && !humanDetacting) {\r\n      console.log(\"확인\");\r\n\r\n      defineInterval(model);\r\n    } else if (model && humanDetacting) {\r\n      defineInterval(null);\r\n    }\r\n  }, [humanDetacting, model]);\r\n\r\n  \r\n  useEffect(() => {\r\n    return clearInterval(timerId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.mainPageContainer}>\r\n      <div className={faceDetacting ? styles.humanNow : styles.noHumanNow}>\r\n        <div\r\n          className={\r\n            humanDetacting\r\n              ? faceDetacting\r\n                ? styles.tmp\r\n                : styles.detectNow\r\n              : styles.nodetectNow\r\n          }\r\n        >\r\n          <Webcam\r\n            ref={webcamRef}\r\n            muted={true}\r\n            mirrored={true}\r\n            screenshotFormat=\"image/jpeg\"\r\n            className={styles.webCamArea}\r\n          />\r\n          <canvas ref={canvasRef} className={styles.webCanvas} />\r\n        </div>\r\n      </div>\r\n      {/* <span className={styles.forMJDesign}>{sentence}</span> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WomanNormalEnter;\r\n","import { useRef, useState, useEffect } from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\r\nimport Webcam from \"react-webcam\";\r\n\r\nimport { drawRect } from \"./utilities\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../common/api\";\r\nimport styles from \"./webcam.module.css\";\r\nimport { detectFace, detectMasking, gateLog } from \"./cameraAPI\";\r\n\r\nimport notenroll from \"./female/enter/notenroll.mp3\";\r\nimport putmask from \"./female/enter/putmask.mp3\";\r\nimport normalenter from \"./female/enter/normalenter.mp3\";\r\nimport abnormalenter from \"./female/enter/abnormalenter.mp3\";\r\nimport twoenter from \"./female/enter/twoenter.mp3\";\r\nimport correctmask from \"./female/enter/correctmask.mp3\";\r\nimport abnormalexit from \"./female/exit/abnormalexit.mp3\";\r\nimport normalexit from \"./female/exit/normalexit.mp3\";\r\nimport notenroll1 from \"./female/exit/notenroll1.mp3\";\r\nimport absent from \"./female/enter/absent.mp3\";\r\nimport Spinner from \"../../common/spinner\";\r\nconst Swal = require(\"sweetalert2\");\r\n\r\nfunction WomanAbnormalEnter() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const [timerId, setTimerId] = useState(null);\r\n  const [humanDetacting, setHumanDetacting] = useState(false);\r\n  const [faceDetacting, setFaceDetacting] = useState(false);\r\n  const [model, setModel] = useState(null);\r\n  const [userCode, setUserCode] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isLoading2, setIsLoading2] = useState(true);\r\n  const handleUserMedia = () => {\r\n    console.log(\"웹캠 로딩끝났어요!!\");\r\n    setIsLoading2(false);\r\n  };\r\n  const dataURLtoFile = (dataurl, fileName) => {\r\n    var arr = dataurl.split(\",\"),\r\n      mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]),\r\n      n = bstr.length,\r\n      u8arr = new Uint8Array(n);\r\n\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n\r\n    return new File([u8arr], fileName, { type: mime });\r\n  };\r\n\r\n  const detectMask = (userCode) => {\r\n    setFaceDetacting(true);\r\n    return new Promise((resolve) => {\r\n      setTimeout(async () => {\r\n        const imageUrl = webcamRef.current.getScreenshot();\r\n        let imageFile = dataURLtoFile(imageUrl, \"test1.jpeg\");\r\n        let formData = new FormData();\r\n        formData.set(\"file\", imageFile);\r\n        formData.set(\"userCode\", userCode);\r\n        const maskRes = await detectMasking(formData);\r\n        if (maskRes.data.status === \"0\") {\r\n          new Audio(abnormalenter).play();\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: `${maskRes.data.name}님 지각입니다.`,\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          });\r\n          // console.log(attendRespone.data); 이걸로 분기\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false);\r\n              setFaceDetacting(false);\r\n              setUserCode(null);\r\n            }, 3000);\r\n          });\r\n        } else if (maskRes.data.status === \"1\") {\r\n          // 모달 창\r\n          new Audio(correctmask).play();\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          });\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false);\r\n              setFaceDetacting(false);\r\n            }, 3000);\r\n          });\r\n        } else if (maskRes.data.status === \"2\") {\r\n          new Audio(correctmask).play();\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          });\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false);\r\n              setFaceDetacting(false);\r\n            }, 3000);\r\n          });\r\n        } else {\r\n          new Audio(correctmask).play();\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          });\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false);\r\n              setFaceDetacting(false);\r\n            }, 3000);\r\n          });\r\n        }\r\n      });\r\n    }, 6000);\r\n  };\r\n\r\n  const detect = async (net) => {\r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      // Make Detections\r\n      const obj = await net.detect(video);\r\n\r\n      // Draw mesh\r\n\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n      console.log(obj);\r\n      const findHuman = obj\r\n        ? obj.filter((box) => {\r\n            return box.class === \"person\" && box.score >= 0.8;\r\n          })\r\n        : null;\r\n\r\n      let humanDetact = findHuman\r\n        ? findHuman.filter((box) => {\r\n            return (\r\n              15 <= box.bbox[0] <= 160 &&\r\n              15 <= box.bbox[1] <= 160 &&\r\n              box.bbox[2] >= 350 &&\r\n              box.bbox[3] >= 300\r\n            );\r\n          })\r\n        : [];\r\n      console.log(humanDetact);\r\n      if (humanDetact.length > 0) {\r\n        setHumanDetacting(true);\r\n        // new Audio(humanDetactMp3).play();\r\n        return new Promise((resolve) => {\r\n          setTimeout(async () => {\r\n            const imageUrl = webcamRef.current.getScreenshot();\r\n            let imageFile = dataURLtoFile(imageUrl, \"test.jpeg\");\r\n            let formData = new FormData();\r\n            formData.set(\"file\", imageFile);\r\n            const res = await detectFace(formData);\r\n\r\n            if (res.data.status === \"0\") {\r\n              // const gateResponse = await gateLog(res.data.userCode);\r\n              new Audio(putmask).play();\r\n              Swal.fire({\r\n                icon: \"success\",\r\n                title: `${res.data.name}님 어서오세요.`,\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n              setUserCode(res.data.userCode);\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  detectMask(res.data.userCode);\r\n                }, 6000);\r\n              });\r\n            } else if (res.data.status === \"1\") {\r\n              new Audio(notenroll).play();\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"오류\",\r\n                text: \"DB에 등록된 사용자가 아닙니다.\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false);\r\n                }, 2500);\r\n              });\r\n            } else if (res.data.status === \"2\") {\r\n              new Audio(notenroll).play();\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"오류\",\r\n                text: \"중앙으로 와주세요\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false);\r\n                }, 2500);\r\n              });\r\n            }\r\n          }, 2000);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const defineInterval = (net) => {\r\n    if (net) {\r\n      const timeId = setInterval(() => {\r\n        detect(net);\r\n      }, 1000);\r\n      setTimerId(timeId);\r\n    }\r\n    if (humanDetacting) {\r\n      console.log(\"인간 인식\", net);\r\n      clearInterval(timerId);\r\n      setTimerId(null);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    async function runModel() {\r\n      const net = await cocossd.load();\r\n      console.log(\"모델 업로드 끝\");\r\n      setModel(net);\r\n      setIsLoading(false);\r\n      // defineInterval(net)\r\n    }\r\n    runModel();\r\n    // runCocoSsd();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(model);\r\n    if (model && !humanDetacting) {\r\n      console.log(\"확인\");\r\n\r\n      defineInterval(model);\r\n    } else if (model && humanDetacting) {\r\n      defineInterval(null);\r\n    }\r\n  }, [humanDetacting, model]);\r\n\r\n  useEffect(() => {\r\n    return clearInterval(timerId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.mainPageContainer}>\r\n      <div\r\n        className={styles.webCamBox}\r\n        style={{\r\n          display: !isLoading && !isLoading2 ? \"\" : \"none\",\r\n        }}\r\n      >\r\n        <div className={faceDetacting ? styles.humanNow : styles.noHumanNow}>\r\n          <div\r\n            className={\r\n              humanDetacting\r\n                ? faceDetacting\r\n                  ? styles.tmp\r\n                  : styles.detectNow\r\n                : styles.nodetectNow\r\n            }\r\n          >\r\n            <Webcam\r\n              ref={webcamRef}\r\n              muted={true}\r\n              mirrored={true}\r\n              screenshotFormat=\"image/jpeg\"\r\n              className={styles.webCamArea}\r\n              onUserMedia={handleUserMedia}\r\n            />\r\n            <canvas ref={canvasRef} className={styles.webCanvas} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: !isLoading && !isLoading2 ? \"none\" : \"\",\r\n        }}\r\n      >\r\n        <Spinner />\r\n      </div>\r\n      {/* <span className={styles.forMJDesign}>{sentence}</span> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WomanAbnormalEnter;\r\n","import { useRef, useState, useEffect } from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\r\nimport Webcam from \"react-webcam\";\r\n\r\nimport { drawRect } from \"./utilities\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../common/api\";\r\nimport styles from \"./webcam.module.css\";\r\nimport { detectFace, detectMasking, gateLog } from \"./cameraAPI\";\r\n\r\nimport notenroll from \"./female/enter/notenroll.mp3\";\r\nimport putmask from \"./female/enter/putmask.mp3\";\r\nimport normalenter from \"./female/enter/normalenter.mp3\";\r\nimport abnormalenter from \"./female/enter/abnormalenter.mp3\";\r\nimport twoenter from \"./female/enter/twoenter.mp3\";\r\nimport correctmask from \"./female/enter/correctmask.mp3\";\r\nimport abnormalexit from \"./female/exit/abnormalexit.mp3\";\r\nimport normalexit from \"./female/exit/normalexit.mp3\";\r\nimport notenroll1 from \"./female/exit/notenroll1.mp3\";\r\nimport absent from \"./female/enter/absent.mp3\";\r\nconst Swal = require(\"sweetalert2\");\r\n\r\nfunction WomanAbsentEnter() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const [timerId, setTimerId] = useState(null);\r\n  const [humanDetacting, setHumanDetacting] = useState(false);\r\n  const [faceDetacting, setFaceDetacting] = useState(false);\r\n  const [model, setModel] = useState(null);\r\n  const [userCode, setUserCode] = useState(null);\r\n\r\n  const dataURLtoFile = (dataurl, fileName) => {\r\n    var arr = dataurl.split(\",\"),\r\n      mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]),\r\n      n = bstr.length,\r\n      u8arr = new Uint8Array(n);\r\n\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n\r\n    return new File([u8arr], fileName, { type: mime });\r\n  };\r\n\r\n  const detectMask = (userCode) => {\r\n    setFaceDetacting(true);\r\n    return new Promise((resolve) => {\r\n      setTimeout(async () => {\r\n        const imageUrl = webcamRef.current.getScreenshot();\r\n        let imageFile = dataURLtoFile(imageUrl, \"test1.jpeg\");\r\n        let formData = new FormData();\r\n        formData.set(\"file\", imageFile);\r\n        formData.set(\"userCode\", userCode);\r\n        const maskRes = await detectMasking(formData);\r\n        if (maskRes.data.status === \"0\") {\r\n            new Audio(absent).play();\r\n            Swal.fire({\r\n              icon: \"success\",\r\n              title: `${maskRes.data.name}님 지각 누적으로 결석했습니다.`,\r\n              showConfirmButton: false,\r\n              timer: 3000,\r\n            });\r\n            // console.log(attendRespone.data); 이걸로 분기\r\n            return new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                setHumanDetacting(false);\r\n                setFaceDetacting(false);\r\n                setUserCode(null);\r\n              }, 3000);\r\n            });\r\n          } \r\n        else if (maskRes.data.status === \"1\") {\r\n          // 모달 창\r\n          new Audio(correctmask).play();\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          });\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false);\r\n              setFaceDetacting(false);\r\n            }, 3000);\r\n          });\r\n        } else if (maskRes.data.status === \"2\") {\r\n          new Audio(correctmask).play();\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          });\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false);\r\n              setFaceDetacting(false);\r\n            }, 3000);\r\n          });\r\n        } else {\r\n          new Audio(correctmask).play();\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          });\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false);\r\n              setFaceDetacting(false);\r\n            }, 3000);\r\n          });\r\n        }\r\n      });\r\n    }, 6000);\r\n  };\r\n\r\n  \r\n  const detect = async (net) => {\r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      // Make Detections\r\n      const obj = await net.detect(video);\r\n\r\n      // Draw mesh\r\n\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n      console.log(obj);\r\n      const findHuman = obj\r\n        ? obj.filter((box) => {\r\n            return box.class === \"person\" && box.score >= 0.8;\r\n          })\r\n        : null;\r\n\r\n      let humanDetact = findHuman\r\n        ? findHuman.filter((box) => {\r\n            return (\r\n              15 <= box.bbox[0] <= 160 &&\r\n              15 <= box.bbox[1] <= 160 &&\r\n              box.bbox[2] >= 350 &&\r\n              box.bbox[3] >= 300\r\n            );\r\n          })\r\n        : [];\r\n      console.log(humanDetact);\r\n      if (humanDetact.length > 0) {\r\n        setHumanDetacting(true);\r\n        // new Audio(humanDetactMp3).play();\r\n        return new Promise((resolve) => {\r\n          setTimeout(async () => {\r\n            const imageUrl = webcamRef.current.getScreenshot();\r\n            let imageFile = dataURLtoFile(imageUrl, \"test.jpeg\");\r\n            let formData = new FormData();\r\n            formData.set(\"file\", imageFile);\r\n            const res = await detectFace(formData);\r\n\r\n            if (res.data.status === \"0\") {\r\n              // const gateResponse = await gateLog(res.data.userCode);\r\n              new Audio(putmask).play();\r\n              Swal.fire({\r\n                icon: \"success\",\r\n                title: `${res.data.name}님 어서오세요.`,\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n              setUserCode(res.data.userCode);\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  detectMask(res.data.userCode);\r\n                }, 6000);\r\n              });\r\n            } else if (res.data.status === \"1\") {\r\n              new Audio(notenroll).play();\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"오류\",\r\n                text: \"DB에 등록된 사용자가 아닙니다.\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false);\r\n                }, 2500);\r\n              });\r\n            } else if (res.data.status === \"2\") {\r\n              new Audio(notenroll).play();\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"오류\",\r\n                text: \"중앙으로 와주세요\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false);\r\n                }, 2500);\r\n              });\r\n            }\r\n          }, 2000);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const defineInterval = (net) => {\r\n   \r\n      if (net) {\r\n        const timeId = setInterval(() => {\r\n          detect(net);\r\n        }, 1000);\r\n        setTimerId(timeId);\r\n      }\r\n      if (humanDetacting) {\r\n        console.log(\"인간 인식\", net);\r\n        clearInterval(timerId);\r\n        setTimerId(null);\r\n      }\r\n   \r\n  };\r\n  useEffect(() => {\r\n    async function runModel() {\r\n      const net = await cocossd.load();\r\n      console.log(\"모델 업로드 끝\");\r\n      setModel(net);\r\n      // defineInterval(net)\r\n    }\r\n    runModel();\r\n    // runCocoSsd();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(model);\r\n    if (model && !humanDetacting) {\r\n      console.log(\"확인\");\r\n\r\n      defineInterval(model);\r\n    } else if (model && humanDetacting) {\r\n      defineInterval(null);\r\n    }\r\n  }, [humanDetacting, model]);\r\n\r\n  useEffect(() => {\r\n    return clearInterval(timerId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.mainPageContainer}>\r\n      <div className={faceDetacting ? styles.humanNow : styles.noHumanNow}>\r\n        <div\r\n          className={\r\n            humanDetacting\r\n              ? faceDetacting\r\n                ? styles.tmp\r\n                : styles.detectNow\r\n              : styles.nodetectNow\r\n          }\r\n        >\r\n          <Webcam\r\n            ref={webcamRef}\r\n            muted={true}\r\n            mirrored={true}\r\n            screenshotFormat=\"image/jpeg\"\r\n            className={styles.webCamArea}\r\n          />\r\n          <canvas ref={canvasRef} className={styles.webCanvas} />\r\n        </div>\r\n      </div>\r\n      {/* <span className={styles.forMJDesign}>{sentence}</span> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WomanAbsentEnter;\r\n","import { useRef, useState, useEffect } from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\r\nimport Webcam from \"react-webcam\";\r\n\r\nimport { drawRect } from \"./utilities\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../common/api\";\r\nimport styles from \"./webcam.module.css\";\r\nimport { detectFace, detectMasking, gateLog } from \"./cameraAPI\";\r\n\r\nimport notenroll from \"./male/enter/notenroll.mp3\";\r\nimport putmask from \"./male/enter/putmask.mp3\";\r\nimport normalenter from \"./male/enter/normalenter.mp3\";\r\nimport abnormalenter from \"./male/exit/abnormalenter.mp3\";\r\nimport twoenter from \"./male/enter/twoenter.mp3\";\r\nimport correctmask from \"./male/enter/correctmask.mp3\";\r\nimport abnormalexit from \"./male/exit/abnormalexit.mp3\";\r\nimport normalexit from \"./male/exit/normalexit.mp3\";\r\nimport notenroll1 from \"./male/exit/notenroll1.mp3\";\r\nimport absent from \"./male/exit/absent.mp3\";\r\nimport Spinner from \"../../common/spinner\";\r\nconst Swal = require(\"sweetalert2\");\r\n\r\nfunction ManNormalEnter() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const [timerId, setTimerId] = useState(null);\r\n  const [humanDetacting, setHumanDetacting] = useState(false);\r\n  const [faceDetacting, setFaceDetacting] = useState(false);\r\n  const [model, setModel] = useState(null);\r\n  const [userCode, setUserCode] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isLoading2, setIsLoading2] = useState(true);\r\n  const handleUserMedia = () => {\r\n    console.log(\"웹캠 로딩끝났어요!!\");\r\n    setIsLoading2(false);\r\n  };\r\n  const dataURLtoFile = (dataurl, fileName) => {\r\n    var arr = dataurl.split(\",\"),\r\n      mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]),\r\n      n = bstr.length,\r\n      u8arr = new Uint8Array(n);\r\n\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n\r\n    return new File([u8arr], fileName, { type: mime });\r\n  };\r\n\r\n  const detectMask = (userCode) => {\r\n    setFaceDetacting(true);\r\n    return new Promise((resolve) => {\r\n      setTimeout(async () => {\r\n        const imageUrl = webcamRef.current.getScreenshot();\r\n        let imageFile = dataURLtoFile(imageUrl, \"test1.jpeg\");\r\n        let formData = new FormData();\r\n        formData.set(\"file\", imageFile);\r\n        formData.set(\"userCode\", userCode);\r\n        const maskRes = await detectMasking(formData);\r\n        if (maskRes.data.status === \"0\") {\r\n          new Audio(normalenter).play();\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: `${maskRes.data.name}님 출석되었습니다.`,\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          });\r\n          // console.log(attendRespone.data); 이걸로 분기\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false);\r\n              setFaceDetacting(false);\r\n              setUserCode(null);\r\n            }, 3000);\r\n          });\r\n        } else if (maskRes.data.status === \"1\") {\r\n          // 모달 창\r\n          new Audio(correctmask).play();\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          });\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false);\r\n              setFaceDetacting(false);\r\n            }, 3000);\r\n          });\r\n        } else if (maskRes.data.status === \"2\") {\r\n          new Audio(correctmask).play();\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          });\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false);\r\n              setFaceDetacting(false);\r\n            }, 3000);\r\n          });\r\n        } else {\r\n          new Audio(correctmask).play();\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          });\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false);\r\n              setFaceDetacting(false);\r\n            }, 3000);\r\n          });\r\n        }\r\n      });\r\n    }, 6000);\r\n  };\r\n\r\n  const detect = async (net) => {\r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      // Make Detections\r\n      const obj = await net.detect(video);\r\n\r\n      // Draw mesh\r\n\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n      console.log(obj);\r\n      const findHuman = obj\r\n        ? obj.filter((box) => {\r\n            return box.class === \"person\" && box.score >= 0.8;\r\n          })\r\n        : null;\r\n\r\n      let humanDetact = findHuman\r\n        ? findHuman.filter((box) => {\r\n            return (\r\n              15 <= box.bbox[0] <= 160 &&\r\n              15 <= box.bbox[1] <= 160 &&\r\n              box.bbox[2] >= 350 &&\r\n              box.bbox[3] >= 300\r\n            );\r\n          })\r\n        : [];\r\n      console.log(humanDetact);\r\n      if (humanDetact.length > 0) {\r\n        setHumanDetacting(true);\r\n        // new Audio(humanDetactMp3).play();\r\n        return new Promise((resolve) => {\r\n          setTimeout(async () => {\r\n            const imageUrl = webcamRef.current.getScreenshot();\r\n            let imageFile = dataURLtoFile(imageUrl, \"test.jpeg\");\r\n            let formData = new FormData();\r\n            formData.set(\"file\", imageFile);\r\n            const res = await detectFace(formData);\r\n\r\n            if (res.data.status === \"0\") {\r\n              // const gateResponse = await gateLog(res.data.userCode);\r\n              new Audio(putmask).play();\r\n              Swal.fire({\r\n                icon: \"success\",\r\n                title: `${res.data.name}님 어서오세요.`,\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n              setUserCode(res.data.userCode);\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  detectMask(res.data.userCode);\r\n                }, 6000);\r\n              });\r\n            } else if (res.data.status === \"1\") {\r\n              new Audio(notenroll).play();\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"오류\",\r\n                text: \"DB에 등록된 사용자가 아닙니다.\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false);\r\n                }, 2500);\r\n              });\r\n            } else if (res.data.status === \"2\") {\r\n              new Audio(notenroll).play();\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"오류\",\r\n                text: \"중앙으로 와주세요\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false);\r\n                }, 2500);\r\n              });\r\n            }\r\n          }, 2000);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const defineInterval = (net) => {\r\n    if (net) {\r\n      const timeId = setInterval(() => {\r\n        detect(net);\r\n      }, 1000);\r\n      setTimerId(timeId);\r\n    }\r\n    if (humanDetacting) {\r\n      console.log(\"인간 인식\", net);\r\n      clearInterval(timerId);\r\n      setTimerId(null);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    async function runModel() {\r\n      const net = await cocossd.load();\r\n      console.log(\"모델 업로드 끝\");\r\n      setModel(net);\r\n      setIsLoading(false);\r\n      // defineInterval(net)\r\n    }\r\n    runModel();\r\n    // runCocoSsd();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(model);\r\n    if (model && !humanDetacting) {\r\n      console.log(\"확인\");\r\n\r\n      defineInterval(model);\r\n    } else if (model && humanDetacting) {\r\n      defineInterval(null);\r\n    }\r\n  }, [humanDetacting, model]);\r\n\r\n  useEffect(() => {\r\n    return clearInterval(timerId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.mainPageContainer}>\r\n      <div\r\n        style={{\r\n          display: !isLoading && !isLoading2 ? \"\" : \"none\",\r\n        }}\r\n      >\r\n        <div className={faceDetacting ? styles.humanNow : styles.noHumanNow}>\r\n          <div\r\n            className={\r\n              humanDetacting\r\n                ? faceDetacting\r\n                  ? styles.tmp\r\n                  : styles.detectNow\r\n                : styles.nodetectNow\r\n            }\r\n          >\r\n            <Webcam\r\n              ref={webcamRef}\r\n              muted={true}\r\n              mirrored={true}\r\n              screenshotFormat=\"image/jpeg\"\r\n              className={styles.webCamArea}\r\n              onUserMedia={handleUserMedia}\r\n            />\r\n            <canvas ref={canvasRef} className={styles.webCanvas} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: !isLoading && !isLoading2 ? \"none\" : \"\",\r\n        }}\r\n      >\r\n        <Spinner />\r\n      </div>\r\n      {/* <span className={styles.forMJDesign}>{sentence}</span> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManNormalEnter;\r\n","import { useRef, useState, useEffect } from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\r\nimport Webcam from \"react-webcam\";\r\n\r\nimport { drawRect } from \"./utilities\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../common/api\";\r\nimport styles from \"./webcam.module.css\";\r\nimport { detectFace, detectMasking, gateLog } from \"./cameraAPI\";\r\n\r\nimport notenroll from \"./male/enter/notenroll.mp3\";\r\nimport putmask from \"./male/enter/putmask.mp3\";\r\nimport normalenter from \"./male/enter/normalenter.mp3\";\r\nimport abnormalenter from \"./male/exit/abnormalenter.mp3\";\r\nimport twoenter from \"./male/enter/twoenter.mp3\";\r\nimport correctmask from \"./male/enter/correctmask.mp3\";\r\nimport abnormalexit from \"./male/exit/abnormalexit.mp3\";\r\nimport normalexit from \"./male/exit/normalexit.mp3\";\r\nimport notenroll1 from \"./male/exit/notenroll1.mp3\";\r\nimport absent from \"./male/exit/absent.mp3\";\r\nconst Swal = require(\"sweetalert2\");\r\n\r\nfunction ManAbnormalEnter() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const [timerId, setTimerId] = useState(null);\r\n  const [humanDetacting, setHumanDetacting] = useState(false);\r\n  const [faceDetacting, setFaceDetacting] = useState(false);\r\n  const [model, setModel] = useState(null);\r\n  const [userCode, setUserCode] = useState(null);\r\n\r\n  const dataURLtoFile = (dataurl, fileName) => {\r\n    var arr = dataurl.split(\",\"),\r\n      mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]),\r\n      n = bstr.length,\r\n      u8arr = new Uint8Array(n);\r\n\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n\r\n    return new File([u8arr], fileName, { type: mime });\r\n  };\r\n\r\n  const detectMask = (userCode) => {\r\n    setFaceDetacting(true);\r\n    return new Promise((resolve) => {\r\n      setTimeout(async () => {\r\n        const imageUrl = webcamRef.current.getScreenshot();\r\n        let imageFile = dataURLtoFile(imageUrl, \"test1.jpeg\");\r\n        let formData = new FormData();\r\n        formData.set(\"file\", imageFile);\r\n        formData.set(\"userCode\", userCode);\r\n        const maskRes = await detectMasking(formData);\r\n        if (maskRes.data.status === \"0\") {\r\n            new Audio(abnormalenter).play();\r\n            Swal.fire({\r\n              icon: \"success\",\r\n              title: `${maskRes.data.name}님 지각입니다.`,\r\n              showConfirmButton: false,\r\n              timer: 3000,\r\n            });\r\n            // console.log(attendRespone.data); 이걸로 분기\r\n            return new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                setHumanDetacting(false);\r\n                setFaceDetacting(false);\r\n                setUserCode(null);\r\n              }, 3000);\r\n            });\r\n          } \r\n        else if (maskRes.data.status === \"1\") {\r\n          // 모달 창\r\n          new Audio(correctmask).play();\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          });\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false);\r\n              setFaceDetacting(false);\r\n            }, 3000);\r\n          });\r\n        } else if (maskRes.data.status === \"2\") {\r\n          new Audio(correctmask).play();\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          });\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false);\r\n              setFaceDetacting(false);\r\n            }, 3000);\r\n          });\r\n        } else {\r\n          new Audio(correctmask).play();\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          });\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false);\r\n              setFaceDetacting(false);\r\n            }, 3000);\r\n          });\r\n        }\r\n      });\r\n    }, 6000);\r\n  };\r\n\r\n  \r\n  const detect = async (net) => {\r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      // Make Detections\r\n      const obj = await net.detect(video);\r\n\r\n      // Draw mesh\r\n\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n      console.log(obj);\r\n      const findHuman = obj\r\n        ? obj.filter((box) => {\r\n            return box.class === \"person\" && box.score >= 0.8;\r\n          })\r\n        : null;\r\n\r\n      let humanDetact = findHuman\r\n        ? findHuman.filter((box) => {\r\n            return (\r\n              15 <= box.bbox[0] <= 160 &&\r\n              15 <= box.bbox[1] <= 160 &&\r\n              box.bbox[2] >= 350 &&\r\n              box.bbox[3] >= 300\r\n            );\r\n          })\r\n        : [];\r\n      console.log(humanDetact);\r\n      if (humanDetact.length > 0) {\r\n        setHumanDetacting(true);\r\n        // new Audio(humanDetactMp3).play();\r\n        return new Promise((resolve) => {\r\n          setTimeout(async () => {\r\n            const imageUrl = webcamRef.current.getScreenshot();\r\n            let imageFile = dataURLtoFile(imageUrl, \"test.jpeg\");\r\n            let formData = new FormData();\r\n            formData.set(\"file\", imageFile);\r\n            const res = await detectFace(formData);\r\n\r\n            if (res.data.status === \"0\") {\r\n              // const gateResponse = await gateLog(res.data.userCode);\r\n              new Audio(putmask).play();\r\n              Swal.fire({\r\n                icon: \"success\",\r\n                title: `${res.data.name}님 어서오세요.`,\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n              setUserCode(res.data.userCode);\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  detectMask(res.data.userCode);\r\n                }, 6000);\r\n              });\r\n            } else if (res.data.status === \"1\") {\r\n              new Audio(notenroll).play();\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"오류\",\r\n                text: \"DB에 등록된 사용자가 아닙니다.\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false);\r\n                }, 2500);\r\n              });\r\n            } else if (res.data.status === \"2\") {\r\n              new Audio(notenroll).play();\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"오류\",\r\n                text: \"중앙으로 와주세요\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false);\r\n                }, 2500);\r\n              });\r\n            }\r\n          }, 2000);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const defineInterval = (net) => {\r\n   \r\n      if (net) {\r\n        const timeId = setInterval(() => {\r\n          detect(net);\r\n        }, 1000);\r\n        setTimerId(timeId);\r\n      }\r\n      if (humanDetacting) {\r\n        console.log(\"인간 인식\", net);\r\n        clearInterval(timerId);\r\n        setTimerId(null);\r\n      }\r\n   \r\n  };\r\n  useEffect(() => {\r\n    async function runModel() {\r\n      const net = await cocossd.load();\r\n      console.log(\"모델 업로드 끝\");\r\n      setModel(net);\r\n      // defineInterval(net)\r\n    }\r\n    runModel();\r\n    // runCocoSsd();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(model);\r\n    if (model && !humanDetacting) {\r\n      console.log(\"확인\");\r\n\r\n      defineInterval(model);\r\n    } else if (model && humanDetacting) {\r\n      defineInterval(null);\r\n    }\r\n  }, [humanDetacting, model]);\r\n\r\n  useEffect(() => {\r\n    return clearInterval(timerId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.mainPageContainer}>\r\n      <div className={faceDetacting ? styles.humanNow : styles.noHumanNow}>\r\n        <div\r\n          className={\r\n            humanDetacting\r\n              ? faceDetacting\r\n                ? styles.tmp\r\n                : styles.detectNow\r\n              : styles.nodetectNow\r\n          }\r\n        >\r\n          <Webcam\r\n            ref={webcamRef}\r\n            muted={true}\r\n            mirrored={true}\r\n            screenshotFormat=\"image/jpeg\"\r\n            className={styles.webCamArea}\r\n          />\r\n          <canvas ref={canvasRef} className={styles.webCanvas} />\r\n        </div>\r\n      </div>\r\n      {/* <span className={styles.forMJDesign}>{sentence}</span> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManAbnormalEnter;\r\n","import { useRef, useState, useEffect } from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\r\nimport Webcam from \"react-webcam\";\r\n\r\nimport { drawRect } from \"./utilities\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../common/api\";\r\nimport styles from \"./webcam.module.css\";\r\nimport { detectFace, detectMasking, gateLog } from \"./cameraAPI\";\r\n\r\nimport notenroll from \"./male/enter/notenroll.mp3\";\r\nimport putmask from \"./male/enter/putmask.mp3\";\r\nimport normalenter from \"./male/enter/normalenter.mp3\";\r\nimport abnormalenter from \"./male/exit/abnormalenter.mp3\";\r\nimport twoenter from \"./male/enter/twoenter.mp3\";\r\nimport correctmask from \"./male/enter/correctmask.mp3\";\r\nimport abnormalexit from \"./male/exit/abnormalexit.mp3\";\r\nimport normalexit from \"./male/exit/normalexit.mp3\";\r\nimport notenroll1 from \"./male/exit/notenroll1.mp3\";\r\nimport absent from \"./male/exit/absent.mp3\";\r\nconst Swal = require(\"sweetalert2\");\r\n\r\nfunction ManAbsentEnter() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const [timerId, setTimerId] = useState(null);\r\n  const [humanDetacting, setHumanDetacting] = useState(false);\r\n  const [faceDetacting, setFaceDetacting] = useState(false);\r\n  const [model, setModel] = useState(null);\r\n  const [userCode, setUserCode] = useState(null);\r\n\r\n  const dataURLtoFile = (dataurl, fileName) => {\r\n    var arr = dataurl.split(\",\"),\r\n      mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]),\r\n      n = bstr.length,\r\n      u8arr = new Uint8Array(n);\r\n\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n\r\n    return new File([u8arr], fileName, { type: mime });\r\n  };\r\n\r\n  const detectMask = (userCode) => {\r\n    setFaceDetacting(true);\r\n    return new Promise((resolve) => {\r\n      setTimeout(async () => {\r\n        const imageUrl = webcamRef.current.getScreenshot();\r\n        let imageFile = dataURLtoFile(imageUrl, \"test1.jpeg\");\r\n        let formData = new FormData();\r\n        formData.set(\"file\", imageFile);\r\n        formData.set(\"userCode\", userCode);\r\n        const maskRes = await detectMasking(formData);\r\n        if (maskRes.data.status === \"0\") {\r\n            new Audio(absent).play();\r\n            Swal.fire({\r\n              icon: \"success\",\r\n              title: `${maskRes.data.name}님 지각 누적으로 결석했습니다.`,\r\n              showConfirmButton: false,\r\n              timer: 3000,\r\n            });\r\n            // console.log(attendRespone.data); 이걸로 분기\r\n            return new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                setHumanDetacting(false);\r\n                setFaceDetacting(false);\r\n                setUserCode(null);\r\n              }, 3000);\r\n            });\r\n          } \r\n        else if (maskRes.data.status === \"1\") {\r\n          // 모달 창\r\n          new Audio(correctmask).play();\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          });\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false);\r\n              setFaceDetacting(false);\r\n            }, 3000);\r\n          });\r\n        } else if (maskRes.data.status === \"2\") {\r\n          new Audio(correctmask).play();\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          });\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false);\r\n              setFaceDetacting(false);\r\n            }, 3000);\r\n          });\r\n        } else {\r\n          new Audio(correctmask).play();\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"오류\",\r\n            text: \"마스크를 착용하지 않았습니다.\",\r\n            showConfirmButton: false,\r\n            timer: 3000,\r\n          });\r\n          return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              setHumanDetacting(false);\r\n              setFaceDetacting(false);\r\n            }, 3000);\r\n          });\r\n        }\r\n      });\r\n    }, 6000);\r\n  };\r\n\r\n  \r\n  const detect = async (net) => {\r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      // Make Detections\r\n      const obj = await net.detect(video);\r\n\r\n      // Draw mesh\r\n\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n      console.log(obj);\r\n      const findHuman = obj\r\n        ? obj.filter((box) => {\r\n            return box.class === \"person\" && box.score >= 0.8;\r\n          })\r\n        : null;\r\n\r\n      let humanDetact = findHuman\r\n        ? findHuman.filter((box) => {\r\n            return (\r\n              15 <= box.bbox[0] <= 160 &&\r\n              15 <= box.bbox[1] <= 160 &&\r\n              box.bbox[2] >= 350 &&\r\n              box.bbox[3] >= 300\r\n            );\r\n          })\r\n        : [];\r\n      console.log(humanDetact);\r\n      if (humanDetact.length > 0) {\r\n        setHumanDetacting(true);\r\n        // new Audio(humanDetactMp3).play();\r\n        return new Promise((resolve) => {\r\n          setTimeout(async () => {\r\n            const imageUrl = webcamRef.current.getScreenshot();\r\n            let imageFile = dataURLtoFile(imageUrl, \"test.jpeg\");\r\n            let formData = new FormData();\r\n            formData.set(\"file\", imageFile);\r\n            const res = await detectFace(formData);\r\n\r\n            if (res.data.status === \"0\") {\r\n              // const gateResponse = await gateLog(res.data.userCode);\r\n              new Audio(putmask).play();\r\n              Swal.fire({\r\n                icon: \"success\",\r\n                title: `${res.data.name}님 어서오세요.`,\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n              setUserCode(res.data.userCode);\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  detectMask(res.data.userCode);\r\n                }, 6000);\r\n              });\r\n            } else if (res.data.status === \"1\") {\r\n              new Audio(notenroll).play();\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"오류\",\r\n                text: \"DB에 등록된 사용자가 아닙니다.\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false);\r\n                }, 2500);\r\n              });\r\n            } else if (res.data.status === \"2\") {\r\n              new Audio(notenroll).play();\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"오류\",\r\n                text: \"중앙으로 와주세요\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false);\r\n                }, 2500);\r\n              });\r\n            }\r\n          }, 2000);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const defineInterval = (net) => {\r\n   \r\n      if (net) {\r\n        const timeId = setInterval(() => {\r\n          detect(net);\r\n        }, 1000);\r\n        setTimerId(timeId);\r\n      }\r\n      if (humanDetacting) {\r\n        console.log(\"인간 인식\", net);\r\n        clearInterval(timerId);\r\n        setTimerId(null);\r\n      }\r\n   \r\n  };\r\n  useEffect(() => {\r\n    async function runModel() {\r\n      const net = await cocossd.load();\r\n      console.log(\"모델 업로드 끝\");\r\n      setModel(net);\r\n      // defineInterval(net)\r\n    }\r\n    runModel();\r\n    // runCocoSsd();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(model);\r\n    if (model && !humanDetacting) {\r\n      console.log(\"확인\");\r\n\r\n      defineInterval(model);\r\n    } else if (model && humanDetacting) {\r\n      defineInterval(null);\r\n    }\r\n  }, [humanDetacting, model]);\r\n\r\n  useEffect(() => {\r\n    return clearInterval(timerId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.mainPageContainer}>\r\n      <div className={faceDetacting ? styles.humanNow : styles.noHumanNow}>\r\n        <div\r\n          className={\r\n            humanDetacting\r\n              ? faceDetacting\r\n                ? styles.tmp\r\n                : styles.detectNow\r\n              : styles.nodetectNow\r\n          }\r\n        >\r\n          <Webcam\r\n            ref={webcamRef}\r\n            muted={true}\r\n            mirrored={true}\r\n            screenshotFormat=\"image/jpeg\"\r\n            className={styles.webCamArea}\r\n          />\r\n          <canvas ref={canvasRef} className={styles.webCanvas} />\r\n        </div>\r\n      </div>\r\n      {/* <span className={styles.forMJDesign}>{sentence}</span> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManAbsentEnter;\r\n","import { useRef, useState, useEffect } from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\r\nimport Webcam from \"react-webcam\";\r\n\r\nimport { drawRect } from \"./utilities\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../common/api\";\r\nimport styles from \"./webcam.module.css\";\r\nimport { detectFace, detectMasking, gateLog } from \"./cameraAPI\";\r\n\r\nimport notenroll from \"./male/enter/notenroll.mp3\";\r\nimport putmask from \"./male/enter/putmask.mp3\";\r\nimport normalenter from \"./male/enter/normalenter.mp3\";\r\nimport abnormalenter from \"./male/exit/abnormalenter.mp3\";\r\nimport twoenter from \"./male/enter/twoenter.mp3\";\r\nimport correctmask from \"./male/enter/correctmask.mp3\";\r\nimport abnormalexit from \"./male/exit/abnormalexit.mp3\";\r\nimport normalexit from \"./male/exit/normalexit.mp3\";\r\nimport notenroll1 from \"./male/exit/notenroll1.mp3\";\r\nimport absent from \"./male/exit/absent.mp3\";\r\nimport Spinner from \"../../common/spinner\";\r\nconst Swal = require(\"sweetalert2\");\r\n\r\nfunction ManAbnormalExit() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const [timerId, setTimerId] = useState(null);\r\n  const [humanDetacting, setHumanDetacting] = useState(false);\r\n  const [faceDetacting, setFaceDetacting] = useState(false);\r\n  const [model, setModel] = useState(null);\r\n  const [userCode, setUserCode] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isLoading2, setIsLoading2] = useState(true);\r\n  const handleUserMedia = () => {\r\n    console.log(\"웹캠 로딩끝났어요!!\");\r\n    setIsLoading2(false);\r\n  };\r\n  const dataURLtoFile = (dataurl, fileName) => {\r\n    var arr = dataurl.split(\",\"),\r\n      mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]),\r\n      n = bstr.length,\r\n      u8arr = new Uint8Array(n);\r\n\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n\r\n    return new File([u8arr], fileName, { type: mime });\r\n  };\r\n\r\n  const detect1 = async (net) => {\r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      // Make Detections\r\n      const obj = await net.detect(video);\r\n\r\n      // Draw mesh\r\n\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n      console.log(obj);\r\n      const findHuman = obj\r\n        ? obj.filter((box) => {\r\n            return box.class === \"person\" && box.score >= 0.8;\r\n          })\r\n        : null;\r\n\r\n      let humanDetact = findHuman\r\n        ? findHuman.filter((box) => {\r\n            return (\r\n              15 <= box.bbox[0] <= 160 &&\r\n              15 <= box.bbox[1] <= 160 &&\r\n              box.bbox[2] >= 350 &&\r\n              box.bbox[3] >= 300\r\n            );\r\n          })\r\n        : [];\r\n      console.log(humanDetact);\r\n      if (humanDetact.length > 0) {\r\n        setHumanDetacting(true);\r\n        // new Audio(humanDetactMp3).play();\r\n        return new Promise((resolve) => {\r\n          setTimeout(async () => {\r\n            const imageUrl = webcamRef.current.getScreenshot();\r\n            let imageFile = dataURLtoFile(imageUrl, \"test.jpeg\");\r\n            let formData = new FormData();\r\n            formData.set(\"file\", imageFile);\r\n            const res = await detectFace(formData);\r\n\r\n            if (res.data.status === \"0\") {\r\n              new Audio(abnormalexit).play();\r\n\r\n              Swal.fire({\r\n                icon: \"success\",\r\n                title: `${res.data.name}님 조기퇴실하셨습니다.`,\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false);\r\n                }, 2500);\r\n              });\r\n            } else if (res.data.status === \"1\") {\r\n              new Audio(notenroll).play();\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"오류\",\r\n                text: \"DB에 등록된 사용자가 아닙니다.\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false);\r\n                }, 2500);\r\n              });\r\n            } else if (res.data.status === \"2\") {\r\n              new Audio(notenroll1).play();\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"오류\",\r\n                text: \"중앙으로 와주세요\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false);\r\n                }, 2500);\r\n              });\r\n            }\r\n          }, 2000);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const defineInterval = (net) => {\r\n    if (net) {\r\n      const timeId = setInterval(() => {\r\n        detect1(net);\r\n      }, 1000);\r\n      setTimerId(timeId);\r\n    }\r\n    if (humanDetacting) {\r\n      console.log(\"인간 인식\", net);\r\n      clearInterval(timerId);\r\n      setTimerId(null);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    async function runModel() {\r\n      const net = await cocossd.load();\r\n      console.log(\"모델 업로드 끝\");\r\n      setModel(net);\r\n      setIsLoading(false);\r\n      // defineInterval(net)\r\n    }\r\n    runModel();\r\n    // runCocoSsd();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(model);\r\n    if (model && !humanDetacting) {\r\n      console.log(\"확인\");\r\n\r\n      defineInterval(model);\r\n    } else if (model && humanDetacting) {\r\n      defineInterval(null);\r\n    }\r\n  }, [humanDetacting, model]);\r\n\r\n  useEffect(() => {\r\n    return clearInterval(timerId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.mainPageContainer}>\r\n      <div\r\n        className={styles.webCamBox}\r\n        style={{\r\n          display: !isLoading && !isLoading2 ? \"\" : \"none\",\r\n        }}\r\n      >\r\n        <div className={faceDetacting ? styles.humanNow : styles.noHumanNow}>\r\n          <div\r\n            className={\r\n              humanDetacting\r\n                ? faceDetacting\r\n                  ? styles.tmp\r\n                  : styles.detectNow\r\n                : styles.nodetectNow\r\n            }\r\n          >\r\n            <Webcam\r\n              ref={webcamRef}\r\n              muted={true}\r\n              mirrored={true}\r\n              screenshotFormat=\"image/jpeg\"\r\n              className={styles.webCamArea}\r\n              onUserMedia={handleUserMedia}\r\n            />\r\n            <canvas ref={canvasRef} className={styles.webCanvas} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: !isLoading && !isLoading2 ? \"none\" : \"\",\r\n        }}\r\n      >\r\n        <Spinner />\r\n      </div>\r\n      {/* <span className={styles.forMJDesign}>{sentence}</span> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManAbnormalExit;\r\n","import { useRef, useState, useEffect } from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\r\nimport Webcam from \"react-webcam\";\r\n\r\nimport { drawRect } from \"./utilities\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../common/api\";\r\nimport styles from \"./webcam.module.css\";\r\nimport { detectFace, detectMasking, gateLog } from \"./cameraAPI\";\r\n\r\nimport notenroll from \"./male/enter/notenroll.mp3\";\r\nimport putmask from \"./male/enter/putmask.mp3\";\r\nimport normalenter from \"./male/enter/normalenter.mp3\";\r\nimport abnormalenter from \"./male/exit/abnormalenter.mp3\";\r\nimport twoenter from \"./male/enter/twoenter.mp3\";\r\nimport correctmask from \"./male/enter/correctmask.mp3\";\r\nimport abnormalexit from \"./male/exit/abnormalexit.mp3\";\r\nimport normalexit from \"./male/exit/normalexit.mp3\";\r\nimport notenroll1 from \"./male/exit/notenroll1.mp3\";\r\nimport absent from \"./male/exit/absent.mp3\";\r\nconst Swal = require(\"sweetalert2\");\r\n\r\nfunction ManNormalExit() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const [timerId, setTimerId] = useState(null);\r\n  const [humanDetacting, setHumanDetacting] = useState(false);\r\n  const [faceDetacting, setFaceDetacting] = useState(false);\r\n  const [model, setModel] = useState(null);\r\n  const [userCode, setUserCode] = useState(null);\r\n\r\n  const dataURLtoFile = (dataurl, fileName) => {\r\n    var arr = dataurl.split(\",\"),\r\n      mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]),\r\n      n = bstr.length,\r\n      u8arr = new Uint8Array(n);\r\n\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n\r\n    return new File([u8arr], fileName, { type: mime });\r\n  };\r\n\r\n  \r\n  const detect1 = async (net) => {\r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      // Make Detections\r\n      const obj = await net.detect(video);\r\n\r\n      // Draw mesh\r\n\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n      console.log(obj);\r\n      const findHuman = obj\r\n        ? obj.filter((box) => {\r\n            return box.class === \"person\" && box.score >= 0.8;\r\n          })\r\n        : null;\r\n\r\n      let humanDetact = findHuman\r\n        ? findHuman.filter((box) => {\r\n            return (\r\n              15 <= box.bbox[0] <= 160 &&\r\n              15 <= box.bbox[1] <= 160 &&\r\n              box.bbox[2] >= 350 &&\r\n              box.bbox[3] >= 300\r\n            );\r\n          })\r\n        : [];\r\n      console.log(humanDetact);\r\n      if (humanDetact.length > 0) {\r\n        setHumanDetacting(true);\r\n        // new Audio(humanDetactMp3).play();\r\n        return new Promise((resolve) => {\r\n          setTimeout(async () => {\r\n            const imageUrl = webcamRef.current.getScreenshot();\r\n            let imageFile = dataURLtoFile(imageUrl, \"test.jpeg\");\r\n            let formData = new FormData();\r\n            formData.set(\"file\", imageFile);\r\n            const res = await detectFace(formData);\r\n\r\n            if (res.data.status === \"0\") {\r\n\r\n                new Audio(normalexit).play();\r\n\r\n                Swal.fire({\r\n                  icon: \"success\",\r\n                  title: `${res.data.name}님 퇴실하셨습니다.`,\r\n                  showConfirmButton: false,\r\n                  timer: 2500,\r\n                });\r\n\r\n                return new Promise((resolve) => {\r\n                  setTimeout(() => {\r\n                    setHumanDetacting(false);\r\n                  }, 2500);\r\n                });\r\n              \r\n              \r\n            } else if (res.data.status === \"1\") {\r\n              new Audio(notenroll).play();\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"오류\",\r\n                text: \"DB에 등록된 사용자가 아닙니다.\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false);\r\n                }, 2500);\r\n              });\r\n            } else if (res.data.status === \"2\") {\r\n              new Audio(notenroll1).play();\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"오류\",\r\n                text: \"중앙으로 와주세요\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false);\r\n                }, 2500);\r\n              });\r\n            }\r\n          }, 2000);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const defineInterval = (net) => {\r\n    \r\n      if (net) {\r\n        const timeId = setInterval(() => {\r\n          detect1(net);\r\n        }, 1000);\r\n        setTimerId(timeId);\r\n      }\r\n      if (humanDetacting) {\r\n        console.log(\"인간 인식\", net);\r\n        clearInterval(timerId);\r\n        setTimerId(null);\r\n      }\r\n    \r\n  };\r\n  useEffect(() => {\r\n    async function runModel() {\r\n      const net = await cocossd.load();\r\n      console.log(\"모델 업로드 끝\");\r\n      setModel(net);\r\n      // defineInterval(net)\r\n    }\r\n    runModel();\r\n    // runCocoSsd();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(model);\r\n    if (model && !humanDetacting) {\r\n      console.log(\"확인\");\r\n\r\n      defineInterval(model);\r\n    } else if (model && humanDetacting) {\r\n      defineInterval(null);\r\n    }\r\n  }, [humanDetacting, model]);\r\n\r\n  useEffect(() => {\r\n    return clearInterval(timerId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.mainPageContainer}>\r\n      <div className={faceDetacting ? styles.humanNow : styles.noHumanNow}>\r\n        <div\r\n          className={\r\n            humanDetacting\r\n              ? faceDetacting\r\n                ? styles.tmp\r\n                : styles.detectNow\r\n              : styles.nodetectNow\r\n          }\r\n        >\r\n          <Webcam\r\n            ref={webcamRef}\r\n            muted={true}\r\n            mirrored={true}\r\n            screenshotFormat=\"image/jpeg\"\r\n            className={styles.webCamArea}\r\n          />\r\n          <canvas ref={canvasRef} className={styles.webCanvas} />\r\n        </div>\r\n      </div>\r\n      {/* <span className={styles.forMJDesign}>{sentence}</span> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManNormalExit;\r\n","import { useRef, useState, useEffect } from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\r\nimport Webcam from \"react-webcam\";\r\n\r\nimport { drawRect } from \"./utilities\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../common/api\";\r\nimport styles from \"./webcam.module.css\";\r\nimport { detectFace, detectMasking, gateLog } from \"./cameraAPI\";\r\n\r\nimport notenroll from \"./female/enter/notenroll.mp3\";\r\nimport putmask from \"./female/enter/putmask.mp3\";\r\nimport normalenter from \"./female/enter/normalenter.mp3\";\r\nimport abnormalenter from \"./female/enter/abnormalenter.mp3\";\r\nimport twoenter from \"./female/enter/twoenter.mp3\";\r\nimport correctmask from \"./female/enter/correctmask.mp3\";\r\nimport abnormalexit from \"./female/exit/abnormalexit.mp3\";\r\nimport normalexit from \"./female/exit/normalexit.mp3\";\r\nimport notenroll1 from \"./female/exit/notenroll1.mp3\";\r\nimport absent from \"./female/enter/absent.mp3\";\r\nconst Swal = require(\"sweetalert2\");\r\n\r\n\r\nfunction WomanAbnormalExit() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const [timerId, setTimerId] = useState(null);\r\n  const [humanDetacting, setHumanDetacting] = useState(false);\r\n  const [faceDetacting, setFaceDetacting] = useState(false);\r\n  const [model, setModel] = useState(null);\r\n  const [userCode, setUserCode] = useState(null);\r\n\r\n  const dataURLtoFile = (dataurl, fileName) => {\r\n    var arr = dataurl.split(\",\"),\r\n      mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]),\r\n      n = bstr.length,\r\n      u8arr = new Uint8Array(n);\r\n\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n\r\n    return new File([u8arr], fileName, { type: mime });\r\n  };\r\n\r\n  \r\n  const detect1 = async (net) => {\r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      // Make Detections\r\n      const obj = await net.detect(video);\r\n\r\n      // Draw mesh\r\n\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n      console.log(obj);\r\n      const findHuman = obj\r\n        ? obj.filter((box) => {\r\n            return box.class === \"person\" && box.score >= 0.8;\r\n          })\r\n        : null;\r\n\r\n      let humanDetact = findHuman\r\n        ? findHuman.filter((box) => {\r\n            return (\r\n              15 <= box.bbox[0] <= 160 &&\r\n              15 <= box.bbox[1] <= 160 &&\r\n              box.bbox[2] >= 350 &&\r\n              box.bbox[3] >= 300\r\n            );\r\n          })\r\n        : [];\r\n      console.log(humanDetact);\r\n      if (humanDetact.length > 0) {\r\n        setHumanDetacting(true);\r\n        // new Audio(humanDetactMp3).play();\r\n        return new Promise((resolve) => {\r\n          setTimeout(async () => {\r\n            const imageUrl = webcamRef.current.getScreenshot();\r\n            let imageFile = dataURLtoFile(imageUrl, \"test.jpeg\");\r\n            let formData = new FormData();\r\n            formData.set(\"file\", imageFile);\r\n            const res = await detectFace(formData);\r\n\r\n            if (res.data.status === \"0\") {\r\n\r\n                new Audio(abnormalexit).play();\r\n\r\n                Swal.fire({\r\n                  icon: \"success\",\r\n                  title: `${res.data.name}님 조기퇴실하셨습니다.`,\r\n                  showConfirmButton: false,\r\n                  timer: 2500,\r\n                });\r\n\r\n                return new Promise((resolve) => {\r\n                  setTimeout(() => {\r\n                    setHumanDetacting(false);\r\n                  }, 2500);\r\n                });\r\n              \r\n              \r\n            } else if (res.data.status === \"1\") {\r\n              new Audio(notenroll).play();\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"오류\",\r\n                text: \"DB에 등록된 사용자가 아닙니다.\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false);\r\n                }, 2500);\r\n              });\r\n            } else if (res.data.status === \"2\") {\r\n              new Audio(notenroll1).play();\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"오류\",\r\n                text: \"중앙으로 와주세요\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false);\r\n                }, 2500);\r\n              });\r\n            }\r\n          }, 2000);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const defineInterval = (net) => {\r\n    \r\n      if (net) {\r\n        const timeId = setInterval(() => {\r\n          detect1(net);\r\n        }, 1000);\r\n        setTimerId(timeId);\r\n      }\r\n      if (humanDetacting) {\r\n        console.log(\"인간 인식\", net);\r\n        clearInterval(timerId);\r\n        setTimerId(null);\r\n      }\r\n    \r\n  };\r\n  useEffect(() => {\r\n    async function runModel() {\r\n      const net = await cocossd.load();\r\n      console.log(\"모델 업로드 끝\");\r\n      setModel(net);\r\n      // defineInterval(net)\r\n    }\r\n    runModel();\r\n    // runCocoSsd();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(model);\r\n    if (model && !humanDetacting) {\r\n      console.log(\"확인\");\r\n\r\n      defineInterval(model);\r\n    } else if (model && humanDetacting) {\r\n      defineInterval(null);\r\n    }\r\n  }, [humanDetacting, model]);\r\n\r\n  useEffect(() => {\r\n    return clearInterval(timerId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.mainPageContainer}>\r\n      <div className={faceDetacting ? styles.humanNow : styles.noHumanNow}>\r\n        <div\r\n          className={\r\n            humanDetacting\r\n              ? faceDetacting\r\n                ? styles.tmp\r\n                : styles.detectNow\r\n              : styles.nodetectNow\r\n          }\r\n        >\r\n          <Webcam\r\n            ref={webcamRef}\r\n            muted={true}\r\n            mirrored={true}\r\n            screenshotFormat=\"image/jpeg\"\r\n            className={styles.webCamArea}\r\n          />\r\n          <canvas ref={canvasRef} className={styles.webCanvas} />\r\n        </div>\r\n      </div>\r\n      {/* <span className={styles.forMJDesign}>{sentence}</span> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WomanAbnormalExit;\r\n","import { useRef, useState, useEffect } from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\r\nimport Webcam from \"react-webcam\";\r\n\r\nimport { drawRect } from \"./utilities\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../common/api\";\r\nimport styles from \"./webcam.module.css\";\r\nimport { detectFace, detectMasking, gateLog } from \"./cameraAPI\";\r\nimport notenroll from \"./female/enter/notenroll.mp3\";\r\nimport putmask from \"./female/enter/putmask.mp3\";\r\nimport normalenter from \"./female/enter/normalenter.mp3\";\r\nimport abnormalenter from \"./female/enter/abnormalenter.mp3\";\r\nimport twoenter from \"./female/enter/twoenter.mp3\";\r\nimport correctmask from \"./female/enter/correctmask.mp3\";\r\nimport abnormalexit from \"./female/exit/abnormalexit.mp3\";\r\nimport normalexit from \"./female/exit/normalexit.mp3\";\r\nimport notenroll1 from \"./female/exit/notenroll1.mp3\";\r\nimport absent from \"./female/enter/absent.mp3\";\r\nimport Spinner from \"../../common/spinner\";\r\nconst Swal = require(\"sweetalert2\");\r\n\r\nfunction WomanNormalExit() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const [timerId, setTimerId] = useState(null);\r\n  const [humanDetacting, setHumanDetacting] = useState(false);\r\n  const [faceDetacting, setFaceDetacting] = useState(false);\r\n  const [model, setModel] = useState(null);\r\n  const [userCode, setUserCode] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isLoading2, setIsLoading2] = useState(true);\r\n  const handleUserMedia = () => {\r\n    console.log(\"웹캠 로딩끝났어요!!\");\r\n    setIsLoading2(false);\r\n  };\r\n\r\n  const dataURLtoFile = (dataurl, fileName) => {\r\n    var arr = dataurl.split(\",\"),\r\n      mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]),\r\n      n = bstr.length,\r\n      u8arr = new Uint8Array(n);\r\n\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n\r\n    return new File([u8arr], fileName, { type: mime });\r\n  };\r\n\r\n  const detect1 = async (net) => {\r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      // Make Detections\r\n      const obj = await net.detect(video);\r\n\r\n      // Draw mesh\r\n\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n      console.log(obj);\r\n      const findHuman = obj\r\n        ? obj.filter((box) => {\r\n            return box.class === \"person\" && box.score >= 0.8;\r\n          })\r\n        : null;\r\n\r\n      let humanDetact = findHuman\r\n        ? findHuman.filter((box) => {\r\n            return (\r\n              15 <= box.bbox[0] <= 160 &&\r\n              15 <= box.bbox[1] <= 160 &&\r\n              box.bbox[2] >= 350 &&\r\n              box.bbox[3] >= 300\r\n            );\r\n          })\r\n        : [];\r\n      console.log(humanDetact);\r\n      if (humanDetact.length > 0) {\r\n        setHumanDetacting(true);\r\n        // new Audio(humanDetactMp3).play();\r\n        return new Promise((resolve) => {\r\n          setTimeout(async () => {\r\n            const imageUrl = webcamRef.current.getScreenshot();\r\n            let imageFile = dataURLtoFile(imageUrl, \"test.jpeg\");\r\n            let formData = new FormData();\r\n            formData.set(\"file\", imageFile);\r\n            const res = await detectFace(formData);\r\n\r\n            if (res.data.status === \"0\") {\r\n              new Audio(normalexit).play();\r\n\r\n              Swal.fire({\r\n                icon: \"success\",\r\n                title: `${res.data.name}님 퇴실하셨습니다.`,\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false);\r\n                }, 2500);\r\n              });\r\n            } else if (res.data.status === \"1\") {\r\n              new Audio(notenroll).play();\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"오류\",\r\n                text: \"DB에 등록된 사용자가 아닙니다.\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false);\r\n                }, 2500);\r\n              });\r\n            } else if (res.data.status === \"2\") {\r\n              new Audio(notenroll1).play();\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"오류\",\r\n                text: \"중앙으로 와주세요\",\r\n                showConfirmButton: false,\r\n                timer: 2500,\r\n              });\r\n              return new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  setHumanDetacting(false);\r\n                }, 2500);\r\n              });\r\n            }\r\n          }, 2000);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const defineInterval = (net) => {\r\n    if (net) {\r\n      const timeId = setInterval(() => {\r\n        detect1(net);\r\n      }, 1000);\r\n      setTimerId(timeId);\r\n    }\r\n    if (humanDetacting) {\r\n      console.log(\"인간 인식\", net);\r\n      clearInterval(timerId);\r\n      setTimerId(null);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    async function runModel() {\r\n      const net = await cocossd.load();\r\n      console.log(\"모델 업로드 끝\");\r\n      setModel(net);\r\n      setIsLoading(false);\r\n      // defineInterval(net)\r\n    }\r\n    runModel();\r\n    // runCocoSsd();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(model);\r\n    if (model && !humanDetacting) {\r\n      console.log(\"확인\");\r\n\r\n      defineInterval(model);\r\n    } else if (model && humanDetacting) {\r\n      defineInterval(null);\r\n    }\r\n  }, [humanDetacting, model]);\r\n\r\n  useEffect(() => {\r\n    return clearInterval(timerId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.mainPageContainer}>\r\n      <div\r\n        className={styles.webCamBox}\r\n        style={{\r\n          display: !isLoading && !isLoading2 ? \"\" : \"none\",\r\n        }}\r\n      >\r\n        <div className={faceDetacting ? styles.humanNow : styles.noHumanNow}>\r\n          <div\r\n            className={\r\n              humanDetacting\r\n                ? faceDetacting\r\n                  ? styles.tmp\r\n                  : styles.detectNow\r\n                : styles.nodetectNow\r\n            }\r\n          >\r\n            <Webcam\r\n              ref={webcamRef}\r\n              muted={true}\r\n              mirrored={true}\r\n              screenshotFormat=\"image/jpeg\"\r\n              className={styles.webCamArea}\r\n              onUserMedia={handleUserMedia}\r\n            />\r\n            <canvas ref={canvasRef} className={styles.webCanvas} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: !isLoading && !isLoading2 ? \"none\" : \"\",\r\n        }}\r\n      >\r\n        <Spinner />\r\n      </div>\r\n      {/* <span className={styles.forMJDesign}>{sentence}</span> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WomanNormalExit;\r\n","import React from \"react\";\r\nimport EnterCamera from \"./features/webcam/enterCamera\";\r\nimport { Switch, BrowserRouter, Route } from \"react-router-dom\";\r\nimport studentForm from \"./features/Admin/studentForm/studentForm\";\r\nimport MainPage from \"./features/Admin/mainPage/mainPage\";\r\nimport LoginPage from \"./features/login/loginPage\";\r\nimport StudentMainPage from \"./features/student/studentMainPage\";\r\nimport ExitCamera from \"./features/webcam/exitCamera\";\r\nimport \"./App.module.css\";\r\nimport PublicRoute from \"./common/router/PublicRouter\";\r\nimport PrivateRoute from \"./common/router/PrivateRouter\";\r\nimport AdminRoute from \"./common/router/AdminRouter\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"./common/api\";\r\nimport WomanNormalEnter from \"./features/webcam/womanNormalEnter\";\r\nimport WomanAbnormalEnter from \"./features/webcam/womanAbnormalEnter\";\r\nimport WomanAbsentEnter from \"./features/webcam/womanAbsentEnter.js\";\r\nimport ManNormalEnter from \"./features/webcam/manNormalEnter\";\r\nimport ManAbnormalEnter from \"./features/webcam/manAbnormalEnter\";\r\nimport ManAbsentEnter from \"./features/webcam/manAbsentEnter\";\r\nimport ManAbnormalExit from \"./features/webcam/manAbnormalExit.js\";\r\nimport ManNormalExit from \"./features/webcam/manNormalExit\";\r\nimport WomanAbnormalExit from \"./features/webcam/womanAbnormalExit\";\r\nimport WomanNormalExit from \"./features/webcam/womanNormalExit\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <AdminRoute exact path=\"/enter\" component={EnterCamera}></AdminRoute>\r\n          <AdminRoute\r\n            exact\r\n            path=\"/admin/form\"\r\n            component={studentForm}\r\n          ></AdminRoute>\r\n          <AdminRoute exact path=\"/admin\" component={MainPage}></AdminRoute>\r\n          <AdminRoute\r\n            exact\r\n            path=\"/admin/woman/0\"\r\n            component={WomanNormalEnter}\r\n          ></AdminRoute>\r\n          <AdminRoute\r\n            exact\r\n            path=\"/admin/woman/2\"\r\n            component={WomanAbnormalExit}\r\n          ></AdminRoute>\r\n          <AdminRoute\r\n            exact\r\n            path=\"/admin/woman/3\"\r\n            component={WomanNormalExit}\r\n          ></AdminRoute>\r\n          <AdminRoute\r\n            exact\r\n            path=\"/admin/woman/10\"\r\n            component={WomanAbnormalEnter}\r\n          ></AdminRoute>\r\n          <AdminRoute\r\n            exact\r\n            path=\"/admin/woman/99\"\r\n            component={WomanAbsentEnter}\r\n          ></AdminRoute>\r\n          <AdminRoute\r\n            exact\r\n            path=\"/admin/man/0\"\r\n            component={ManNormalEnter}\r\n          ></AdminRoute>\r\n          <AdminRoute\r\n            exact\r\n            path=\"/admin/man/2\"\r\n            component={ManAbnormalExit}\r\n          ></AdminRoute>\r\n          <AdminRoute\r\n            exact\r\n            path=\"/admin/man/3\"\r\n            component={ManNormalExit}\r\n          ></AdminRoute>\r\n          <AdminRoute\r\n            exact\r\n            path=\"/admin/man/10\"\r\n            component={ManAbnormalEnter}\r\n          ></AdminRoute>\r\n          <AdminRoute\r\n            exact\r\n            path=\"/admin/man/99\"\r\n            component={ManAbsentEnter}\r\n          ></AdminRoute>\r\n\r\n          <PublicRoute restricted exact path=\"/\" component={LoginPage} />\r\n          <AdminRoute exact path=\"/camera\" component={ExitCamera} />\r\n          <PrivateRoute exact path=\"/student\" component={StudentMainPage} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <App />,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPageChange\":\"loginPage_mainPageChange__311s0\",\"fadeout\":\"loginPage_fadeout__3_4JM\",\"mainPage\":\"loginPage_mainPage__2Et6D\",\"logoName\":\"loginPage_logoName__1_6qS\",\"logoBox\":\"loginPage_logoBox__KSXKB\",\"logo\":\"loginPage_logo__1R2-B\",\"seviceInfo\":\"loginPage_seviceInfo__kYOIE\",\"catchPhrase\":\"loginPage_catchPhrase__25mH2\",\"seviceDetail\":\"loginPage_seviceDetail__mf9Sq\",\"loginInput\":\"loginPage_loginInput__2u8NP\",\"stars\":\"loginPage_stars__2CkFA\",\"twinkle\":\"loginPage_twinkle__1b75S\",\"starBackChange\":\"loginPage_starBackChange__1ySOI\",\"loginBackBefore\":\"loginPage_loginBackBefore__2ddC2\",\"loginBackChanger\":\"loginPage_loginBackChanger__1z6sx\",\"loginBack\":\"loginPage_loginBack__3yxo9\",\"gradient\":\"loginPage_gradient__3yw6g\",\"overlay\":\"loginPage_overlay__2SKwp\",\"overlay_inner\":\"loginPage_overlay_inner__3XU_W\",\"overlay_title\":\"loginPage_overlay_title__3Z82V\",\"division\":\"loginPage_division__1xmpI\",\"inputBox\":\"loginPage_inputBox__3glxO\",\"passwordBox\":\"loginPage_passwordBox__3B_7T\",\"loginBtnBox\":\"loginPage_loginBtnBox__ZbIDJ\",\"loginBtn\":\"loginPage_loginBtn__1sdQs\",\"loginBtnFalse\":\"loginPage_loginBtnFalse__PjYLX\",\"infoBox\":\"loginPage_infoBox__2zM4q\",\"clauseText\":\"loginPage_clauseText__1FyIw\",\"wave\":\"loginPage_wave__2cGMT\",\"drift\":\"loginPage_drift__2rjSO\",\"waveThree\":\"loginPage_waveThree__1iJ-y\",\"waveTwo\":\"loginPage_waveTwo__3lHOP\",\"fadein\":\"loginPage_fadein__1o6S4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wholePage\":\"studentForm_wholePage__jG6Ti\",\"firstPageBox\":\"studentForm_firstPageBox__2wSNi\",\"overlay\":\"studentForm_overlay__-FarN\",\"createTitle\":\"studentForm_createTitle__U9T32\",\"imagePosition\":\"studentForm_imagePosition__3A31R\",\"imagePlace\":\"studentForm_imagePlace__ynUAK\",\"imagePos\":\"studentForm_imagePos__1rlIZ\",\"imageBox\":\"studentForm_imageBox__1zFwx\",\"cutImage\":\"studentForm_cutImage__1erJB\",\"userInputSpan\":\"studentForm_userInputSpan__1fajw\",\"userInputDiv\":\"studentForm_userInputDiv__3JfWJ\",\"userInput\":\"studentForm_userInput__FP-Va\",\"spacingLine\":\"studentForm_spacingLine__2zbj4\",\"userCodeDiv\":\"studentForm_userCodeDiv__2P2MI\",\"userCodeInput\":\"studentForm_userCodeInput__1tDLB\",\"userCodeBtns\":\"studentForm_userCodeBtns__39Zti\",\"userCodeBtnsFalse\":\"studentForm_userCodeBtnsFalse__VlJql\",\"userTeamInput\":\"studentForm_userTeamInput__1BDq4\",\"centered\":\"studentForm_centered__1Kkxm\",\"registerBtn\":\"studentForm_registerBtn__1Ypp8\",\"registerBtnFalse\":\"studentForm_registerBtnFalse__7GRgn\",\"resetBtn\":\"studentForm_resetBtn__2QDhx\",\"backBtn\":\"studentForm_backBtn__3xG57\",\"tgl\":\"studentForm_tgl__PsGbA\",\"tglbtn\":\"studentForm_tglbtn__ewo-w\",\"tgllight\":\"studentForm_tgllight__2PBoj\",\"tglios\":\"studentForm_tglios__3MALU\",\"tglskewed\":\"studentForm_tglskewed__31am7\",\"tglflat\":\"studentForm_tglflat__2lzEi\",\"tglflip\":\"studentForm_tglflip__1G0NF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"attendTitle\":\"attendInformation_attendTitle__3EC7f\",\"attendOverlay\":\"attendInformation_attendOverlay__25mz2\",\"leftSide\":\"attendInformation_leftSide__11br9\",\"userNameBox\":\"attendInformation_userNameBox__30IVB\",\"userName\":\"attendInformation_userName__2nN8L\",\"percentageChart\":\"attendInformation_percentageChart__2_TEh\",\"percentageBox\":\"attendInformation_percentageBox__U0h2L\",\"percentageP\":\"attendInformation_percentageP__7vSO9\",\"logoutBtnBox\":\"attendInformation_logoutBtnBox___T-pO\",\"logoutBtn\":\"attendInformation_logoutBtn__12CfW\",\"rightSide\":\"attendInformation_rightSide__3mljM\",\"rightSideInfoBox\":\"attendInformation_rightSideInfoBox__1iAgM\",\"numBox\":\"attendInformation_numBox__2WtB6\",\"attendOneFloor\":\"attendInformation_attendOneFloor__X75lB\",\"attendTwoFloor\":\"attendInformation_attendTwoFloor__nE6sU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuToggle\":\"adminHeader_menuToggle__3dqMB\",\"menu\":\"adminHeader_menu__3t8NV\",\"logoutBtn\":\"adminHeader_logoutBtn__3oovc\",\"webCamBtn\":\"adminHeader_webCamBtn__GNjV3\",\"webCamList\":\"adminHeader_webCamList__2oK1S\",\"noRegiAllUserBox\":\"adminHeader_noRegiAllUserBox__IK5AH\",\"regiAllUser\":\"adminHeader_regiAllUser__2Xipp\",\"regiAllUserBox\":\"adminHeader_regiAllUserBox__2wl2I\",\"fadeInUp1\":\"adminHeader_fadeInUp1__2P21U\",\"notUploadedFile\":\"adminHeader_notUploadedFile__1mAw8\",\"uploadedFile\":\"adminHeader_uploadedFile__p8yNQ\",\"noDownAllUserBox\":\"adminHeader_noDownAllUserBox__10D5O\",\"downAllUser\":\"adminHeader_downAllUser__3LH5X\",\"downAllUserBox\":\"adminHeader_downAllUserBox__3sutx\",\"onThisPage\":\"adminHeader_onThisPage__7LD-u\"};"],"sourceRoot":""}